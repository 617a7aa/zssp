<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="39082"><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (13 samples, 0.03%)</title><rect x="0.0179%" y="501" width="0.0333%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="13"/><text x="0.2679%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (5 samples, 0.01%)</title><rect x="0.0384%" y="485" width="0.0128%" height="15" fill="rgb(217,0,24)" fg:x="15" fg:w="5"/><text x="0.2884%" y="495.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLEnc as zssp::crypto::aes::Aes256Enc&gt;::encrypt_in_place (35 samples, 0.09%)</title><rect x="0.0512%" y="501" width="0.0896%" height="15" fill="rgb(221,193,54)" fg:x="20" fg:w="35"/><text x="0.3012%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (5 samples, 0.01%)</title><rect x="0.1279%" y="485" width="0.0128%" height="15" fill="rgb(248,212,6)" fg:x="50" fg:w="5"/><text x="0.3779%" y="495.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::encrypt (71 samples, 0.18%)</title><rect x="0.1407%" y="501" width="0.1817%" height="15" fill="rgb(208,68,35)" fg:x="55" fg:w="71"/><text x="0.3907%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_enc (8 samples, 0.02%)</title><rect x="0.3301%" y="501" width="0.0205%" height="15" fill="rgb(232,128,0)" fg:x="129" fg:w="8"/><text x="0.5801%" y="511.50"></text></g><g><title>CRYPTO_THREAD_read_lock (7 samples, 0.02%)</title><rect x="0.3505%" y="501" width="0.0179%" height="15" fill="rgb(207,160,47)" fg:x="137" fg:w="7"/><text x="0.6005%" y="511.50"></text></g><g><title>CRYPTO_gcm128_decrypt (8 samples, 0.02%)</title><rect x="0.3736%" y="501" width="0.0205%" height="15" fill="rgb(228,23,34)" fg:x="146" fg:w="8"/><text x="0.6236%" y="511.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (21 samples, 0.05%)</title><rect x="0.3940%" y="501" width="0.0537%" height="15" fill="rgb(218,30,26)" fg:x="154" fg:w="21"/><text x="0.6440%" y="511.50"></text></g><g><title>CRYPTO_gcm128_encrypt (10 samples, 0.03%)</title><rect x="0.4478%" y="501" width="0.0256%" height="15" fill="rgb(220,122,19)" fg:x="175" fg:w="10"/><text x="0.6978%" y="511.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (16 samples, 0.04%)</title><rect x="0.4734%" y="501" width="0.0409%" height="15" fill="rgb(250,228,42)" fg:x="185" fg:w="16"/><text x="0.7234%" y="511.50"></text></g><g><title>CRYPTO_gcm128_finish (4 samples, 0.01%)</title><rect x="0.5143%" y="501" width="0.0102%" height="15" fill="rgb(240,193,28)" fg:x="201" fg:w="4"/><text x="0.7643%" y="511.50"></text></g><g><title>CRYPTO_gcm128_init (9 samples, 0.02%)</title><rect x="0.5245%" y="501" width="0.0230%" height="15" fill="rgb(216,20,37)" fg:x="205" fg:w="9"/><text x="0.7745%" y="511.50"></text></g><g><title>CRYPTO_gcm128_tag (5 samples, 0.01%)</title><rect x="0.5501%" y="501" width="0.0128%" height="15" fill="rgb(206,188,39)" fg:x="215" fg:w="5"/><text x="0.8001%" y="511.50"></text></g><g><title>CRYPTO_zalloc (25 samples, 0.06%)</title><rect x="0.5629%" y="501" width="0.0640%" height="15" fill="rgb(217,207,13)" fg:x="220" fg:w="25"/><text x="0.8129%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (5 samples, 0.01%)</title><rect x="0.6269%" y="501" width="0.0128%" height="15" fill="rgb(231,73,38)" fg:x="245" fg:w="5"/><text x="0.8769%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_reset (7 samples, 0.02%)</title><rect x="0.6474%" y="501" width="0.0179%" height="15" fill="rgb(225,20,46)" fg:x="253" fg:w="7"/><text x="0.8974%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (12 samples, 0.03%)</title><rect x="0.6653%" y="501" width="0.0307%" height="15" fill="rgb(210,31,41)" fg:x="260" fg:w="12"/><text x="0.9153%" y="511.50"></text></g><g><title>EVP_CIPHER_fetch (6 samples, 0.02%)</title><rect x="0.6960%" y="501" width="0.0154%" height="15" fill="rgb(221,200,47)" fg:x="272" fg:w="6"/><text x="0.9460%" y="511.50"></text></g><g><title>EVP_CIPHER_free (17 samples, 0.04%)</title><rect x="0.7113%" y="501" width="0.0435%" height="15" fill="rgb(226,26,5)" fg:x="278" fg:w="17"/><text x="0.9613%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (4 samples, 0.01%)</title><rect x="0.7702%" y="501" width="0.0102%" height="15" fill="rgb(249,33,26)" fg:x="301" fg:w="4"/><text x="1.0202%" y="511.50"></text></g><g><title>EVP_EncryptFinal_ex (6 samples, 0.02%)</title><rect x="0.7804%" y="501" width="0.0154%" height="15" fill="rgb(235,183,28)" fg:x="305" fg:w="6"/><text x="1.0304%" y="511.50"></text></g><g><title>OPENSSL_LH_retrieve (10 samples, 0.03%)</title><rect x="0.8137%" y="501" width="0.0256%" height="15" fill="rgb(221,5,38)" fg:x="318" fg:w="10"/><text x="1.0637%" y="511.50"></text></g><g><title>OPENSSL_strnlen (5 samples, 0.01%)</title><rect x="0.8469%" y="501" width="0.0128%" height="15" fill="rgb(247,18,42)" fg:x="331" fg:w="5"/><text x="1.0969%" y="511.50"></text></g><g><title>OSSL_PARAM_locate (121 samples, 0.31%)</title><rect x="0.8623%" y="501" width="0.3096%" height="15" fill="rgb(241,131,45)" fg:x="337" fg:w="121"/><text x="1.1123%" y="511.50"></text></g><g><title>OSSL_PARAM_set_uint64 (4 samples, 0.01%)</title><rect x="1.1745%" y="501" width="0.0102%" height="15" fill="rgb(249,31,29)" fg:x="459" fg:w="4"/><text x="1.4245%" y="511.50"></text></g><g><title>[libc.so.6] (60 samples, 0.15%)</title><rect x="1.1898%" y="501" width="0.1535%" height="15" fill="rgb(225,111,53)" fg:x="465" fg:w="60"/><text x="1.4398%" y="511.50"></text></g><g><title>[libcrypto.so.3] (289 samples, 0.74%)</title><rect x="1.3433%" y="501" width="0.7395%" height="15" fill="rgb(238,160,17)" fg:x="525" fg:w="289"/><text x="1.5933%" y="511.50"></text></g><g><title>cfree (13 samples, 0.03%)</title><rect x="2.0905%" y="501" width="0.0333%" height="15" fill="rgb(214,148,48)" fg:x="817" fg:w="13"/><text x="2.3405%" y="511.50"></text></g><g><title>malloc (31 samples, 0.08%)</title><rect x="2.1340%" y="501" width="0.0793%" height="15" fill="rgb(232,36,49)" fg:x="834" fg:w="31"/><text x="2.3840%" y="511.50"></text></g><g><title>pthread_rwlock_rdlock (5 samples, 0.01%)</title><rect x="2.2159%" y="501" width="0.0128%" height="15" fill="rgb(209,103,24)" fg:x="866" fg:w="5"/><text x="2.4659%" y="511.50"></text></g><g><title>pthread_rwlock_unlock (7 samples, 0.02%)</title><rect x="2.2286%" y="501" width="0.0179%" height="15" fill="rgb(229,88,8)" fg:x="871" fg:w="7"/><text x="2.4786%" y="511.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (9 samples, 0.02%)</title><rect x="2.2542%" y="501" width="0.0230%" height="15" fill="rgb(213,181,19)" fg:x="881" fg:w="9"/><text x="2.5042%" y="511.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (11 samples, 0.03%)</title><rect x="2.3233%" y="485" width="0.0281%" height="15" fill="rgb(254,191,54)" fg:x="908" fg:w="11"/><text x="2.5733%" y="495.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_send (11 samples, 0.03%)</title><rect x="2.3515%" y="485" width="0.0281%" height="15" fill="rgb(241,83,37)" fg:x="919" fg:w="11"/><text x="2.6015%" y="495.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (45 samples, 0.12%)</title><rect x="2.2824%" y="501" width="0.1151%" height="15" fill="rgb(233,36,39)" fg:x="892" fg:w="45"/><text x="2.5324%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::write (7 samples, 0.02%)</title><rect x="2.3796%" y="485" width="0.0179%" height="15" fill="rgb(226,3,54)" fg:x="930" fg:w="7"/><text x="2.6296%" y="495.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="2.4333%" y="485" width="0.0128%" height="15" fill="rgb(245,192,40)" fg:x="951" fg:w="5"/><text x="2.6833%" y="495.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::try_recv (19 samples, 0.05%)</title><rect x="2.4026%" y="501" width="0.0486%" height="15" fill="rgb(238,167,29)" fg:x="939" fg:w="19"/><text x="2.6526%" y="511.50"></text></g><g><title>std::sync::mpmc::utils::Backoff::new (11 samples, 0.03%)</title><rect x="2.4513%" y="501" width="0.0281%" height="15" fill="rgb(232,182,51)" fg:x="958" fg:w="11"/><text x="2.7013%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (10 samples, 0.03%)</title><rect x="2.4794%" y="485" width="0.0256%" height="15" fill="rgb(231,60,39)" fg:x="969" fg:w="10"/><text x="2.7294%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.03%)</title><rect x="2.4794%" y="469" width="0.0256%" height="15" fill="rgb(208,69,12)" fg:x="969" fg:w="10"/><text x="2.7294%" y="479.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (11 samples, 0.03%)</title><rect x="2.4794%" y="501" width="0.0281%" height="15" fill="rgb(235,93,37)" fg:x="969" fg:w="11"/><text x="2.7294%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.02%)</title><rect x="2.5075%" y="501" width="0.0179%" height="15" fill="rgb(213,116,39)" fg:x="980" fg:w="7"/><text x="2.7575%" y="511.50"></text></g><g><title>std::time::Instant::elapsed (7 samples, 0.02%)</title><rect x="2.5255%" y="501" width="0.0179%" height="15" fill="rgb(222,207,29)" fg:x="987" fg:w="7"/><text x="2.7755%" y="511.50"></text></g><g><title>syscall (10 samples, 0.03%)</title><rect x="2.5434%" y="501" width="0.0256%" height="15" fill="rgb(206,96,30)" fg:x="994" fg:w="10"/><text x="2.7934%" y="511.50"></text></g><g><title>__entry_text_start (6 samples, 0.02%)</title><rect x="2.5536%" y="485" width="0.0154%" height="15" fill="rgb(218,138,4)" fg:x="998" fg:w="6"/><text x="2.8036%" y="495.50"></text></g><g><title>[anon] (1,024 samples, 2.62%)</title><rect x="0.0154%" y="517" width="2.6201%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="1024"/><text x="0.2654%" y="527.50">[a..</text></g><g><title>zssp::zeta::receive_payload_in_place (25 samples, 0.06%)</title><rect x="2.5715%" y="501" width="0.0640%" height="15" fill="rgb(239,60,40)" fg:x="1005" fg:w="25"/><text x="2.8215%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (7 samples, 0.02%)</title><rect x="2.6176%" y="485" width="0.0179%" height="15" fill="rgb(206,27,48)" fg:x="1023" fg:w="7"/><text x="2.8676%" y="495.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;u8,_&gt; as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="2.6176%" y="469" width="0.0179%" height="15" fill="rgb(225,35,8)" fg:x="1023" fg:w="7"/><text x="2.8676%" y="479.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::try_extend_from_slice (7 samples, 0.02%)</title><rect x="2.6176%" y="453" width="0.0179%" height="15" fill="rgb(250,213,24)" fg:x="1023" fg:w="7"/><text x="2.8676%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="2.6176%" y="437" width="0.0179%" height="15" fill="rgb(247,123,22)" fg:x="1023" fg:w="7"/><text x="2.8676%" y="447.50"></text></g><g><title>&lt;std::sync::mpmc::zero::ZeroToken as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="2.6355%" y="501" width="0.0102%" height="15" fill="rgb(231,138,38)" fg:x="1030" fg:w="4"/><text x="2.8855%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (4 samples, 0.01%)</title><rect x="2.6457%" y="501" width="0.0102%" height="15" fill="rgb(231,145,46)" fg:x="1034" fg:w="4"/><text x="2.8957%" y="511.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="2.6560%" y="501" width="0.0128%" height="15" fill="rgb(251,118,11)" fg:x="1038" fg:w="5"/><text x="2.9060%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (8 samples, 0.02%)</title><rect x="2.6764%" y="501" width="0.0205%" height="15" fill="rgb(217,147,25)" fg:x="1046" fg:w="8"/><text x="2.9264%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (9 samples, 0.02%)</title><rect x="2.6969%" y="501" width="0.0230%" height="15" fill="rgb(247,81,37)" fg:x="1054" fg:w="9"/><text x="2.9469%" y="511.50"></text></g><g><title>[benchmark] (54 samples, 0.14%)</title><rect x="2.6355%" y="517" width="0.1382%" height="15" fill="rgb(209,12,38)" fg:x="1030" fg:w="54"/><text x="2.8855%" y="527.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (17 samples, 0.04%)</title><rect x="2.7302%" y="501" width="0.0435%" height="15" fill="rgb(227,1,9)" fg:x="1067" fg:w="17"/><text x="2.9802%" y="511.50"></text></g><g><title>CRYPTO_THREAD_read_lock (17 samples, 0.04%)</title><rect x="2.8120%" y="501" width="0.0435%" height="15" fill="rgb(248,47,43)" fg:x="1099" fg:w="17"/><text x="3.0620%" y="511.50"></text></g><g><title>CRYPTO_THREAD_run_once (4 samples, 0.01%)</title><rect x="2.8555%" y="501" width="0.0102%" height="15" fill="rgb(221,10,30)" fg:x="1116" fg:w="4"/><text x="3.1055%" y="511.50"></text></g><g><title>CRYPTO_THREAD_unlock (19 samples, 0.05%)</title><rect x="2.8658%" y="501" width="0.0486%" height="15" fill="rgb(210,229,1)" fg:x="1120" fg:w="19"/><text x="3.1158%" y="511.50"></text></g><g><title>CRYPTO_gcm128_finish (14 samples, 0.04%)</title><rect x="2.9144%" y="501" width="0.0358%" height="15" fill="rgb(222,148,37)" fg:x="1139" fg:w="14"/><text x="3.1644%" y="511.50"></text></g><g><title>CRYPTO_gcm128_setiv (7 samples, 0.02%)</title><rect x="2.9502%" y="501" width="0.0179%" height="15" fill="rgb(234,67,33)" fg:x="1153" fg:w="7"/><text x="3.2002%" y="511.50"></text></g><g><title>CRYPTO_get_ex_data (10 samples, 0.03%)</title><rect x="2.9681%" y="501" width="0.0256%" height="15" fill="rgb(247,98,35)" fg:x="1160" fg:w="10"/><text x="3.2181%" y="511.50"></text></g><g><title>OPENSSL_sk_value (4 samples, 0.01%)</title><rect x="3.0065%" y="501" width="0.0102%" height="15" fill="rgb(247,138,52)" fg:x="1175" fg:w="4"/><text x="3.2565%" y="511.50"></text></g><g><title>OSSL_PARAM_construct_size_t (5 samples, 0.01%)</title><rect x="3.0193%" y="501" width="0.0128%" height="15" fill="rgb(213,79,30)" fg:x="1180" fg:w="5"/><text x="3.2693%" y="511.50"></text></g><g><title>[libc.so.6] (17 samples, 0.04%)</title><rect x="3.0346%" y="501" width="0.0435%" height="15" fill="rgb(246,177,23)" fg:x="1186" fg:w="17"/><text x="3.2846%" y="511.50"></text></g><g><title>[libcrypto.so.3] (145 samples, 0.37%)</title><rect x="3.0781%" y="501" width="0.3710%" height="15" fill="rgb(230,62,27)" fg:x="1203" fg:w="145"/><text x="3.3281%" y="511.50"></text></g><g><title>pthread_getspecific (7 samples, 0.02%)</title><rect x="3.4568%" y="501" width="0.0179%" height="15" fill="rgb(216,154,8)" fg:x="1351" fg:w="7"/><text x="3.7068%" y="511.50"></text></g><g><title>pthread_rwlock_rdlock (22 samples, 0.06%)</title><rect x="3.4747%" y="501" width="0.0563%" height="15" fill="rgb(244,35,45)" fg:x="1358" fg:w="22"/><text x="3.7247%" y="511.50"></text></g><g><title>[libcrypto.so.3] (316 samples, 0.81%)</title><rect x="2.7788%" y="517" width="0.8086%" height="15" fill="rgb(251,115,12)" fg:x="1086" fg:w="316"/><text x="3.0288%" y="527.50"></text></g><g><title>pthread_rwlock_unlock (22 samples, 0.06%)</title><rect x="3.5310%" y="501" width="0.0563%" height="15" fill="rgb(240,54,50)" fg:x="1380" fg:w="22"/><text x="3.7810%" y="511.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::hash::Hash&gt;::hash (14 samples, 0.04%)</title><rect x="3.5873%" y="501" width="0.0358%" height="15" fill="rgb(233,84,52)" fg:x="1402" fg:w="14"/><text x="3.8373%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (14 samples, 0.04%)</title><rect x="3.6334%" y="501" width="0.0358%" height="15" fill="rgb(207,117,47)" fg:x="1420" fg:w="14"/><text x="3.8834%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLEnc as zssp::crypto::aes::Aes256Enc&gt;::encrypt_in_place (4 samples, 0.01%)</title><rect x="3.6692%" y="501" width="0.0102%" height="15" fill="rgb(249,43,39)" fg:x="1434" fg:w="4"/><text x="3.9192%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::decrypt_in_place (80 samples, 0.20%)</title><rect x="3.6794%" y="501" width="0.2047%" height="15" fill="rgb(209,38,44)" fg:x="1438" fg:w="80"/><text x="3.9294%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (10 samples, 0.03%)</title><rect x="3.8586%" y="485" width="0.0256%" height="15" fill="rgb(236,212,23)" fg:x="1508" fg:w="10"/><text x="4.1086%" y="495.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::finish (5 samples, 0.01%)</title><rect x="3.8841%" y="501" width="0.0128%" height="15" fill="rgb(242,79,21)" fg:x="1518" fg:w="5"/><text x="4.1341%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::encrypt (8 samples, 0.02%)</title><rect x="3.8969%" y="501" width="0.0205%" height="15" fill="rgb(211,96,35)" fg:x="1523" fg:w="8"/><text x="4.1469%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (8 samples, 0.02%)</title><rect x="3.8969%" y="485" width="0.0205%" height="15" fill="rgb(253,215,40)" fg:x="1523" fg:w="8"/><text x="4.1469%" y="495.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_dec (7 samples, 0.02%)</title><rect x="3.9174%" y="501" width="0.0179%" height="15" fill="rgb(211,81,21)" fg:x="1531" fg:w="7"/><text x="4.1674%" y="511.50"></text></g><g><title>CRYPTO_THREAD_read_lock (6 samples, 0.02%)</title><rect x="3.9353%" y="501" width="0.0154%" height="15" fill="rgb(208,190,38)" fg:x="1538" fg:w="6"/><text x="4.1853%" y="511.50"></text></g><g><title>CRYPTO_THREAD_unlock (11 samples, 0.03%)</title><rect x="3.9532%" y="501" width="0.0281%" height="15" fill="rgb(235,213,38)" fg:x="1545" fg:w="11"/><text x="4.2032%" y="511.50"></text></g><g><title>CRYPTO_gcm128_decrypt (10 samples, 0.03%)</title><rect x="3.9890%" y="501" width="0.0256%" height="15" fill="rgb(237,122,38)" fg:x="1559" fg:w="10"/><text x="4.2390%" y="511.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (22 samples, 0.06%)</title><rect x="4.0146%" y="501" width="0.0563%" height="15" fill="rgb(244,218,35)" fg:x="1569" fg:w="22"/><text x="4.2646%" y="511.50"></text></g><g><title>CRYPTO_gcm128_encrypt (15 samples, 0.04%)</title><rect x="4.0709%" y="501" width="0.0384%" height="15" fill="rgb(240,68,47)" fg:x="1591" fg:w="15"/><text x="4.3209%" y="511.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (28 samples, 0.07%)</title><rect x="4.1093%" y="501" width="0.0716%" height="15" fill="rgb(210,16,53)" fg:x="1606" fg:w="28"/><text x="4.3593%" y="511.50"></text></g><g><title>CRYPTO_strndup (5 samples, 0.01%)</title><rect x="4.1912%" y="501" width="0.0128%" height="15" fill="rgb(235,124,12)" fg:x="1638" fg:w="5"/><text x="4.4412%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (10 samples, 0.03%)</title><rect x="4.2040%" y="501" width="0.0256%" height="15" fill="rgb(224,169,11)" fg:x="1643" fg:w="10"/><text x="4.4540%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (4 samples, 0.01%)</title><rect x="4.2347%" y="501" width="0.0102%" height="15" fill="rgb(250,166,2)" fg:x="1655" fg:w="4"/><text x="4.4847%" y="511.50"></text></g><g><title>EVP_CIPHER_get_block_size (9 samples, 0.02%)</title><rect x="4.2603%" y="501" width="0.0230%" height="15" fill="rgb(242,216,29)" fg:x="1665" fg:w="9"/><text x="4.5103%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (54 samples, 0.14%)</title><rect x="4.2935%" y="501" width="0.1382%" height="15" fill="rgb(230,116,27)" fg:x="1678" fg:w="54"/><text x="4.5435%" y="511.50"></text></g><g><title>EVP_EncryptUpdate (45 samples, 0.12%)</title><rect x="4.4368%" y="501" width="0.1151%" height="15" fill="rgb(228,99,48)" fg:x="1734" fg:w="45"/><text x="4.6868%" y="511.50"></text></g><g><title>OPENSSL_LH_retrieve (8 samples, 0.02%)</title><rect x="4.5520%" y="501" width="0.0205%" height="15" fill="rgb(253,11,6)" fg:x="1779" fg:w="8"/><text x="4.8020%" y="511.50"></text></g><g><title>OPENSSL_init_crypto (4 samples, 0.01%)</title><rect x="4.5724%" y="501" width="0.0102%" height="15" fill="rgb(247,143,39)" fg:x="1787" fg:w="4"/><text x="4.8224%" y="511.50"></text></g><g><title>OSSL_PARAM_locate (18 samples, 0.05%)</title><rect x="4.5878%" y="501" width="0.0461%" height="15" fill="rgb(236,97,10)" fg:x="1793" fg:w="18"/><text x="4.8378%" y="511.50"></text></g><g><title>[[vdso]] (8 samples, 0.02%)</title><rect x="4.6390%" y="501" width="0.0205%" height="15" fill="rgb(233,208,19)" fg:x="1813" fg:w="8"/><text x="4.8890%" y="511.50"></text></g><g><title>[benchmark] (13 samples, 0.03%)</title><rect x="4.6594%" y="501" width="0.0333%" height="15" fill="rgb(216,164,2)" fg:x="1821" fg:w="13"/><text x="4.9094%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (13 samples, 0.03%)</title><rect x="4.6594%" y="485" width="0.0333%" height="15" fill="rgb(220,129,5)" fg:x="1821" fg:w="13"/><text x="4.9094%" y="495.50"></text></g><g><title>[libc.so.6] (88 samples, 0.23%)</title><rect x="4.6927%" y="501" width="0.2252%" height="15" fill="rgb(242,17,10)" fg:x="1834" fg:w="88"/><text x="4.9427%" y="511.50"></text></g><g><title>[libcrypto.so.3] (322 samples, 0.82%)</title><rect x="4.9179%" y="501" width="0.8239%" height="15" fill="rgb(242,107,0)" fg:x="1922" fg:w="322"/><text x="5.1679%" y="511.50"></text></g><g><title>__bss_start (11 samples, 0.03%)</title><rect x="5.7418%" y="501" width="0.0281%" height="15" fill="rgb(251,28,31)" fg:x="2244" fg:w="11"/><text x="5.9918%" y="511.50"></text></g><g><title>[libcrypto.so.3] (11 samples, 0.03%)</title><rect x="5.7418%" y="485" width="0.0281%" height="15" fill="rgb(233,223,10)" fg:x="2244" fg:w="11"/><text x="5.9918%" y="495.50"></text></g><g><title>__entry_text_start (39 samples, 0.10%)</title><rect x="6.0335%" y="309" width="0.0998%" height="15" fill="rgb(215,21,27)" fg:x="2358" fg:w="39"/><text x="6.2835%" y="319.50"></text></g><g><title>_copy_to_iter (4 samples, 0.01%)</title><rect x="6.1742%" y="261" width="0.0102%" height="15" fill="rgb(232,23,21)" fg:x="2413" fg:w="4"/><text x="6.4242%" y="271.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="6.3610%" y="85" width="0.0128%" height="15" fill="rgb(244,5,23)" fg:x="2486" fg:w="5"/><text x="6.6110%" y="95.50"></text></g><g><title>_copy_to_iter (37 samples, 0.09%)</title><rect x="6.2919%" y="245" width="0.0947%" height="15" fill="rgb(226,81,46)" fg:x="2459" fg:w="37"/><text x="6.5419%" y="255.50"></text></g><g><title>copyout (29 samples, 0.07%)</title><rect x="6.3124%" y="229" width="0.0742%" height="15" fill="rgb(247,70,30)" fg:x="2467" fg:w="29"/><text x="6.5624%" y="239.50"></text></g><g><title>asm_sysvec_reschedule_ipi (10 samples, 0.03%)</title><rect x="6.3610%" y="213" width="0.0256%" height="15" fill="rgb(212,68,19)" fg:x="2486" fg:w="10"/><text x="6.6110%" y="223.50"></text></g><g><title>sysvec_reschedule_ipi (10 samples, 0.03%)</title><rect x="6.3610%" y="197" width="0.0256%" height="15" fill="rgb(240,187,13)" fg:x="2486" fg:w="10"/><text x="6.6110%" y="207.50"></text></g><g><title>irqentry_exit (10 samples, 0.03%)</title><rect x="6.3610%" y="181" width="0.0256%" height="15" fill="rgb(223,113,26)" fg:x="2486" fg:w="10"/><text x="6.6110%" y="191.50"></text></g><g><title>raw_irqentry_exit_cond_resched (10 samples, 0.03%)</title><rect x="6.3610%" y="165" width="0.0256%" height="15" fill="rgb(206,192,2)" fg:x="2486" fg:w="10"/><text x="6.6110%" y="175.50"></text></g><g><title>preempt_schedule_irq (10 samples, 0.03%)</title><rect x="6.3610%" y="149" width="0.0256%" height="15" fill="rgb(241,108,4)" fg:x="2486" fg:w="10"/><text x="6.6110%" y="159.50"></text></g><g><title>__schedule (10 samples, 0.03%)</title><rect x="6.3610%" y="133" width="0.0256%" height="15" fill="rgb(247,173,49)" fg:x="2486" fg:w="10"/><text x="6.6110%" y="143.50"></text></g><g><title>finish_task_switch.isra.0 (10 samples, 0.03%)</title><rect x="6.3610%" y="117" width="0.0256%" height="15" fill="rgb(224,114,35)" fg:x="2486" fg:w="10"/><text x="6.6110%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.03%)</title><rect x="6.3610%" y="101" width="0.0256%" height="15" fill="rgb(245,159,27)" fg:x="2486" fg:w="10"/><text x="6.6110%" y="111.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="6.3738%" y="85" width="0.0128%" height="15" fill="rgb(245,172,44)" fg:x="2491" fg:w="5"/><text x="6.6238%" y="95.50"></text></g><g><title>__memcpy (6 samples, 0.02%)</title><rect x="6.4301%" y="229" width="0.0154%" height="15" fill="rgb(236,23,11)" fg:x="2513" fg:w="6"/><text x="6.6801%" y="239.50"></text></g><g><title>chacha_block_generic (225 samples, 0.58%)</title><rect x="6.5171%" y="213" width="0.5757%" height="15" fill="rgb(205,117,38)" fg:x="2547" fg:w="225"/><text x="6.7671%" y="223.50"></text></g><g><title>chacha_permute (202 samples, 0.52%)</title><rect x="6.5759%" y="197" width="0.5169%" height="15" fill="rgb(237,72,25)" fg:x="2570" fg:w="202"/><text x="6.8259%" y="207.50"></text></g><g><title>__x64_sys_getrandom (367 samples, 0.94%)</title><rect x="6.1563%" y="277" width="0.9391%" height="15" fill="rgb(244,70,9)" fg:x="2406" fg:w="367"/><text x="6.4063%" y="287.50"></text></g><g><title>get_random_bytes_user (354 samples, 0.91%)</title><rect x="6.1896%" y="261" width="0.9058%" height="15" fill="rgb(217,125,39)" fg:x="2419" fg:w="354"/><text x="6.4396%" y="271.50"></text></g><g><title>crng_make_state (276 samples, 0.71%)</title><rect x="6.3891%" y="245" width="0.7062%" height="15" fill="rgb(235,36,10)" fg:x="2497" fg:w="276"/><text x="6.6391%" y="255.50"></text></g><g><title>crng_fast_key_erasure (253 samples, 0.65%)</title><rect x="6.4480%" y="229" width="0.6474%" height="15" fill="rgb(251,123,47)" fg:x="2520" fg:w="253"/><text x="6.6980%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.01%)</title><rect x="7.0953%" y="277" width="0.0102%" height="15" fill="rgb(221,13,13)" fg:x="2773" fg:w="4"/><text x="7.3453%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.03%)</title><rect x="7.1184%" y="261" width="0.0333%" height="15" fill="rgb(238,131,9)" fg:x="2782" fg:w="13"/><text x="7.3684%" y="271.50"></text></g><g><title>fpregs_assert_state_consistent (5 samples, 0.01%)</title><rect x="7.1388%" y="245" width="0.0128%" height="15" fill="rgb(211,50,8)" fg:x="2790" fg:w="5"/><text x="7.3888%" y="255.50"></text></g><g><title>do_syscall_64 (396 samples, 1.01%)</title><rect x="6.1461%" y="293" width="1.0133%" height="15" fill="rgb(245,182,24)" fg:x="2402" fg:w="396"/><text x="6.3961%" y="303.50"></text></g><g><title>syscall_exit_to_user_mode (21 samples, 0.05%)</title><rect x="7.1056%" y="277" width="0.0537%" height="15" fill="rgb(242,14,37)" fg:x="2777" fg:w="21"/><text x="7.3556%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (403 samples, 1.03%)</title><rect x="6.1384%" y="309" width="1.0312%" height="15" fill="rgb(246,228,12)" fg:x="2399" fg:w="403"/><text x="6.3884%" y="319.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::next_u64 (485 samples, 1.24%)</title><rect x="5.9567%" y="485" width="1.2410%" height="15" fill="rgb(213,55,15)" fg:x="2328" fg:w="485"/><text x="6.2067%" y="495.50"></text></g><g><title>rand_core::impls::next_u64_via_fill (485 samples, 1.24%)</title><rect x="5.9567%" y="469" width="1.2410%" height="15" fill="rgb(209,9,3)" fg:x="2328" fg:w="485"/><text x="6.2067%" y="479.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::fill_bytes (485 samples, 1.24%)</title><rect x="5.9567%" y="453" width="1.2410%" height="15" fill="rgb(230,59,30)" fg:x="2328" fg:w="485"/><text x="6.2067%" y="463.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (485 samples, 1.24%)</title><rect x="5.9567%" y="437" width="1.2410%" height="15" fill="rgb(209,121,21)" fg:x="2328" fg:w="485"/><text x="6.2067%" y="447.50"></text></g><g><title>getrandom::getrandom (485 samples, 1.24%)</title><rect x="5.9567%" y="421" width="1.2410%" height="15" fill="rgb(220,109,13)" fg:x="2328" fg:w="485"/><text x="6.2067%" y="431.50"></text></g><g><title>getrandom::getrandom_uninit (485 samples, 1.24%)</title><rect x="5.9567%" y="405" width="1.2410%" height="15" fill="rgb(232,18,1)" fg:x="2328" fg:w="485"/><text x="6.2067%" y="415.50"></text></g><g><title>getrandom::imp::getrandom_inner (484 samples, 1.24%)</title><rect x="5.9593%" y="389" width="1.2384%" height="15" fill="rgb(215,41,42)" fg:x="2329" fg:w="484"/><text x="6.2093%" y="399.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (484 samples, 1.24%)</title><rect x="5.9593%" y="373" width="1.2384%" height="15" fill="rgb(224,123,36)" fg:x="2329" fg:w="484"/><text x="6.2093%" y="383.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (482 samples, 1.23%)</title><rect x="5.9644%" y="357" width="1.2333%" height="15" fill="rgb(240,125,3)" fg:x="2331" fg:w="482"/><text x="6.2144%" y="367.50"></text></g><g><title>getrandom::imp::getrandom (482 samples, 1.23%)</title><rect x="5.9644%" y="341" width="1.2333%" height="15" fill="rgb(205,98,50)" fg:x="2331" fg:w="482"/><text x="6.2144%" y="351.50"></text></g><g><title>syscall (482 samples, 1.23%)</title><rect x="5.9644%" y="325" width="1.2333%" height="15" fill="rgb(205,185,37)" fg:x="2331" fg:w="482"/><text x="6.2144%" y="335.50"></text></g><g><title>syscall_return_via_sysret (11 samples, 0.03%)</title><rect x="7.1695%" y="309" width="0.0281%" height="15" fill="rgb(238,207,15)" fg:x="2802" fg:w="11"/><text x="7.4195%" y="319.50"></text></g><g><title>[libc.so.6] (18 samples, 0.05%)</title><rect x="7.1977%" y="485" width="0.0461%" height="15" fill="rgb(213,199,42)" fg:x="2813" fg:w="18"/><text x="7.4477%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="7.2540%" y="485" width="0.0179%" height="15" fill="rgb(235,201,11)" fg:x="2835" fg:w="7"/><text x="7.5040%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="7.2540%" y="469" width="0.0179%" height="15" fill="rgb(207,46,11)" fg:x="2835" fg:w="7"/><text x="7.5040%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.02%)</title><rect x="7.2565%" y="453" width="0.0154%" height="15" fill="rgb(241,35,35)" fg:x="2836" fg:w="6"/><text x="7.5065%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.02%)</title><rect x="7.2565%" y="437" width="0.0154%" height="15" fill="rgb(243,32,47)" fg:x="2836" fg:w="6"/><text x="7.5065%" y="447.50"></text></g><g><title>_ZN3std4sync4mpmc5array16Channel$LT$T$GT$10start_recv17h7800ca29c64cb868E.llvm.12455019271255371362 (7 samples, 0.02%)</title><rect x="7.3307%" y="437" width="0.0179%" height="15" fill="rgb(247,202,23)" fg:x="2865" fg:w="7"/><text x="7.5807%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.01%)</title><rect x="7.3487%" y="437" width="0.0128%" height="15" fill="rgb(219,102,11)" fg:x="2872" fg:w="5"/><text x="7.5987%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (15 samples, 0.04%)</title><rect x="7.3614%" y="421" width="0.0384%" height="15" fill="rgb(243,110,44)" fg:x="2877" fg:w="15"/><text x="7.6114%" y="431.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::read (17 samples, 0.04%)</title><rect x="7.3614%" y="437" width="0.0435%" height="15" fill="rgb(222,74,54)" fg:x="2877" fg:w="17"/><text x="7.6114%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="7.4843%" y="421" width="0.0205%" height="15" fill="rgb(216,99,12)" fg:x="2925" fg:w="8"/><text x="7.7343%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="7.4843%" y="405" width="0.0205%" height="15" fill="rgb(226,22,26)" fg:x="2925" fg:w="8"/><text x="7.7343%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.02%)</title><rect x="7.4843%" y="389" width="0.0205%" height="15" fill="rgb(217,163,10)" fg:x="2925" fg:w="8"/><text x="7.7343%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (8 samples, 0.02%)</title><rect x="7.4843%" y="373" width="0.0205%" height="15" fill="rgb(213,25,53)" fg:x="2925" fg:w="8"/><text x="7.7343%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (47 samples, 0.12%)</title><rect x="7.5047%" y="421" width="0.1203%" height="15" fill="rgb(252,105,26)" fg:x="2933" fg:w="47"/><text x="7.7547%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (47 samples, 0.12%)</title><rect x="7.5047%" y="405" width="0.1203%" height="15" fill="rgb(220,39,43)" fg:x="2933" fg:w="47"/><text x="7.7547%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (143 samples, 0.37%)</title><rect x="7.6250%" y="421" width="0.3659%" height="15" fill="rgb(229,68,48)" fg:x="2980" fg:w="143"/><text x="7.8750%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (143 samples, 0.37%)</title><rect x="7.6250%" y="405" width="0.3659%" height="15" fill="rgb(252,8,32)" fg:x="2980" fg:w="143"/><text x="7.8750%" y="415.50"></text></g><g><title>core::sync::atomic::fence (16 samples, 0.04%)</title><rect x="7.9909%" y="421" width="0.0409%" height="15" fill="rgb(223,20,43)" fg:x="3123" fg:w="16"/><text x="8.2409%" y="431.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (299 samples, 0.77%)</title><rect x="7.2744%" y="485" width="0.7651%" height="15" fill="rgb(229,81,49)" fg:x="2843" fg:w="299"/><text x="7.5244%" y="495.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (299 samples, 0.77%)</title><rect x="7.2744%" y="469" width="0.7651%" height="15" fill="rgb(236,28,36)" fg:x="2843" fg:w="299"/><text x="7.5244%" y="479.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::try_recv (287 samples, 0.73%)</title><rect x="7.3052%" y="453" width="0.7344%" height="15" fill="rgb(249,185,26)" fg:x="2855" fg:w="287"/><text x="7.5552%" y="463.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (248 samples, 0.63%)</title><rect x="7.4049%" y="437" width="0.6346%" height="15" fill="rgb(249,174,33)" fg:x="2894" fg:w="248"/><text x="7.6549%" y="447.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (6 samples, 0.02%)</title><rect x="8.0395%" y="469" width="0.0154%" height="15" fill="rgb(233,201,37)" fg:x="3142" fg:w="6"/><text x="8.2895%" y="479.50"></text></g><g><title>std::time::Instant::duration_since (6 samples, 0.02%)</title><rect x="8.0395%" y="453" width="0.0154%" height="15" fill="rgb(221,78,26)" fg:x="3142" fg:w="6"/><text x="8.2895%" y="463.50"></text></g><g><title>std::time::Instant::checked_duration_since (5 samples, 0.01%)</title><rect x="8.0421%" y="437" width="0.0128%" height="15" fill="rgb(250,127,30)" fg:x="3143" fg:w="5"/><text x="8.2921%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (5 samples, 0.01%)</title><rect x="8.0421%" y="421" width="0.0128%" height="15" fill="rgb(230,49,44)" fg:x="3143" fg:w="5"/><text x="8.2921%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (5 samples, 0.01%)</title><rect x="8.0421%" y="405" width="0.0128%" height="15" fill="rgb(229,67,23)" fg:x="3143" fg:w="5"/><text x="8.2921%" y="415.50"></text></g><g><title>std::time::Instant::elapsed (28 samples, 0.07%)</title><rect x="8.0395%" y="485" width="0.0716%" height="15" fill="rgb(249,83,47)" fg:x="3142" fg:w="28"/><text x="8.2895%" y="495.50"></text></g><g><title>std::time::Instant::now (22 samples, 0.06%)</title><rect x="8.0549%" y="469" width="0.0563%" height="15" fill="rgb(215,43,3)" fg:x="3148" fg:w="22"/><text x="8.3049%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (22 samples, 0.06%)</title><rect x="8.0549%" y="453" width="0.0563%" height="15" fill="rgb(238,154,13)" fg:x="3148" fg:w="22"/><text x="8.3049%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (22 samples, 0.06%)</title><rect x="8.0549%" y="437" width="0.0563%" height="15" fill="rgb(219,56,2)" fg:x="3148" fg:w="22"/><text x="8.3049%" y="447.50"></text></g><g><title>clock_gettime (21 samples, 0.05%)</title><rect x="8.0574%" y="421" width="0.0537%" height="15" fill="rgb(233,0,4)" fg:x="3149" fg:w="21"/><text x="8.3074%" y="431.50"></text></g><g><title>[[vdso]] (21 samples, 0.05%)</title><rect x="8.0574%" y="405" width="0.0537%" height="15" fill="rgb(235,30,7)" fg:x="3149" fg:w="21"/><text x="8.3074%" y="415.50"></text></g><g><title>[[vdso]] (17 samples, 0.04%)</title><rect x="8.0677%" y="389" width="0.0435%" height="15" fill="rgb(250,79,13)" fg:x="3153" fg:w="17"/><text x="8.3177%" y="399.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (386 samples, 0.99%)</title><rect x="8.2851%" y="469" width="0.9877%" height="15" fill="rgb(211,146,34)" fg:x="3238" fg:w="386"/><text x="8.5351%" y="479.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (386 samples, 0.99%)</title><rect x="8.2851%" y="453" width="0.9877%" height="15" fill="rgb(228,22,38)" fg:x="3238" fg:w="386"/><text x="8.5351%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (386 samples, 0.99%)</title><rect x="8.2851%" y="437" width="0.9877%" height="15" fill="rgb(235,168,5)" fg:x="3238" fg:w="386"/><text x="8.5351%" y="447.50"></text></g><g><title>&lt;std::sync::mpmc::zero::ZeroToken as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="9.2805%" y="469" width="0.0102%" height="15" fill="rgb(221,155,16)" fg:x="3627" fg:w="4"/><text x="9.5305%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (61 samples, 0.16%)</title><rect x="9.3112%" y="453" width="0.1561%" height="15" fill="rgb(215,215,53)" fg:x="3639" fg:w="61"/><text x="9.5612%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.16%)</title><rect x="9.3112%" y="437" width="0.1561%" height="15" fill="rgb(223,4,10)" fg:x="3639" fg:w="61"/><text x="9.5612%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (58 samples, 0.15%)</title><rect x="9.3189%" y="421" width="0.1484%" height="15" fill="rgb(234,103,6)" fg:x="3642" fg:w="58"/><text x="9.5689%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (56 samples, 0.14%)</title><rect x="9.3240%" y="405" width="0.1433%" height="15" fill="rgb(227,97,0)" fg:x="3644" fg:w="56"/><text x="9.5740%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (56 samples, 0.14%)</title><rect x="9.3240%" y="389" width="0.1433%" height="15" fill="rgb(234,150,53)" fg:x="3644" fg:w="56"/><text x="9.5740%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (67 samples, 0.17%)</title><rect x="9.4673%" y="453" width="0.1714%" height="15" fill="rgb(228,201,54)" fg:x="3700" fg:w="67"/><text x="9.7173%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (66 samples, 0.17%)</title><rect x="9.4698%" y="437" width="0.1689%" height="15" fill="rgb(222,22,37)" fg:x="3701" fg:w="66"/><text x="9.7198%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (65 samples, 0.17%)</title><rect x="9.4724%" y="421" width="0.1663%" height="15" fill="rgb(237,53,32)" fg:x="3702" fg:w="65"/><text x="9.7224%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (65 samples, 0.17%)</title><rect x="9.4724%" y="405" width="0.1663%" height="15" fill="rgb(233,25,53)" fg:x="3702" fg:w="65"/><text x="9.7224%" y="415.50"></text></g><g><title>EVP_CIPHER_CTX_get_block_size (4 samples, 0.01%)</title><rect x="9.6924%" y="421" width="0.0102%" height="15" fill="rgb(210,40,34)" fg:x="3788" fg:w="4"/><text x="9.9424%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (362 samples, 0.93%)</title><rect x="9.2958%" y="469" width="0.9263%" height="15" fill="rgb(241,220,44)" fg:x="3633" fg:w="362"/><text x="9.5458%" y="479.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (228 samples, 0.58%)</title><rect x="9.6387%" y="453" width="0.5834%" height="15" fill="rgb(235,28,35)" fg:x="3767" fg:w="228"/><text x="9.8887%" y="463.50"></text></g><g><title>EVP_DecryptUpdate (221 samples, 0.57%)</title><rect x="9.6566%" y="437" width="0.5655%" height="15" fill="rgb(210,56,17)" fg:x="3774" fg:w="221"/><text x="9.9066%" y="447.50"></text></g><g><title>[libcrypto.so.3] (203 samples, 0.52%)</title><rect x="9.7027%" y="421" width="0.5194%" height="15" fill="rgb(224,130,29)" fg:x="3792" fg:w="203"/><text x="9.9527%" y="431.50"></text></g><g><title>[libcrypto.so.3] (148 samples, 0.38%)</title><rect x="9.8434%" y="405" width="0.3787%" height="15" fill="rgb(235,212,8)" fg:x="3847" fg:w="148"/><text x="10.0934%" y="415.50"></text></g><g><title>[libcrypto.so.3] (137 samples, 0.35%)</title><rect x="9.8716%" y="389" width="0.3505%" height="15" fill="rgb(223,33,50)" fg:x="3858" fg:w="137"/><text x="10.1216%" y="399.50"></text></g><g><title>__rust_probestack (8 samples, 0.02%)</title><rect x="10.2221%" y="469" width="0.0205%" height="15" fill="rgb(219,149,13)" fg:x="3995" fg:w="8"/><text x="10.4721%" y="479.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade::_{{closure}} (5 samples, 0.01%)</title><rect x="10.2809%" y="405" width="0.0128%" height="15" fill="rgb(250,156,29)" fg:x="4018" fg:w="5"/><text x="10.5309%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (54 samples, 0.14%)</title><rect x="10.2937%" y="405" width="0.1382%" height="15" fill="rgb(216,193,19)" fg:x="4023" fg:w="54"/><text x="10.5437%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (54 samples, 0.14%)</title><rect x="10.2937%" y="389" width="0.1382%" height="15" fill="rgb(216,135,14)" fg:x="4023" fg:w="54"/><text x="10.5437%" y="399.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (78 samples, 0.20%)</title><rect x="10.2554%" y="437" width="0.1996%" height="15" fill="rgb(241,47,5)" fg:x="4008" fg:w="78"/><text x="10.5054%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (72 samples, 0.18%)</title><rect x="10.2707%" y="421" width="0.1842%" height="15" fill="rgb(233,42,35)" fg:x="4014" fg:w="72"/><text x="10.5207%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%)</title><rect x="10.4319%" y="405" width="0.0230%" height="15" fill="rgb(231,13,6)" fg:x="4077" fg:w="9"/><text x="10.6819%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="10.4319%" y="389" width="0.0230%" height="15" fill="rgb(207,181,40)" fg:x="4077" fg:w="9"/><text x="10.6819%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (82 samples, 0.21%)</title><rect x="10.2554%" y="469" width="0.2098%" height="15" fill="rgb(254,173,49)" fg:x="4008" fg:w="82"/><text x="10.5054%" y="479.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive::_{{closure}} (82 samples, 0.21%)</title><rect x="10.2554%" y="453" width="0.2098%" height="15" fill="rgb(221,1,38)" fg:x="4008" fg:w="82"/><text x="10.5054%" y="463.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (4 samples, 0.01%)</title><rect x="10.4549%" y="437" width="0.0102%" height="15" fill="rgb(206,124,46)" fg:x="4086" fg:w="4"/><text x="10.7049%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt; (59 samples, 0.15%)</title><rect x="10.4652%" y="469" width="0.1510%" height="15" fill="rgb(249,21,11)" fg:x="4090" fg:w="59"/><text x="10.7152%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.15%)</title><rect x="10.4652%" y="453" width="0.1510%" height="15" fill="rgb(222,201,40)" fg:x="4090" fg:w="59"/><text x="10.7152%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (54 samples, 0.14%)</title><rect x="10.4780%" y="437" width="0.1382%" height="15" fill="rgb(235,61,29)" fg:x="4095" fg:w="54"/><text x="10.7280%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (54 samples, 0.14%)</title><rect x="10.4780%" y="421" width="0.1382%" height="15" fill="rgb(219,207,3)" fg:x="4095" fg:w="54"/><text x="10.7280%" y="431.50"></text></g><g><title>[libc.so.6] (33 samples, 0.08%)</title><rect x="11.5501%" y="261" width="0.0844%" height="15" fill="rgb(222,56,46)" fg:x="4514" fg:w="33"/><text x="11.8001%" y="271.50"></text></g><g><title>__entry_text_start (6 samples, 0.02%)</title><rect x="11.7266%" y="245" width="0.0154%" height="15" fill="rgb(239,76,54)" fg:x="4583" fg:w="6"/><text x="11.9766%" y="255.50"></text></g><g><title>futex_unqueue (8 samples, 0.02%)</title><rect x="11.7804%" y="165" width="0.0205%" height="15" fill="rgb(231,124,27)" fg:x="4604" fg:w="8"/><text x="12.0304%" y="175.50"></text></g><g><title>update_curr (13 samples, 0.03%)</title><rect x="11.8725%" y="69" width="0.0333%" height="15" fill="rgb(249,195,6)" fg:x="4640" fg:w="13"/><text x="12.1225%" y="79.50"></text></g><g><title>cpuacct_charge (4 samples, 0.01%)</title><rect x="11.8955%" y="53" width="0.0102%" height="15" fill="rgb(237,174,47)" fg:x="4649" fg:w="4"/><text x="12.1455%" y="63.50"></text></g><g><title>dequeue_task (24 samples, 0.06%)</title><rect x="11.8571%" y="117" width="0.0614%" height="15" fill="rgb(206,201,31)" fg:x="4634" fg:w="24"/><text x="12.1071%" y="127.50"></text></g><g><title>dequeue_task_fair (24 samples, 0.06%)</title><rect x="11.8571%" y="101" width="0.0614%" height="15" fill="rgb(231,57,52)" fg:x="4634" fg:w="24"/><text x="12.1071%" y="111.50"></text></g><g><title>dequeue_entity (24 samples, 0.06%)</title><rect x="11.8571%" y="85" width="0.0614%" height="15" fill="rgb(248,177,22)" fg:x="4634" fg:w="24"/><text x="12.1071%" y="95.50"></text></g><g><title>finish_task_switch.isra.0 (12 samples, 0.03%)</title><rect x="11.9185%" y="117" width="0.0307%" height="15" fill="rgb(215,211,37)" fg:x="4658" fg:w="12"/><text x="12.1685%" y="127.50"></text></g><g><title>raw_spin_rq_unlock (7 samples, 0.02%)</title><rect x="11.9313%" y="101" width="0.0179%" height="15" fill="rgb(241,128,51)" fg:x="4663" fg:w="7"/><text x="12.1813%" y="111.50"></text></g><g><title>prepare_task_switch (14 samples, 0.04%)</title><rect x="11.9518%" y="117" width="0.0358%" height="15" fill="rgb(227,165,31)" fg:x="4671" fg:w="14"/><text x="12.2018%" y="127.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.01%)</title><rect x="11.9774%" y="101" width="0.0102%" height="15" fill="rgb(228,167,24)" fg:x="4681" fg:w="4"/><text x="12.2274%" y="111.50"></text></g><g><title>psi_group_change (16 samples, 0.04%)</title><rect x="12.0106%" y="101" width="0.0409%" height="15" fill="rgb(228,143,12)" fg:x="4694" fg:w="16"/><text x="12.2606%" y="111.50"></text></g><g><title>psi_task_switch (31 samples, 0.08%)</title><rect x="11.9902%" y="117" width="0.0793%" height="15" fill="rgb(249,149,8)" fg:x="4686" fg:w="31"/><text x="12.2402%" y="127.50"></text></g><g><title>sched_clock_cpu (6 samples, 0.02%)</title><rect x="12.0541%" y="101" width="0.0154%" height="15" fill="rgb(243,35,44)" fg:x="4711" fg:w="6"/><text x="12.3041%" y="111.50"></text></g><g><title>__schedule (97 samples, 0.25%)</title><rect x="11.8264%" y="133" width="0.2482%" height="15" fill="rgb(246,89,9)" fg:x="4622" fg:w="97"/><text x="12.0764%" y="143.50"></text></g><g><title>futex_wait_queue (109 samples, 0.28%)</title><rect x="11.8008%" y="165" width="0.2789%" height="15" fill="rgb(233,213,13)" fg:x="4612" fg:w="109"/><text x="12.0508%" y="175.50"></text></g><g><title>schedule (102 samples, 0.26%)</title><rect x="11.8187%" y="149" width="0.2610%" height="15" fill="rgb(233,141,41)" fg:x="4619" fg:w="102"/><text x="12.0687%" y="159.50"></text></g><g><title>__get_user_nocheck_4 (11 samples, 0.03%)</title><rect x="12.0848%" y="149" width="0.0281%" height="15" fill="rgb(239,167,4)" fg:x="4723" fg:w="11"/><text x="12.3348%" y="159.50"></text></g><g><title>futex_q_lock (4 samples, 0.01%)</title><rect x="12.1258%" y="149" width="0.0102%" height="15" fill="rgb(209,217,16)" fg:x="4739" fg:w="4"/><text x="12.3758%" y="159.50"></text></g><g><title>futex_q_unlock (4 samples, 0.01%)</title><rect x="12.1360%" y="149" width="0.0102%" height="15" fill="rgb(219,88,35)" fg:x="4743" fg:w="4"/><text x="12.3860%" y="159.50"></text></g><g><title>futex_wait_setup (28 samples, 0.07%)</title><rect x="12.0797%" y="165" width="0.0716%" height="15" fill="rgb(220,193,23)" fg:x="4721" fg:w="28"/><text x="12.3297%" y="175.50"></text></g><g><title>__x64_sys_futex (156 samples, 0.40%)</title><rect x="11.7548%" y="213" width="0.3992%" height="15" fill="rgb(230,90,52)" fg:x="4594" fg:w="156"/><text x="12.0048%" y="223.50"></text></g><g><title>do_futex (154 samples, 0.39%)</title><rect x="11.7599%" y="197" width="0.3940%" height="15" fill="rgb(252,106,19)" fg:x="4596" fg:w="154"/><text x="12.0099%" y="207.50"></text></g><g><title>futex_wait (153 samples, 0.39%)</title><rect x="11.7624%" y="181" width="0.3915%" height="15" fill="rgb(206,74,20)" fg:x="4597" fg:w="153"/><text x="12.0124%" y="191.50"></text></g><g><title>__rseq_handle_notify_resume (10 samples, 0.03%)</title><rect x="12.1795%" y="165" width="0.0256%" height="15" fill="rgb(230,138,44)" fg:x="4760" fg:w="10"/><text x="12.4295%" y="175.50"></text></g><g><title>exit_to_user_mode_loop (17 samples, 0.04%)</title><rect x="12.1642%" y="181" width="0.0435%" height="15" fill="rgb(235,182,43)" fg:x="4754" fg:w="17"/><text x="12.4142%" y="191.50"></text></g><g><title>do_syscall_64 (183 samples, 0.47%)</title><rect x="11.7445%" y="229" width="0.4682%" height="15" fill="rgb(242,16,51)" fg:x="4590" fg:w="183"/><text x="11.9945%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (22 samples, 0.06%)</title><rect x="12.1565%" y="213" width="0.0563%" height="15" fill="rgb(248,9,4)" fg:x="4751" fg:w="22"/><text x="12.4065%" y="223.50"></text></g><g><title>exit_to_user_mode_prepare (22 samples, 0.06%)</title><rect x="12.1565%" y="197" width="0.0563%" height="15" fill="rgb(210,31,22)" fg:x="4751" fg:w="22"/><text x="12.4065%" y="207.50"></text></g><g><title>__lll_lock_wait_private (227 samples, 0.58%)</title><rect x="11.6345%" y="261" width="0.5808%" height="15" fill="rgb(239,54,39)" fg:x="4547" fg:w="227"/><text x="11.8845%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (185 samples, 0.47%)</title><rect x="11.7420%" y="245" width="0.4734%" height="15" fill="rgb(230,99,41)" fg:x="4589" fg:w="185"/><text x="11.9920%" y="255.50"></text></g><g><title>[libc.so.6] (583 samples, 1.49%)</title><rect x="10.7262%" y="277" width="1.4917%" height="15" fill="rgb(253,106,12)" fg:x="4192" fg:w="583"/><text x="10.9762%" y="287.50"></text></g><g><title>__entry_text_start (7 samples, 0.02%)</title><rect x="12.2256%" y="261" width="0.0179%" height="15" fill="rgb(213,46,41)" fg:x="4778" fg:w="7"/><text x="12.4756%" y="271.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.02%)</title><rect x="12.2486%" y="245" width="0.0154%" height="15" fill="rgb(215,133,35)" fg:x="4787" fg:w="6"/><text x="12.4986%" y="255.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="12.2512%" y="229" width="0.0128%" height="15" fill="rgb(213,28,5)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="239.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="12.2512%" y="213" width="0.0128%" height="15" fill="rgb(215,77,49)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="223.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="12.2512%" y="197" width="0.0128%" height="15" fill="rgb(248,100,22)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="207.50"></text></g><g><title>raw_irqentry_exit_cond_resched (5 samples, 0.01%)</title><rect x="12.2512%" y="181" width="0.0128%" height="15" fill="rgb(208,67,9)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="191.50"></text></g><g><title>preempt_schedule_irq (5 samples, 0.01%)</title><rect x="12.2512%" y="165" width="0.0128%" height="15" fill="rgb(219,133,21)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="175.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="12.2512%" y="149" width="0.0128%" height="15" fill="rgb(246,46,29)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="159.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="12.2512%" y="133" width="0.0128%" height="15" fill="rgb(246,185,52)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="143.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="12.2512%" y="117" width="0.0128%" height="15" fill="rgb(252,136,11)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="127.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="12.2512%" y="101" width="0.0128%" height="15" fill="rgb(219,138,53)" fg:x="4788" fg:w="5"/><text x="12.5012%" y="111.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.02%)</title><rect x="12.2793%" y="197" width="0.0205%" height="15" fill="rgb(211,51,23)" fg:x="4799" fg:w="8"/><text x="12.5293%" y="207.50"></text></g><g><title>futex_hash (4 samples, 0.01%)</title><rect x="12.2998%" y="197" width="0.0102%" height="15" fill="rgb(247,221,28)" fg:x="4807" fg:w="4"/><text x="12.5498%" y="207.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.05%)</title><rect x="12.3842%" y="181" width="0.0461%" height="15" fill="rgb(251,222,45)" fg:x="4840" fg:w="18"/><text x="12.6342%" y="191.50"></text></g><g><title>native_queued_spin_lock_slowpath (18 samples, 0.05%)</title><rect x="12.3842%" y="165" width="0.0461%" height="15" fill="rgb(217,162,53)" fg:x="4840" fg:w="18"/><text x="12.6342%" y="175.50"></text></g><g><title>get_futex_key (4 samples, 0.01%)</title><rect x="12.4303%" y="181" width="0.0102%" height="15" fill="rgb(229,93,14)" fg:x="4858" fg:w="4"/><text x="12.6803%" y="191.50"></text></g><g><title>futex_wake (53 samples, 0.14%)</title><rect x="12.3100%" y="197" width="0.1356%" height="15" fill="rgb(209,67,49)" fg:x="4811" fg:w="53"/><text x="12.5600%" y="207.50"></text></g><g><title>__x64_sys_futex (71 samples, 0.18%)</title><rect x="12.2665%" y="229" width="0.1817%" height="15" fill="rgb(213,87,29)" fg:x="4794" fg:w="71"/><text x="12.5165%" y="239.50"></text></g><g><title>do_futex (68 samples, 0.17%)</title><rect x="12.2742%" y="213" width="0.1740%" height="15" fill="rgb(205,151,52)" fg:x="4797" fg:w="68"/><text x="12.5242%" y="223.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="12.4687%" y="197" width="0.0128%" height="15" fill="rgb(253,215,39)" fg:x="4873" fg:w="5"/><text x="12.7187%" y="207.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="12.4687%" y="181" width="0.0128%" height="15" fill="rgb(221,220,41)" fg:x="4873" fg:w="5"/><text x="12.7187%" y="191.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="12.4687%" y="165" width="0.0128%" height="15" fill="rgb(218,133,21)" fg:x="4873" fg:w="5"/><text x="12.7187%" y="175.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="12.4687%" y="149" width="0.0128%" height="15" fill="rgb(221,193,43)" fg:x="4873" fg:w="5"/><text x="12.7187%" y="159.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="12.4687%" y="133" width="0.0128%" height="15" fill="rgb(240,128,52)" fg:x="4873" fg:w="5"/><text x="12.7187%" y="143.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="12.4687%" y="117" width="0.0128%" height="15" fill="rgb(253,114,12)" fg:x="4873" fg:w="5"/><text x="12.7187%" y="127.50"></text></g><g><title>do_syscall_64 (86 samples, 0.22%)</title><rect x="12.2640%" y="245" width="0.2201%" height="15" fill="rgb(215,223,47)" fg:x="4793" fg:w="86"/><text x="12.5140%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.04%)</title><rect x="12.4482%" y="229" width="0.0358%" height="15" fill="rgb(248,225,23)" fg:x="4865" fg:w="14"/><text x="12.6982%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.03%)</title><rect x="12.4507%" y="213" width="0.0333%" height="15" fill="rgb(250,108,0)" fg:x="4866" fg:w="13"/><text x="12.7007%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (94 samples, 0.24%)</title><rect x="12.2460%" y="261" width="0.2405%" height="15" fill="rgb(228,208,7)" fg:x="4786" fg:w="94"/><text x="12.4960%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (730 samples, 1.87%)</title><rect x="10.6213%" y="309" width="1.8679%" height="15" fill="rgb(244,45,10)" fg:x="4151" fg:w="730"/><text x="10.8713%" y="319.50">a..</text></g><g><title>cfree (727 samples, 1.86%)</title><rect x="10.6289%" y="293" width="1.8602%" height="15" fill="rgb(207,125,25)" fg:x="4154" fg:w="727"/><text x="10.8789%" y="303.50">c..</text></g><g><title>__lll_lock_wake_private (106 samples, 0.27%)</title><rect x="12.2179%" y="277" width="0.2712%" height="15" fill="rgb(210,195,18)" fg:x="4775" fg:w="106"/><text x="12.4679%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (732 samples, 1.87%)</title><rect x="10.6213%" y="325" width="1.8730%" height="15" fill="rgb(249,80,12)" fg:x="4151" fg:w="732"/><text x="10.8713%" y="335.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt; (738 samples, 1.89%)</title><rect x="10.6161%" y="469" width="1.8883%" height="15" fill="rgb(221,65,9)" fg:x="4149" fg:w="738"/><text x="10.8661%" y="479.50">c..</text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (738 samples, 1.89%)</title><rect x="10.6161%" y="453" width="1.8883%" height="15" fill="rgb(235,49,36)" fg:x="4149" fg:w="738"/><text x="10.8661%" y="463.50">&lt;..</text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (738 samples, 1.89%)</title><rect x="10.6161%" y="437" width="1.8883%" height="15" fill="rgb(225,32,20)" fg:x="4149" fg:w="738"/><text x="10.8661%" y="447.50">a..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (738 samples, 1.89%)</title><rect x="10.6161%" y="421" width="1.8883%" height="15" fill="rgb(215,141,46)" fg:x="4149" fg:w="738"/><text x="10.8661%" y="431.50">a..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (738 samples, 1.89%)</title><rect x="10.6161%" y="405" width="1.8883%" height="15" fill="rgb(250,160,47)" fg:x="4149" fg:w="738"/><text x="10.8661%" y="415.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (736 samples, 1.88%)</title><rect x="10.6213%" y="389" width="1.8832%" height="15" fill="rgb(216,222,40)" fg:x="4151" fg:w="736"/><text x="10.8713%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (736 samples, 1.88%)</title><rect x="10.6213%" y="373" width="1.8832%" height="15" fill="rgb(234,217,39)" fg:x="4151" fg:w="736"/><text x="10.8713%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (736 samples, 1.88%)</title><rect x="10.6213%" y="357" width="1.8832%" height="15" fill="rgb(207,178,40)" fg:x="4151" fg:w="736"/><text x="10.8713%" y="367.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (736 samples, 1.88%)</title><rect x="10.6213%" y="341" width="1.8832%" height="15" fill="rgb(221,136,13)" fg:x="4151" fg:w="736"/><text x="10.8713%" y="351.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="12.4942%" y="325" width="0.0102%" height="15" fill="rgb(249,199,10)" fg:x="4883" fg:w="4"/><text x="12.7442%" y="335.50"></text></g><g><title>std::sync::poison::Flag::done (9 samples, 0.02%)</title><rect x="12.5045%" y="437" width="0.0230%" height="15" fill="rgb(249,222,13)" fg:x="4887" fg:w="9"/><text x="12.7545%" y="447.50"></text></g><g><title>std::thread::panicking (9 samples, 0.02%)</title><rect x="12.5045%" y="421" width="0.0230%" height="15" fill="rgb(244,185,38)" fg:x="4887" fg:w="9"/><text x="12.7545%" y="431.50"></text></g><g><title>std::panicking::panicking (9 samples, 0.02%)</title><rect x="12.5045%" y="405" width="0.0230%" height="15" fill="rgb(236,202,9)" fg:x="4887" fg:w="9"/><text x="12.7545%" y="415.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (9 samples, 0.02%)</title><rect x="12.5045%" y="389" width="0.0230%" height="15" fill="rgb(250,229,37)" fg:x="4887" fg:w="9"/><text x="12.7545%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%)</title><rect x="12.5045%" y="373" width="0.0230%" height="15" fill="rgb(206,174,23)" fg:x="4887" fg:w="9"/><text x="12.7545%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="12.5045%" y="357" width="0.0230%" height="15" fill="rgb(211,33,43)" fg:x="4887" fg:w="9"/><text x="12.7545%" y="367.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.19%)</title><rect x="12.5045%" y="453" width="0.1945%" height="15" fill="rgb(245,58,50)" fg:x="4887" fg:w="76"/><text x="12.7545%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (67 samples, 0.17%)</title><rect x="12.5275%" y="437" width="0.1714%" height="15" fill="rgb(244,68,36)" fg:x="4896" fg:w="67"/><text x="12.7775%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (65 samples, 0.17%)</title><rect x="12.5326%" y="421" width="0.1663%" height="15" fill="rgb(232,229,15)" fg:x="4898" fg:w="65"/><text x="12.7826%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (65 samples, 0.17%)</title><rect x="12.5326%" y="405" width="0.1663%" height="15" fill="rgb(254,30,23)" fg:x="4898" fg:w="65"/><text x="12.7826%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::fragged::Fragged&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt;&gt; (77 samples, 0.20%)</title><rect x="12.5045%" y="469" width="0.1970%" height="15" fill="rgb(235,160,14)" fg:x="4887" fg:w="77"/><text x="12.7545%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;core::num::nonzero::NonZeroU32,alloc::sync::Weak&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt;&gt;&gt; (77 samples, 0.20%)</title><rect x="12.7015%" y="469" width="0.1970%" height="15" fill="rgb(212,155,44)" fg:x="4964" fg:w="77"/><text x="12.9515%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.20%)</title><rect x="12.7015%" y="453" width="0.1970%" height="15" fill="rgb(226,2,50)" fg:x="4964" fg:w="77"/><text x="12.9515%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (77 samples, 0.20%)</title><rect x="12.7015%" y="437" width="0.1970%" height="15" fill="rgb(234,177,6)" fg:x="4964" fg:w="77"/><text x="12.9515%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (70 samples, 0.18%)</title><rect x="12.7194%" y="421" width="0.1791%" height="15" fill="rgb(217,24,9)" fg:x="4971" fg:w="70"/><text x="12.9694%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (70 samples, 0.18%)</title><rect x="12.7194%" y="405" width="0.1791%" height="15" fill="rgb(220,13,46)" fg:x="4971" fg:w="70"/><text x="12.9694%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;zssp::zeta::MutableState&lt;benchmark::TestApplication&gt;&gt;&gt; (51 samples, 0.13%)</title><rect x="12.8985%" y="469" width="0.1305%" height="15" fill="rgb(239,221,27)" fg:x="5041" fg:w="51"/><text x="13.1485%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.13%)</title><rect x="12.8985%" y="453" width="0.1305%" height="15" fill="rgb(222,198,25)" fg:x="5041" fg:w="51"/><text x="13.1485%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (51 samples, 0.13%)</title><rect x="12.8985%" y="437" width="0.1305%" height="15" fill="rgb(211,99,13)" fg:x="5041" fg:w="51"/><text x="13.1485%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (48 samples, 0.12%)</title><rect x="12.9062%" y="421" width="0.1228%" height="15" fill="rgb(232,111,31)" fg:x="5044" fg:w="48"/><text x="13.1562%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (48 samples, 0.12%)</title><rect x="12.9062%" y="405" width="0.1228%" height="15" fill="rgb(245,82,37)" fg:x="5044" fg:w="48"/><text x="13.1562%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="13.0674%" y="341" width="0.0179%" height="15" fill="rgb(227,149,46)" fg:x="5107" fg:w="7"/><text x="13.3174%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.02%)</title><rect x="13.0700%" y="325" width="0.0154%" height="15" fill="rgb(218,36,50)" fg:x="5108" fg:w="6"/><text x="13.3200%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.04%)</title><rect x="13.1032%" y="325" width="0.0358%" height="15" fill="rgb(226,80,48)" fg:x="5121" fg:w="14"/><text x="13.3532%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (51 samples, 0.13%)</title><rect x="13.0418%" y="389" width="0.1305%" height="15" fill="rgb(238,224,15)" fg:x="5097" fg:w="51"/><text x="13.2918%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (51 samples, 0.13%)</title><rect x="13.0418%" y="373" width="0.1305%" height="15" fill="rgb(241,136,10)" fg:x="5097" fg:w="51"/><text x="13.2918%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (51 samples, 0.13%)</title><rect x="13.0418%" y="357" width="0.1305%" height="15" fill="rgb(208,32,45)" fg:x="5097" fg:w="51"/><text x="13.2918%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (34 samples, 0.09%)</title><rect x="13.0853%" y="341" width="0.0870%" height="15" fill="rgb(207,135,9)" fg:x="5114" fg:w="34"/><text x="13.3353%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.03%)</title><rect x="13.1390%" y="325" width="0.0333%" height="15" fill="rgb(206,86,44)" fg:x="5135" fg:w="13"/><text x="13.3890%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (70 samples, 0.18%)</title><rect x="13.0341%" y="421" width="0.1791%" height="15" fill="rgb(245,177,15)" fg:x="5094" fg:w="70"/><text x="13.2841%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (70 samples, 0.18%)</title><rect x="13.0341%" y="405" width="0.1791%" height="15" fill="rgb(206,64,50)" fg:x="5094" fg:w="70"/><text x="13.2841%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14 samples, 0.04%)</title><rect x="13.1774%" y="389" width="0.0358%" height="15" fill="rgb(234,36,40)" fg:x="5150" fg:w="14"/><text x="13.4274%" y="399.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::hash::Hash&gt;::hash (14 samples, 0.04%)</title><rect x="13.1774%" y="373" width="0.0358%" height="15" fill="rgb(213,64,8)" fg:x="5150" fg:w="14"/><text x="13.4274%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (14 samples, 0.04%)</title><rect x="13.1774%" y="357" width="0.0358%" height="15" fill="rgb(210,75,36)" fg:x="5150" fg:w="14"/><text x="13.4274%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u32 (14 samples, 0.04%)</title><rect x="13.1774%" y="341" width="0.0358%" height="15" fill="rgb(229,88,21)" fg:x="5150" fg:w="14"/><text x="13.4274%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.04%)</title><rect x="13.1774%" y="325" width="0.0358%" height="15" fill="rgb(252,204,47)" fg:x="5150" fg:w="14"/><text x="13.4274%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.04%)</title><rect x="13.1774%" y="309" width="0.0358%" height="15" fill="rgb(208,77,27)" fg:x="5150" fg:w="14"/><text x="13.4274%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.04%)</title><rect x="13.1774%" y="293" width="0.0358%" height="15" fill="rgb(221,76,26)" fg:x="5150" fg:w="14"/><text x="13.4274%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.03%)</title><rect x="13.1851%" y="277" width="0.0281%" height="15" fill="rgb(225,139,18)" fg:x="5153" fg:w="11"/><text x="13.4351%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="13.2260%" y="373" width="0.0102%" height="15" fill="rgb(230,137,11)" fg:x="5169" fg:w="4"/><text x="13.4760%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (8 samples, 0.02%)</title><rect x="13.2363%" y="373" width="0.0205%" height="15" fill="rgb(212,28,1)" fg:x="5173" fg:w="8"/><text x="13.4863%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (8 samples, 0.02%)</title><rect x="13.2363%" y="357" width="0.0205%" height="15" fill="rgb(248,164,17)" fg:x="5173" fg:w="8"/><text x="13.4863%" y="367.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="13.2363%" y="341" width="0.0205%" height="15" fill="rgb(222,171,42)" fg:x="5173" fg:w="8"/><text x="13.4863%" y="351.50"></text></g><g><title>hashbrown::raw::h2 (9 samples, 0.02%)</title><rect x="13.2567%" y="373" width="0.0230%" height="15" fill="rgb(243,84,45)" fg:x="5181" fg:w="9"/><text x="13.5067%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (109 samples, 0.28%)</title><rect x="13.0341%" y="437" width="0.2789%" height="15" fill="rgb(252,49,23)" fg:x="5094" fg:w="109"/><text x="13.2841%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.10%)</title><rect x="13.2132%" y="421" width="0.0998%" height="15" fill="rgb(215,19,7)" fg:x="5164" fg:w="39"/><text x="13.4632%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (39 samples, 0.10%)</title><rect x="13.2132%" y="405" width="0.0998%" height="15" fill="rgb(238,81,41)" fg:x="5164" fg:w="39"/><text x="13.4632%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (39 samples, 0.10%)</title><rect x="13.2132%" y="389" width="0.0998%" height="15" fill="rgb(210,199,37)" fg:x="5164" fg:w="39"/><text x="13.4632%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.03%)</title><rect x="13.2798%" y="373" width="0.0333%" height="15" fill="rgb(244,192,49)" fg:x="5190" fg:w="13"/><text x="13.5298%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.03%)</title><rect x="13.2798%" y="357" width="0.0333%" height="15" fill="rgb(226,211,11)" fg:x="5190" fg:w="13"/><text x="13.5298%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.03%)</title><rect x="13.2798%" y="341" width="0.0333%" height="15" fill="rgb(236,162,54)" fg:x="5190" fg:w="13"/><text x="13.5298%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (113 samples, 0.29%)</title><rect x="13.0341%" y="469" width="0.2891%" height="15" fill="rgb(220,229,9)" fg:x="5094" fg:w="113"/><text x="13.2841%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (113 samples, 0.29%)</title><rect x="13.0341%" y="453" width="0.2891%" height="15" fill="rgb(250,87,22)" fg:x="5094" fg:w="113"/><text x="13.2841%" y="463.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (4 samples, 0.01%)</title><rect x="13.3130%" y="437" width="0.0102%" height="15" fill="rgb(239,43,17)" fg:x="5203" fg:w="4"/><text x="13.5630%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.02%)</title><rect x="13.3233%" y="437" width="0.0154%" height="15" fill="rgb(231,177,25)" fg:x="5207" fg:w="6"/><text x="13.5733%" y="447.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (14 samples, 0.04%)</title><rect x="13.3233%" y="453" width="0.0358%" height="15" fill="rgb(219,179,1)" fg:x="5207" fg:w="14"/><text x="13.5733%" y="463.50"></text></g><g><title>std::sync::poison::Flag::guard (8 samples, 0.02%)</title><rect x="13.3386%" y="437" width="0.0205%" height="15" fill="rgb(238,219,53)" fg:x="5213" fg:w="8"/><text x="13.5886%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.12%)</title><rect x="13.3233%" y="469" width="0.1203%" height="15" fill="rgb(232,167,36)" fg:x="5207" fg:w="47"/><text x="13.5733%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (33 samples, 0.08%)</title><rect x="13.3591%" y="453" width="0.0844%" height="15" fill="rgb(244,19,51)" fg:x="5221" fg:w="33"/><text x="13.6091%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (32 samples, 0.08%)</title><rect x="13.3616%" y="437" width="0.0819%" height="15" fill="rgb(224,6,22)" fg:x="5222" fg:w="32"/><text x="13.6116%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.08%)</title><rect x="13.3616%" y="421" width="0.0819%" height="15" fill="rgb(224,145,5)" fg:x="5222" fg:w="32"/><text x="13.6116%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (117 samples, 0.30%)</title><rect x="13.4870%" y="437" width="0.2994%" height="15" fill="rgb(234,130,49)" fg:x="5271" fg:w="117"/><text x="13.7370%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (117 samples, 0.30%)</title><rect x="13.4870%" y="421" width="0.2994%" height="15" fill="rgb(254,6,2)" fg:x="5271" fg:w="117"/><text x="13.7370%" y="431.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (140 samples, 0.36%)</title><rect x="13.4435%" y="469" width="0.3582%" height="15" fill="rgb(208,96,46)" fg:x="5254" fg:w="140"/><text x="13.6935%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (140 samples, 0.36%)</title><rect x="13.4435%" y="453" width="0.3582%" height="15" fill="rgb(239,3,39)" fg:x="5254" fg:w="140"/><text x="13.6935%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (6 samples, 0.02%)</title><rect x="13.7864%" y="437" width="0.0154%" height="15" fill="rgb(233,210,1)" fg:x="5388" fg:w="6"/><text x="14.0364%" y="447.50"></text></g><g><title>zssp::antireplay::Window&lt;_,_&gt;::check (7 samples, 0.02%)</title><rect x="13.8018%" y="469" width="0.0179%" height="15" fill="rgb(244,137,37)" fg:x="5394" fg:w="7"/><text x="14.0518%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (6 samples, 0.02%)</title><rect x="13.8043%" y="453" width="0.0154%" height="15" fill="rgb(240,136,2)" fg:x="5395" fg:w="6"/><text x="14.0543%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="13.8043%" y="437" width="0.0154%" height="15" fill="rgb(239,18,37)" fg:x="5395" fg:w="6"/><text x="14.0543%" y="447.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (16 samples, 0.04%)</title><rect x="13.8734%" y="453" width="0.0409%" height="15" fill="rgb(218,185,22)" fg:x="5422" fg:w="16"/><text x="14.1234%" y="463.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (16 samples, 0.04%)</title><rect x="13.8734%" y="437" width="0.0409%" height="15" fill="rgb(225,218,4)" fg:x="5422" fg:w="16"/><text x="14.1234%" y="447.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (16 samples, 0.04%)</title><rect x="13.8734%" y="421" width="0.0409%" height="15" fill="rgb(230,182,32)" fg:x="5422" fg:w="16"/><text x="14.1234%" y="431.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (14 samples, 0.04%)</title><rect x="13.8785%" y="405" width="0.0358%" height="15" fill="rgb(242,56,43)" fg:x="5424" fg:w="14"/><text x="14.1285%" y="415.50"></text></g><g><title>core::ptr::write (12 samples, 0.03%)</title><rect x="13.8836%" y="389" width="0.0307%" height="15" fill="rgb(233,99,24)" fg:x="5426" fg:w="12"/><text x="14.1336%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.01%)</title><rect x="13.9297%" y="453" width="0.0102%" height="15" fill="rgb(234,209,42)" fg:x="5444" fg:w="4"/><text x="14.1797%" y="463.50"></text></g><g><title>zssp::fragged::Fragged&lt;Fragment,_&gt;::assemble (51 samples, 0.13%)</title><rect x="13.8197%" y="469" width="0.1305%" height="15" fill="rgb(227,7,12)" fg:x="5401" fg:w="51"/><text x="14.0697%" y="479.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (28 samples, 0.07%)</title><rect x="13.9578%" y="453" width="0.0716%" height="15" fill="rgb(245,203,43)" fg:x="5455" fg:w="28"/><text x="14.2078%" y="463.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (28 samples, 0.07%)</title><rect x="13.9578%" y="437" width="0.0716%" height="15" fill="rgb(238,205,33)" fg:x="5455" fg:w="28"/><text x="14.2078%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (28 samples, 0.07%)</title><rect x="13.9578%" y="421" width="0.0716%" height="15" fill="rgb(231,56,7)" fg:x="5455" fg:w="28"/><text x="14.2078%" y="431.50"></text></g><g><title>zssp::zeta::from_nonce (33 samples, 0.08%)</title><rect x="13.9502%" y="469" width="0.0844%" height="15" fill="rgb(244,186,29)" fg:x="5452" fg:w="33"/><text x="14.2002%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="14.0474%" y="453" width="0.0154%" height="15" fill="rgb(234,111,31)" fg:x="5490" fg:w="6"/><text x="14.2974%" y="463.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.19%)</title><rect x="14.0627%" y="453" width="0.1945%" height="15" fill="rgb(241,149,10)" fg:x="5496" fg:w="76"/><text x="14.3127%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (76 samples, 0.19%)</title><rect x="14.0627%" y="437" width="0.1945%" height="15" fill="rgb(249,206,44)" fg:x="5496" fg:w="76"/><text x="14.3127%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (75 samples, 0.19%)</title><rect x="14.0653%" y="421" width="0.1919%" height="15" fill="rgb(251,153,30)" fg:x="5497" fg:w="75"/><text x="14.3153%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (75 samples, 0.19%)</title><rect x="14.0653%" y="405" width="0.1919%" height="15" fill="rgb(239,152,38)" fg:x="5497" fg:w="75"/><text x="14.3153%" y="415.50"></text></g><g><title>CRYPTO_gcm128_decrypt (231 samples, 0.59%)</title><rect x="14.6615%" y="357" width="0.5911%" height="15" fill="rgb(249,139,47)" fg:x="5730" fg:w="231"/><text x="14.9115%" y="367.50"></text></g><g><title>[libcrypto.so.3] (86 samples, 0.22%)</title><rect x="15.0325%" y="341" width="0.2201%" height="15" fill="rgb(244,64,35)" fg:x="5875" fg:w="86"/><text x="15.2825%" y="351.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (440 samples, 1.13%)</title><rect x="15.2525%" y="357" width="1.1258%" height="15" fill="rgb(216,46,15)" fg:x="5961" fg:w="440"/><text x="15.5025%" y="367.50"></text></g><g><title>[libcrypto.so.3] (352 samples, 0.90%)</title><rect x="15.4777%" y="341" width="0.9007%" height="15" fill="rgb(250,74,19)" fg:x="6049" fg:w="352"/><text x="15.7277%" y="351.50"></text></g><g><title>[libcrypto.so.3] (27 samples, 0.07%)</title><rect x="16.3093%" y="325" width="0.0691%" height="15" fill="rgb(249,42,33)" fg:x="6374" fg:w="27"/><text x="16.5593%" y="335.50"></text></g><g><title>CRYPTO_gcm128_setiv (23 samples, 0.06%)</title><rect x="16.3784%" y="357" width="0.0589%" height="15" fill="rgb(242,149,17)" fg:x="6401" fg:w="23"/><text x="16.6284%" y="367.50"></text></g><g><title>[libcrypto.so.3] (20 samples, 0.05%)</title><rect x="16.3861%" y="341" width="0.0512%" height="15" fill="rgb(244,29,21)" fg:x="6404" fg:w="20"/><text x="16.6361%" y="351.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::decrypt_in_place (4,270 samples, 10.93%)</title><rect x="14.2572%" y="453" width="10.9257%" height="15" fill="rgb(220,130,37)" fg:x="5572" fg:w="4270"/><text x="14.5072%" y="463.50">&lt;zssp::crypto_im..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (4,270 samples, 10.93%)</title><rect x="14.2572%" y="437" width="10.9257%" height="15" fill="rgb(211,67,2)" fg:x="5572" fg:w="4270"/><text x="14.5072%" y="447.50">zssp::crypto_imp..</text></g><g><title>EVP_DecryptUpdate (4,266 samples, 10.92%)</title><rect x="14.2674%" y="421" width="10.9155%" height="15" fill="rgb(235,68,52)" fg:x="5576" fg:w="4266"/><text x="14.5174%" y="431.50">EVP_DecryptUpdate</text></g><g><title>[libcrypto.so.3] (4,171 samples, 10.67%)</title><rect x="14.5105%" y="405" width="10.6724%" height="15" fill="rgb(246,142,3)" fg:x="5671" fg:w="4171"/><text x="14.7605%" y="415.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (4,167 samples, 10.66%)</title><rect x="14.5208%" y="389" width="10.6622%" height="15" fill="rgb(241,25,7)" fg:x="5675" fg:w="4167"/><text x="14.7708%" y="399.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (4,144 samples, 10.60%)</title><rect x="14.5796%" y="373" width="10.6033%" height="15" fill="rgb(242,119,39)" fg:x="5698" fg:w="4144"/><text x="14.8296%" y="383.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (3,418 samples, 8.75%)</title><rect x="16.4372%" y="357" width="8.7457%" height="15" fill="rgb(241,98,45)" fg:x="6424" fg:w="3418"/><text x="16.6872%" y="367.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (3,257 samples, 8.33%)</title><rect x="16.8492%" y="341" width="8.3338%" height="15" fill="rgb(254,28,30)" fg:x="6585" fg:w="3257"/><text x="17.0992%" y="351.50">[libcrypto.s..</text></g><g><title>asm_sysvec_reschedule_ipi (17 samples, 0.04%)</title><rect x="25.1395%" y="325" width="0.0435%" height="15" fill="rgb(241,142,54)" fg:x="9825" fg:w="17"/><text x="25.3895%" y="335.50"></text></g><g><title>sysvec_reschedule_ipi (16 samples, 0.04%)</title><rect x="25.1420%" y="309" width="0.0409%" height="15" fill="rgb(222,85,15)" fg:x="9826" fg:w="16"/><text x="25.3920%" y="319.50"></text></g><g><title>irqentry_exit (16 samples, 0.04%)</title><rect x="25.1420%" y="293" width="0.0409%" height="15" fill="rgb(210,85,47)" fg:x="9826" fg:w="16"/><text x="25.3920%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (16 samples, 0.04%)</title><rect x="25.1420%" y="277" width="0.0409%" height="15" fill="rgb(224,206,25)" fg:x="9826" fg:w="16"/><text x="25.3920%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (16 samples, 0.04%)</title><rect x="25.1420%" y="261" width="0.0409%" height="15" fill="rgb(243,201,19)" fg:x="9826" fg:w="16"/><text x="25.3920%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (16 samples, 0.04%)</title><rect x="25.1420%" y="245" width="0.0409%" height="15" fill="rgb(236,59,4)" fg:x="9826" fg:w="16"/><text x="25.3920%" y="255.50"></text></g><g><title>schedule (15 samples, 0.04%)</title><rect x="25.1446%" y="229" width="0.0384%" height="15" fill="rgb(254,179,45)" fg:x="9827" fg:w="15"/><text x="25.3946%" y="239.50"></text></g><g><title>__schedule (15 samples, 0.04%)</title><rect x="25.1446%" y="213" width="0.0384%" height="15" fill="rgb(226,14,10)" fg:x="9827" fg:w="15"/><text x="25.3946%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (15 samples, 0.04%)</title><rect x="25.1446%" y="197" width="0.0384%" height="15" fill="rgb(244,27,41)" fg:x="9827" fg:w="15"/><text x="25.3946%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (15 samples, 0.04%)</title><rect x="25.1446%" y="181" width="0.0384%" height="15" fill="rgb(235,35,32)" fg:x="9827" fg:w="15"/><text x="25.3946%" y="191.50"></text></g><g><title>perf_ctx_enable (15 samples, 0.04%)</title><rect x="25.1446%" y="165" width="0.0384%" height="15" fill="rgb(218,68,31)" fg:x="9827" fg:w="15"/><text x="25.3946%" y="175.50"></text></g><g><title>CRYPTO_clear_free (92 samples, 0.24%)</title><rect x="25.2392%" y="357" width="0.2354%" height="15" fill="rgb(207,120,37)" fg:x="9864" fg:w="92"/><text x="25.4892%" y="367.50"></text></g><g><title>OPENSSL_cleanse (92 samples, 0.24%)</title><rect x="25.2392%" y="341" width="0.2354%" height="15" fill="rgb(227,98,0)" fg:x="9864" fg:w="92"/><text x="25.4892%" y="351.50"></text></g><g><title>EVP_CIPHER_free (27 samples, 0.07%)</title><rect x="25.4746%" y="357" width="0.0691%" height="15" fill="rgb(207,7,3)" fg:x="9956" fg:w="27"/><text x="25.7246%" y="367.50"></text></g><g><title>cfree (42 samples, 0.11%)</title><rect x="25.5463%" y="357" width="0.1075%" height="15" fill="rgb(206,98,19)" fg:x="9984" fg:w="42"/><text x="25.7963%" y="367.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="25.6358%" y="341" width="0.0179%" height="15" fill="rgb(217,5,26)" fg:x="10019" fg:w="7"/><text x="25.8858%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_free (184 samples, 0.47%)</title><rect x="25.1855%" y="389" width="0.4708%" height="15" fill="rgb(235,190,38)" fg:x="9843" fg:w="184"/><text x="25.4355%" y="399.50"></text></g><g><title>EVP_CIPHER_CTX_reset (180 samples, 0.46%)</title><rect x="25.1957%" y="373" width="0.4606%" height="15" fill="rgb(247,86,24)" fg:x="9847" fg:w="180"/><text x="25.4457%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec&gt; (210 samples, 0.54%)</title><rect x="25.1829%" y="437" width="0.5373%" height="15" fill="rgb(205,101,16)" fg:x="9842" fg:w="210"/><text x="25.4329%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::CipherCtx&gt; (210 samples, 0.54%)</title><rect x="25.1829%" y="421" width="0.5373%" height="15" fill="rgb(246,168,33)" fg:x="9842" fg:w="210"/><text x="25.4329%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::CipherCtx as core::ops::drop::Drop&gt;::drop (210 samples, 0.54%)</title><rect x="25.1829%" y="405" width="0.5373%" height="15" fill="rgb(231,114,1)" fg:x="9842" fg:w="210"/><text x="25.4329%" y="415.50"></text></g><g><title>cfree (25 samples, 0.06%)</title><rect x="25.6563%" y="389" width="0.0640%" height="15" fill="rgb(207,184,53)" fg:x="10027" fg:w="25"/><text x="25.9063%" y="399.50"></text></g><g><title>[libc.so.6] (15 samples, 0.04%)</title><rect x="25.6819%" y="373" width="0.0384%" height="15" fill="rgb(224,95,51)" fg:x="10037" fg:w="15"/><text x="25.9319%" y="383.50"></text></g><g><title>CRYPTO_gcm128_finish (29 samples, 0.07%)</title><rect x="25.7587%" y="357" width="0.0742%" height="15" fill="rgb(212,188,45)" fg:x="10067" fg:w="29"/><text x="26.0087%" y="367.50"></text></g><g><title>[libcrypto.so.3] (18 samples, 0.05%)</title><rect x="25.7868%" y="341" width="0.0461%" height="15" fill="rgb(223,154,38)" fg:x="10078" fg:w="18"/><text x="26.0368%" y="351.50"></text></g><g><title>[libcrypto.so.3] (33 samples, 0.08%)</title><rect x="25.7510%" y="373" width="0.0844%" height="15" fill="rgb(251,22,52)" fg:x="10064" fg:w="33"/><text x="26.0010%" y="383.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (46 samples, 0.12%)</title><rect x="25.7203%" y="437" width="0.1177%" height="15" fill="rgb(229,209,22)" fg:x="10052" fg:w="46"/><text x="25.9703%" y="447.50"></text></g><g><title>EVP_DecryptFinal_ex (45 samples, 0.12%)</title><rect x="25.7228%" y="421" width="0.1151%" height="15" fill="rgb(234,138,34)" fg:x="10053" fg:w="45"/><text x="25.9728%" y="431.50"></text></g><g><title>[libcrypto.so.3] (38 samples, 0.10%)</title><rect x="25.7408%" y="405" width="0.0972%" height="15" fill="rgb(212,95,11)" fg:x="10060" fg:w="38"/><text x="25.9908%" y="415.50"></text></g><g><title>[libcrypto.so.3] (37 samples, 0.09%)</title><rect x="25.7433%" y="389" width="0.0947%" height="15" fill="rgb(240,179,47)" fg:x="10061" fg:w="37"/><text x="25.9933%" y="399.50"></text></g><g><title>OSSL_PARAM_get_octet_string (6 samples, 0.02%)</title><rect x="25.9429%" y="389" width="0.0154%" height="15" fill="rgb(240,163,11)" fg:x="10139" fg:w="6"/><text x="26.1929%" y="399.50"></text></g><g><title>[libc.so.6] (17 samples, 0.04%)</title><rect x="25.9787%" y="373" width="0.0435%" height="15" fill="rgb(236,37,12)" fg:x="10153" fg:w="17"/><text x="26.2287%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (26 samples, 0.07%)</title><rect x="25.9582%" y="389" width="0.0665%" height="15" fill="rgb(232,164,16)" fg:x="10145" fg:w="26"/><text x="26.2082%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::finish (333 samples, 0.85%)</title><rect x="25.1829%" y="453" width="0.8521%" height="15" fill="rgb(244,205,15)" fg:x="9842" fg:w="333"/><text x="25.4329%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::set_tag (77 samples, 0.20%)</title><rect x="25.8380%" y="437" width="0.1970%" height="15" fill="rgb(223,117,47)" fg:x="10098" fg:w="77"/><text x="26.0880%" y="447.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (77 samples, 0.20%)</title><rect x="25.8380%" y="421" width="0.1970%" height="15" fill="rgb(244,107,35)" fg:x="10098" fg:w="77"/><text x="26.0880%" y="431.50"></text></g><g><title>[libcrypto.so.3] (39 samples, 0.10%)</title><rect x="25.9352%" y="405" width="0.0998%" height="15" fill="rgb(205,140,8)" fg:x="10136" fg:w="39"/><text x="26.1852%" y="415.50"></text></g><g><title>OSSL_PARAM_locate_const (4 samples, 0.01%)</title><rect x="26.0248%" y="389" width="0.0102%" height="15" fill="rgb(228,84,46)" fg:x="10171" fg:w="4"/><text x="26.2748%" y="399.50"></text></g><g><title>[libc.so.6] (15 samples, 0.04%)</title><rect x="26.1450%" y="389" width="0.0384%" height="15" fill="rgb(254,188,9)" fg:x="10218" fg:w="15"/><text x="26.3950%" y="399.50"></text></g><g><title>OSSL_PARAM_locate (28 samples, 0.07%)</title><rect x="26.1194%" y="405" width="0.0716%" height="15" fill="rgb(206,112,54)" fg:x="10208" fg:w="28"/><text x="26.3694%" y="415.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (64 samples, 0.16%)</title><rect x="26.0350%" y="437" width="0.1638%" height="15" fill="rgb(216,84,49)" fg:x="10175" fg:w="64"/><text x="26.2850%" y="447.50"></text></g><g><title>[libcrypto.so.3] (42 samples, 0.11%)</title><rect x="26.0913%" y="421" width="0.1075%" height="15" fill="rgb(214,194,35)" fg:x="10197" fg:w="42"/><text x="26.3413%" y="431.50"></text></g><g><title>[libc.so.6] (25 samples, 0.06%)</title><rect x="26.3855%" y="341" width="0.0640%" height="15" fill="rgb(249,28,3)" fg:x="10312" fg:w="25"/><text x="26.6355%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (48 samples, 0.12%)</title><rect x="26.3446%" y="357" width="0.1228%" height="15" fill="rgb(222,56,52)" fg:x="10296" fg:w="48"/><text x="26.5946%" y="367.50"></text></g><g><title>strcmp@plt (7 samples, 0.02%)</title><rect x="26.4495%" y="341" width="0.0179%" height="15" fill="rgb(245,217,50)" fg:x="10337" fg:w="7"/><text x="26.6995%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (81 samples, 0.21%)</title><rect x="26.2678%" y="389" width="0.2073%" height="15" fill="rgb(213,201,24)" fg:x="10266" fg:w="81"/><text x="26.5178%" y="399.50"></text></g><g><title>[libcrypto.so.3] (63 samples, 0.16%)</title><rect x="26.3139%" y="373" width="0.1612%" height="15" fill="rgb(248,116,28)" fg:x="10284" fg:w="63"/><text x="26.5639%" y="383.50"></text></g><g><title>[libc.so.6] (20 samples, 0.05%)</title><rect x="26.5672%" y="341" width="0.0512%" height="15" fill="rgb(219,72,43)" fg:x="10383" fg:w="20"/><text x="26.8172%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (41 samples, 0.10%)</title><rect x="26.5212%" y="357" width="0.1049%" height="15" fill="rgb(209,138,14)" fg:x="10365" fg:w="41"/><text x="26.7712%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_get_key_length (60 samples, 0.15%)</title><rect x="26.4751%" y="389" width="0.1535%" height="15" fill="rgb(222,18,33)" fg:x="10347" fg:w="60"/><text x="26.7251%" y="399.50"></text></g><g><title>[libcrypto.so.3] (53 samples, 0.14%)</title><rect x="26.4930%" y="373" width="0.1356%" height="15" fill="rgb(213,199,7)" fg:x="10354" fg:w="53"/><text x="26.7430%" y="383.50"></text></g><g><title>pthread_rwlock_rdlock (159 samples, 0.41%)</title><rect x="26.6747%" y="325" width="0.4068%" height="15" fill="rgb(250,110,10)" fg:x="10425" fg:w="159"/><text x="26.9247%" y="335.50"></text></g><g><title>CRYPTO_THREAD_read_lock (163 samples, 0.42%)</title><rect x="26.6696%" y="341" width="0.4171%" height="15" fill="rgb(248,123,6)" fg:x="10423" fg:w="163"/><text x="26.9196%" y="351.50"></text></g><g><title>pthread_rwlock_unlock (79 samples, 0.20%)</title><rect x="27.0994%" y="325" width="0.2021%" height="15" fill="rgb(206,91,31)" fg:x="10591" fg:w="79"/><text x="27.3494%" y="335.50"></text></g><g><title>CRYPTO_THREAD_unlock (86 samples, 0.22%)</title><rect x="27.0943%" y="341" width="0.2201%" height="15" fill="rgb(211,154,13)" fg:x="10589" fg:w="86"/><text x="27.3443%" y="351.50"></text></g><g><title>pthread_rwlock_unlock@plt (5 samples, 0.01%)</title><rect x="27.3016%" y="325" width="0.0128%" height="15" fill="rgb(225,148,7)" fg:x="10670" fg:w="5"/><text x="27.5516%" y="335.50"></text></g><g><title>EVP_CIPHER_up_ref (42 samples, 0.11%)</title><rect x="27.3195%" y="341" width="0.1075%" height="15" fill="rgb(220,160,43)" fg:x="10677" fg:w="42"/><text x="27.5695%" y="351.50"></text></g><g><title>OPENSSL_LH_retrieve (70 samples, 0.18%)</title><rect x="27.4269%" y="341" width="0.1791%" height="15" fill="rgb(213,52,39)" fg:x="10719" fg:w="70"/><text x="27.6769%" y="351.50"></text></g><g><title>[libcrypto.so.3] (57 samples, 0.15%)</title><rect x="27.4602%" y="325" width="0.1458%" height="15" fill="rgb(243,137,7)" fg:x="10732" fg:w="57"/><text x="27.7102%" y="335.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 0.02%)</title><rect x="27.5907%" y="309" width="0.0154%" height="15" fill="rgb(230,79,13)" fg:x="10783" fg:w="6"/><text x="27.8407%" y="319.50"></text></g><g><title>pthread_rwlock_rdlock (43 samples, 0.11%)</title><rect x="27.6240%" y="309" width="0.1100%" height="15" fill="rgb(247,105,23)" fg:x="10796" fg:w="43"/><text x="27.8740%" y="319.50"></text></g><g><title>CRYPTO_THREAD_read_lock (47 samples, 0.12%)</title><rect x="27.6189%" y="325" width="0.1203%" height="15" fill="rgb(223,179,41)" fg:x="10794" fg:w="47"/><text x="27.8689%" y="335.50"></text></g><g><title>pthread_rwlock_unlock (66 samples, 0.17%)</title><rect x="27.7391%" y="309" width="0.1689%" height="15" fill="rgb(218,9,34)" fg:x="10841" fg:w="66"/><text x="27.9891%" y="319.50"></text></g><g><title>CRYPTO_THREAD_unlock (69 samples, 0.18%)</title><rect x="27.7391%" y="325" width="0.1766%" height="15" fill="rgb(222,106,8)" fg:x="10841" fg:w="69"/><text x="27.9891%" y="335.50"></text></g><g><title>CRYPTO_strndup (13 samples, 0.03%)</title><rect x="27.9157%" y="325" width="0.0333%" height="15" fill="rgb(211,220,0)" fg:x="10910" fg:w="13"/><text x="28.1657%" y="335.50"></text></g><g><title>OPENSSL_strcasecmp (38 samples, 0.10%)</title><rect x="28.1741%" y="293" width="0.0972%" height="15" fill="rgb(229,52,16)" fg:x="11011" fg:w="38"/><text x="28.4241%" y="303.50"></text></g><g><title>OPENSSL_LH_retrieve (162 samples, 0.41%)</title><rect x="27.9489%" y="325" width="0.4145%" height="15" fill="rgb(212,155,18)" fg:x="10923" fg:w="162"/><text x="28.1989%" y="335.50"></text></g><g><title>[libcrypto.so.3] (151 samples, 0.39%)</title><rect x="27.9771%" y="309" width="0.3864%" height="15" fill="rgb(242,21,14)" fg:x="10934" fg:w="151"/><text x="28.2271%" y="319.50"></text></g><g><title>[libcrypto.so.3] (36 samples, 0.09%)</title><rect x="28.2713%" y="293" width="0.0921%" height="15" fill="rgb(222,19,48)" fg:x="11049" fg:w="36"/><text x="28.5213%" y="303.50"></text></g><g><title>cfree (12 samples, 0.03%)</title><rect x="28.3686%" y="325" width="0.0307%" height="15" fill="rgb(232,45,27)" fg:x="11087" fg:w="12"/><text x="28.6186%" y="335.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="28.3890%" y="309" width="0.0102%" height="15" fill="rgb(249,103,42)" fg:x="11095" fg:w="4"/><text x="28.6390%" y="319.50"></text></g><g><title>[libcrypto.so.3] (310 samples, 0.79%)</title><rect x="27.6086%" y="341" width="0.7932%" height="15" fill="rgb(246,81,33)" fg:x="10790" fg:w="310"/><text x="27.8586%" y="351.50"></text></g><g><title>pthread_getspecific (7 samples, 0.02%)</title><rect x="28.4018%" y="341" width="0.0179%" height="15" fill="rgb(252,33,42)" fg:x="11100" fg:w="7"/><text x="28.6518%" y="351.50"></text></g><g><title>EVP_CIPHER_fetch (702 samples, 1.80%)</title><rect x="26.6286%" y="389" width="1.7962%" height="15" fill="rgb(209,212,41)" fg:x="10407" fg:w="702"/><text x="26.8786%" y="399.50">E..</text></g><g><title>[libcrypto.so.3] (699 samples, 1.79%)</title><rect x="26.6363%" y="373" width="1.7885%" height="15" fill="rgb(207,154,6)" fg:x="10410" fg:w="699"/><text x="26.8863%" y="383.50">[..</text></g><g><title>[libcrypto.so.3] (690 samples, 1.77%)</title><rect x="26.6593%" y="357" width="1.7655%" height="15" fill="rgb(223,64,47)" fg:x="10419" fg:w="690"/><text x="26.9093%" y="367.50"></text></g><g><title>EVP_CIPHER_free (18 samples, 0.05%)</title><rect x="28.4249%" y="389" width="0.0461%" height="15" fill="rgb(211,161,38)" fg:x="11109" fg:w="18"/><text x="28.6749%" y="399.50"></text></g><g><title>EVP_CIPHER_up_ref (27 samples, 0.07%)</title><rect x="28.4709%" y="389" width="0.0691%" height="15" fill="rgb(219,138,40)" fg:x="11127" fg:w="27"/><text x="28.7209%" y="399.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="28.5707%" y="357" width="0.0256%" height="15" fill="rgb(241,228,46)" fg:x="11166" fg:w="10"/><text x="28.8207%" y="367.50"></text></g><g><title>malloc (9 samples, 0.02%)</title><rect x="28.5963%" y="357" width="0.0230%" height="15" fill="rgb(223,209,38)" fg:x="11176" fg:w="9"/><text x="28.8463%" y="367.50"></text></g><g><title>CRYPTO_zalloc (22 samples, 0.06%)</title><rect x="28.5656%" y="373" width="0.0563%" height="15" fill="rgb(236,164,45)" fg:x="11164" fg:w="22"/><text x="28.8156%" y="383.50"></text></g><g><title>OPENSSL_init_crypto (4 samples, 0.01%)</title><rect x="28.6219%" y="373" width="0.0102%" height="15" fill="rgb(231,15,5)" fg:x="11186" fg:w="4"/><text x="28.8719%" y="383.50"></text></g><g><title>CRYPTO_gcm128_init (155 samples, 0.40%)</title><rect x="28.6398%" y="357" width="0.3966%" height="15" fill="rgb(252,35,15)" fg:x="11193" fg:w="155"/><text x="28.8898%" y="367.50"></text></g><g><title>[libcrypto.so.3] (126 samples, 0.32%)</title><rect x="28.7140%" y="341" width="0.3224%" height="15" fill="rgb(248,181,18)" fg:x="11222" fg:w="126"/><text x="28.9640%" y="351.50"></text></g><g><title>[libcrypto.so.3] (188 samples, 0.48%)</title><rect x="28.6372%" y="373" width="0.4810%" height="15" fill="rgb(233,39,42)" fg:x="11192" fg:w="188"/><text x="28.8872%" y="383.50"></text></g><g><title>[libcrypto.so.3] (32 samples, 0.08%)</title><rect x="29.0364%" y="357" width="0.0819%" height="15" fill="rgb(238,110,33)" fg:x="11348" fg:w="32"/><text x="29.2864%" y="367.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::cipher_init (1,141 samples, 2.92%)</title><rect x="26.2013%" y="437" width="2.9195%" height="15" fill="rgb(233,195,10)" fg:x="10240" fg:w="1141"/><text x="26.4513%" y="447.50">zs..</text></g><g><title>EVP_CipherInit_ex (1,141 samples, 2.92%)</title><rect x="26.2013%" y="421" width="2.9195%" height="15" fill="rgb(254,105,3)" fg:x="10240" fg:w="1141"/><text x="26.4513%" y="431.50">EV..</text></g><g><title>[libcrypto.so.3] (1,141 samples, 2.92%)</title><rect x="26.2013%" y="405" width="2.9195%" height="15" fill="rgb(221,225,9)" fg:x="10240" fg:w="1141"/><text x="26.4513%" y="415.50">[l..</text></g><g><title>[libcrypto.so.3] (224 samples, 0.57%)</title><rect x="28.5477%" y="389" width="0.5732%" height="15" fill="rgb(224,227,45)" fg:x="11157" fg:w="224"/><text x="28.7977%" y="399.50"></text></g><g><title>malloc (12 samples, 0.03%)</title><rect x="29.1311%" y="405" width="0.0307%" height="15" fill="rgb(229,198,43)" fg:x="11385" fg:w="12"/><text x="29.3811%" y="415.50"></text></g><g><title>CRYPTO_zalloc (17 samples, 0.04%)</title><rect x="29.1208%" y="421" width="0.0435%" height="15" fill="rgb(206,209,35)" fg:x="11381" fg:w="17"/><text x="29.3708%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_dec (1,226 samples, 3.14%)</title><rect x="26.0350%" y="453" width="3.1370%" height="15" fill="rgb(245,195,53)" fg:x="10175" fg:w="1226"/><text x="26.2850%" y="463.50">&lt;zs..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::new (20 samples, 0.05%)</title><rect x="29.1208%" y="437" width="0.0512%" height="15" fill="rgb(240,92,26)" fg:x="11381" fg:w="20"/><text x="29.3708%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.02%)</title><rect x="29.1797%" y="453" width="0.0154%" height="15" fill="rgb(207,40,23)" fg:x="11404" fg:w="6"/><text x="29.4297%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.02%)</title><rect x="29.1797%" y="437" width="0.0154%" height="15" fill="rgb(223,111,35)" fg:x="11404" fg:w="6"/><text x="29.4297%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="29.1822%" y="421" width="0.0128%" height="15" fill="rgb(229,147,28)" fg:x="11405" fg:w="5"/><text x="29.4322%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="29.1822%" y="405" width="0.0128%" height="15" fill="rgb(211,29,28)" fg:x="11405" fg:w="5"/><text x="29.4322%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.01%)</title><rect x="29.1848%" y="389" width="0.0102%" height="15" fill="rgb(228,72,33)" fg:x="11406" fg:w="4"/><text x="29.4348%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.01%)</title><rect x="29.1848%" y="373" width="0.0102%" height="15" fill="rgb(205,214,31)" fg:x="11406" fg:w="4"/><text x="29.4348%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.01%)</title><rect x="29.1950%" y="437" width="0.0102%" height="15" fill="rgb(224,111,15)" fg:x="11410" fg:w="4"/><text x="29.4450%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.01%)</title><rect x="29.1950%" y="453" width="0.0128%" height="15" fill="rgb(253,21,26)" fg:x="11410" fg:w="5"/><text x="29.4450%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (232 samples, 0.59%)</title><rect x="29.2078%" y="453" width="0.5936%" height="15" fill="rgb(245,139,43)" fg:x="11415" fg:w="232"/><text x="29.4578%" y="463.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;u8,_&gt; as std::io::Write&gt;::write (232 samples, 0.59%)</title><rect x="29.2078%" y="437" width="0.5936%" height="15" fill="rgb(252,170,7)" fg:x="11415" fg:w="232"/><text x="29.4578%" y="447.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::try_extend_from_slice (230 samples, 0.59%)</title><rect x="29.2129%" y="421" width="0.5885%" height="15" fill="rgb(231,118,14)" fg:x="11417" fg:w="230"/><text x="29.4629%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (228 samples, 0.58%)</title><rect x="29.2181%" y="405" width="0.5834%" height="15" fill="rgb(238,83,0)" fg:x="11419" fg:w="228"/><text x="29.4681%" y="415.50"></text></g><g><title>[libc.so.6] (227 samples, 0.58%)</title><rect x="29.2206%" y="389" width="0.5808%" height="15" fill="rgb(221,39,39)" fg:x="11420" fg:w="227"/><text x="29.4706%" y="399.50"></text></g><g><title>zssp::antireplay::Window&lt;_,_&gt;::update (27 samples, 0.07%)</title><rect x="29.8014%" y="453" width="0.0691%" height="15" fill="rgb(222,119,46)" fg:x="11647" fg:w="27"/><text x="30.0514%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_max (26 samples, 0.07%)</title><rect x="29.8040%" y="437" width="0.0665%" height="15" fill="rgb(222,165,49)" fg:x="11648" fg:w="26"/><text x="30.0540%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_umax (26 samples, 0.07%)</title><rect x="29.8040%" y="421" width="0.0665%" height="15" fill="rgb(219,113,52)" fg:x="11648" fg:w="26"/><text x="30.0540%" y="431.50"></text></g><g><title>zssp::zeta::receive_payload_in_place (6,190 samples, 15.84%)</title><rect x="14.0346%" y="469" width="15.8385%" height="15" fill="rgb(214,7,15)" fg:x="5485" fg:w="6190"/><text x="14.2846%" y="479.50">zssp::zeta::receive_payl..</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (8,570 samples, 21.93%)</title><rect x="8.1112%" y="485" width="21.9283%" height="15" fill="rgb(235,32,4)" fg:x="3170" fg:w="8570"/><text x="8.3612%" y="495.50">zssp::zssp::Context&lt;Crypto&gt;::receive</text></g><g><title>zssp::zssp::parse_fragment_header (65 samples, 0.17%)</title><rect x="29.8731%" y="469" width="0.1663%" height="15" fill="rgb(238,90,54)" fg:x="11675" fg:w="65"/><text x="30.1231%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.01%)</title><rect x="30.0292%" y="453" width="0.0102%" height="15" fill="rgb(213,208,19)" fg:x="11736" fg:w="4"/><text x="30.2792%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="30.0292%" y="437" width="0.0102%" height="15" fill="rgb(233,156,4)" fg:x="11736" fg:w="4"/><text x="30.2792%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (56 samples, 0.14%)</title><rect x="30.1162%" y="437" width="0.1433%" height="15" fill="rgb(207,194,5)" fg:x="11770" fg:w="56"/><text x="30.3662%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.14%)</title><rect x="30.1162%" y="421" width="0.1433%" height="15" fill="rgb(206,111,30)" fg:x="11770" fg:w="56"/><text x="30.3662%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (55 samples, 0.14%)</title><rect x="30.1187%" y="405" width="0.1407%" height="15" fill="rgb(243,70,54)" fg:x="11771" fg:w="55"/><text x="30.3687%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (52 samples, 0.13%)</title><rect x="30.1264%" y="389" width="0.1331%" height="15" fill="rgb(242,28,8)" fg:x="11774" fg:w="52"/><text x="30.3764%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (52 samples, 0.13%)</title><rect x="30.1264%" y="373" width="0.1331%" height="15" fill="rgb(219,106,18)" fg:x="11774" fg:w="52"/><text x="30.3764%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.16%)</title><rect x="30.2595%" y="437" width="0.1638%" height="15" fill="rgb(244,222,10)" fg:x="11826" fg:w="64"/><text x="30.5095%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (61 samples, 0.16%)</title><rect x="30.2671%" y="421" width="0.1561%" height="15" fill="rgb(236,179,52)" fg:x="11829" fg:w="61"/><text x="30.5171%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (55 samples, 0.14%)</title><rect x="30.2825%" y="405" width="0.1407%" height="15" fill="rgb(213,23,39)" fg:x="11835" fg:w="55"/><text x="30.5325%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55 samples, 0.14%)</title><rect x="30.2825%" y="389" width="0.1407%" height="15" fill="rgb(238,48,10)" fg:x="11835" fg:w="55"/><text x="30.5325%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLEnc as zssp::crypto::aes::Aes256Enc&gt;::encrypt_in_place (314 samples, 0.80%)</title><rect x="30.1008%" y="453" width="0.8034%" height="15" fill="rgb(251,196,23)" fg:x="11764" fg:w="314"/><text x="30.3508%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (188 samples, 0.48%)</title><rect x="30.4232%" y="437" width="0.4810%" height="15" fill="rgb(250,152,24)" fg:x="11890" fg:w="188"/><text x="30.6732%" y="447.50"></text></g><g><title>EVP_EncryptUpdate (183 samples, 0.47%)</title><rect x="30.4360%" y="421" width="0.4682%" height="15" fill="rgb(209,150,17)" fg:x="11895" fg:w="183"/><text x="30.6860%" y="431.50"></text></g><g><title>[libcrypto.so.3] (148 samples, 0.38%)</title><rect x="30.5256%" y="405" width="0.3787%" height="15" fill="rgb(234,202,34)" fg:x="11930" fg:w="148"/><text x="30.7756%" y="415.50"></text></g><g><title>[libcrypto.so.3] (106 samples, 0.27%)</title><rect x="30.6330%" y="389" width="0.2712%" height="15" fill="rgb(253,148,53)" fg:x="11972" fg:w="106"/><text x="30.8830%" y="399.50"></text></g><g><title>[libcrypto.so.3] (96 samples, 0.25%)</title><rect x="30.6586%" y="373" width="0.2456%" height="15" fill="rgb(218,129,16)" fg:x="11982" fg:w="96"/><text x="30.9086%" y="383.50"></text></g><g><title>CRYPTO_gcm128_encrypt (250 samples, 0.64%)</title><rect x="31.2139%" y="357" width="0.6397%" height="15" fill="rgb(216,85,19)" fg:x="12199" fg:w="250"/><text x="31.4639%" y="367.50"></text></g><g><title>[libcrypto.so.3] (143 samples, 0.37%)</title><rect x="31.4876%" y="341" width="0.3659%" height="15" fill="rgb(235,228,7)" fg:x="12306" fg:w="143"/><text x="31.7376%" y="351.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (415 samples, 1.06%)</title><rect x="31.8535%" y="357" width="1.0619%" height="15" fill="rgb(245,175,0)" fg:x="12449" fg:w="415"/><text x="32.1035%" y="367.50"></text></g><g><title>[libcrypto.so.3] (319 samples, 0.82%)</title><rect x="32.0992%" y="341" width="0.8162%" height="15" fill="rgb(208,168,36)" fg:x="12545" fg:w="319"/><text x="32.3492%" y="351.50"></text></g><g><title>[libcrypto.so.3] (28 samples, 0.07%)</title><rect x="32.8438%" y="325" width="0.0716%" height="15" fill="rgb(246,171,24)" fg:x="12836" fg:w="28"/><text x="33.0938%" y="335.50"></text></g><g><title>[libcrypto.so.3] (19 samples, 0.05%)</title><rect x="32.9180%" y="341" width="0.0486%" height="15" fill="rgb(215,142,24)" fg:x="12865" fg:w="19"/><text x="33.1680%" y="351.50"></text></g><g><title>CRYPTO_gcm128_setiv (25 samples, 0.06%)</title><rect x="32.9154%" y="357" width="0.0640%" height="15" fill="rgb(250,187,7)" fg:x="12864" fg:w="25"/><text x="33.1654%" y="367.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="32.9666%" y="341" width="0.0128%" height="15" fill="rgb(228,66,33)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="351.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="32.9666%" y="325" width="0.0128%" height="15" fill="rgb(234,215,21)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="335.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="32.9666%" y="309" width="0.0128%" height="15" fill="rgb(222,191,20)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="32.9666%" y="293" width="0.0128%" height="15" fill="rgb(245,79,54)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="32.9666%" y="277" width="0.0128%" height="15" fill="rgb(240,10,37)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="287.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="32.9666%" y="261" width="0.0128%" height="15" fill="rgb(214,192,32)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="271.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="32.9666%" y="245" width="0.0128%" height="15" fill="rgb(209,36,54)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="255.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="32.9666%" y="229" width="0.0128%" height="15" fill="rgb(220,10,11)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="32.9666%" y="213" width="0.0128%" height="15" fill="rgb(221,106,17)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="32.9666%" y="197" width="0.0128%" height="15" fill="rgb(251,142,44)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="207.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="32.9666%" y="181" width="0.0128%" height="15" fill="rgb(238,13,15)" fg:x="12884" fg:w="5"/><text x="33.2166%" y="191.50"></text></g><g><title>perf_ctx_enable (18 samples, 0.05%)</title><rect x="39.3429%" y="165" width="0.0461%" height="15" fill="rgb(208,107,27)" fg:x="15376" fg:w="18"/><text x="39.5929%" y="175.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::encrypt (3,317 samples, 8.49%)</title><rect x="30.9043%" y="453" width="8.4873%" height="15" fill="rgb(205,136,37)" fg:x="12078" fg:w="3317"/><text x="31.1543%" y="463.50">&lt;zssp::crypt..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (3,311 samples, 8.47%)</title><rect x="30.9196%" y="437" width="8.4719%" height="15" fill="rgb(250,205,27)" fg:x="12084" fg:w="3311"/><text x="31.1696%" y="447.50">zssp::crypto..</text></g><g><title>EVP_EncryptUpdate (3,309 samples, 8.47%)</title><rect x="30.9247%" y="421" width="8.4668%" height="15" fill="rgb(210,80,43)" fg:x="12086" fg:w="3309"/><text x="31.1747%" y="431.50">EVP_EncryptU..</text></g><g><title>[libcrypto.so.3] (3,257 samples, 8.33%)</title><rect x="31.0578%" y="405" width="8.3338%" height="15" fill="rgb(247,160,36)" fg:x="12138" fg:w="3257"/><text x="31.3078%" y="415.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (3,255 samples, 8.33%)</title><rect x="31.0629%" y="389" width="8.3286%" height="15" fill="rgb(234,13,49)" fg:x="12140" fg:w="3255"/><text x="31.3129%" y="399.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (3,235 samples, 8.28%)</title><rect x="31.1141%" y="373" width="8.2775%" height="15" fill="rgb(234,122,0)" fg:x="12160" fg:w="3235"/><text x="31.3641%" y="383.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (2,506 samples, 6.41%)</title><rect x="32.9794%" y="357" width="6.4122%" height="15" fill="rgb(207,146,38)" fg:x="12889" fg:w="2506"/><text x="33.2294%" y="367.50">[libcryp..</text></g><g><title>[libcrypto.so.3] (2,299 samples, 5.88%)</title><rect x="33.5090%" y="341" width="5.8825%" height="15" fill="rgb(207,177,25)" fg:x="13096" fg:w="2299"/><text x="33.7590%" y="351.50">[libcry..</text></g><g><title>asm_sysvec_reschedule_ipi (20 samples, 0.05%)</title><rect x="39.3404%" y="325" width="0.0512%" height="15" fill="rgb(211,178,42)" fg:x="15375" fg:w="20"/><text x="39.5904%" y="335.50"></text></g><g><title>sysvec_reschedule_ipi (20 samples, 0.05%)</title><rect x="39.3404%" y="309" width="0.0512%" height="15" fill="rgb(230,69,54)" fg:x="15375" fg:w="20"/><text x="39.5904%" y="319.50"></text></g><g><title>irqentry_exit (20 samples, 0.05%)</title><rect x="39.3404%" y="293" width="0.0512%" height="15" fill="rgb(214,135,41)" fg:x="15375" fg:w="20"/><text x="39.5904%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (20 samples, 0.05%)</title><rect x="39.3404%" y="277" width="0.0512%" height="15" fill="rgb(237,67,25)" fg:x="15375" fg:w="20"/><text x="39.5904%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (20 samples, 0.05%)</title><rect x="39.3404%" y="261" width="0.0512%" height="15" fill="rgb(222,189,50)" fg:x="15375" fg:w="20"/><text x="39.5904%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (20 samples, 0.05%)</title><rect x="39.3404%" y="245" width="0.0512%" height="15" fill="rgb(245,148,34)" fg:x="15375" fg:w="20"/><text x="39.5904%" y="255.50"></text></g><g><title>schedule (19 samples, 0.05%)</title><rect x="39.3429%" y="229" width="0.0486%" height="15" fill="rgb(222,29,6)" fg:x="15376" fg:w="19"/><text x="39.5929%" y="239.50"></text></g><g><title>__schedule (19 samples, 0.05%)</title><rect x="39.3429%" y="213" width="0.0486%" height="15" fill="rgb(221,189,43)" fg:x="15376" fg:w="19"/><text x="39.5929%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (19 samples, 0.05%)</title><rect x="39.3429%" y="197" width="0.0486%" height="15" fill="rgb(207,36,27)" fg:x="15376" fg:w="19"/><text x="39.5929%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (19 samples, 0.05%)</title><rect x="39.3429%" y="181" width="0.0486%" height="15" fill="rgb(217,90,24)" fg:x="15376" fg:w="19"/><text x="39.5929%" y="191.50"></text></g><g><title>CRYPTO_clear_free (107 samples, 0.27%)</title><rect x="39.4402%" y="357" width="0.2738%" height="15" fill="rgb(224,66,35)" fg:x="15414" fg:w="107"/><text x="39.6902%" y="367.50"></text></g><g><title>OPENSSL_cleanse (103 samples, 0.26%)</title><rect x="39.4504%" y="341" width="0.2635%" height="15" fill="rgb(221,13,50)" fg:x="15418" fg:w="103"/><text x="39.7004%" y="351.50"></text></g><g><title>EVP_CIPHER_free (30 samples, 0.08%)</title><rect x="39.7139%" y="357" width="0.0768%" height="15" fill="rgb(236,68,49)" fg:x="15521" fg:w="30"/><text x="39.9639%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_free (206 samples, 0.53%)</title><rect x="39.3967%" y="389" width="0.5271%" height="15" fill="rgb(229,146,28)" fg:x="15397" fg:w="206"/><text x="39.6467%" y="399.50"></text></g><g><title>EVP_CIPHER_CTX_reset (205 samples, 0.52%)</title><rect x="39.3992%" y="373" width="0.5245%" height="15" fill="rgb(225,31,38)" fg:x="15398" fg:w="205"/><text x="39.6492%" y="383.50"></text></g><g><title>cfree (52 samples, 0.13%)</title><rect x="39.7907%" y="357" width="0.1331%" height="15" fill="rgb(250,208,3)" fg:x="15551" fg:w="52"/><text x="40.0407%" y="367.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="39.8956%" y="341" width="0.0281%" height="15" fill="rgb(246,54,23)" fg:x="15592" fg:w="11"/><text x="40.1456%" y="351.50"></text></g><g><title>cfree (11 samples, 0.03%)</title><rect x="39.9238%" y="389" width="0.0281%" height="15" fill="rgb(243,76,11)" fg:x="15603" fg:w="11"/><text x="40.1738%" y="399.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="39.9391%" y="373" width="0.0128%" height="15" fill="rgb(245,21,50)" fg:x="15609" fg:w="5"/><text x="40.1891%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc&gt; (220 samples, 0.56%)</title><rect x="39.3915%" y="437" width="0.5629%" height="15" fill="rgb(228,9,43)" fg:x="15395" fg:w="220"/><text x="39.6415%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::CipherCtx&gt; (220 samples, 0.56%)</title><rect x="39.3915%" y="421" width="0.5629%" height="15" fill="rgb(208,100,47)" fg:x="15395" fg:w="220"/><text x="39.6415%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::CipherCtx as core::ops::drop::Drop&gt;::drop (220 samples, 0.56%)</title><rect x="39.3915%" y="405" width="0.5629%" height="15" fill="rgb(232,26,8)" fg:x="15395" fg:w="220"/><text x="39.6415%" y="415.50"></text></g><g><title>[libcrypto.so.3] (15 samples, 0.04%)</title><rect x="40.0338%" y="325" width="0.0384%" height="15" fill="rgb(216,166,38)" fg:x="15646" fg:w="15"/><text x="40.2838%" y="335.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (47 samples, 0.12%)</title><rect x="39.9545%" y="437" width="0.1203%" height="15" fill="rgb(251,202,51)" fg:x="15615" fg:w="47"/><text x="40.2045%" y="447.50"></text></g><g><title>EVP_EncryptFinal_ex (46 samples, 0.12%)</title><rect x="39.9570%" y="421" width="0.1177%" height="15" fill="rgb(254,216,34)" fg:x="15616" fg:w="46"/><text x="40.2070%" y="431.50"></text></g><g><title>[libcrypto.so.3] (33 samples, 0.08%)</title><rect x="39.9903%" y="405" width="0.0844%" height="15" fill="rgb(251,32,27)" fg:x="15629" fg:w="33"/><text x="40.2403%" y="415.50"></text></g><g><title>[libcrypto.so.3] (33 samples, 0.08%)</title><rect x="39.9903%" y="389" width="0.0844%" height="15" fill="rgb(208,127,28)" fg:x="15629" fg:w="33"/><text x="40.2403%" y="399.50"></text></g><g><title>[libcrypto.so.3] (29 samples, 0.07%)</title><rect x="40.0005%" y="373" width="0.0742%" height="15" fill="rgb(224,137,22)" fg:x="15633" fg:w="29"/><text x="40.2505%" y="383.50"></text></g><g><title>CRYPTO_gcm128_tag (29 samples, 0.07%)</title><rect x="40.0005%" y="357" width="0.0742%" height="15" fill="rgb(254,70,32)" fg:x="15633" fg:w="29"/><text x="40.2505%" y="367.50"></text></g><g><title>CRYPTO_gcm128_finish (22 samples, 0.06%)</title><rect x="40.0184%" y="341" width="0.0563%" height="15" fill="rgb(229,75,37)" fg:x="15640" fg:w="22"/><text x="40.2684%" y="351.50"></text></g><g><title>[libc.so.6] (32 samples, 0.08%)</title><rect x="40.2001%" y="373" width="0.0819%" height="15" fill="rgb(252,64,23)" fg:x="15711" fg:w="32"/><text x="40.4501%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (53 samples, 0.14%)</title><rect x="40.1592%" y="389" width="0.1356%" height="15" fill="rgb(232,162,48)" fg:x="15695" fg:w="53"/><text x="40.4092%" y="399.50"></text></g><g><title>strcmp@plt (5 samples, 0.01%)</title><rect x="40.2820%" y="373" width="0.0128%" height="15" fill="rgb(246,160,12)" fg:x="15743" fg:w="5"/><text x="40.5320%" y="383.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::finish (358 samples, 0.92%)</title><rect x="39.3915%" y="453" width="0.9160%" height="15" fill="rgb(247,166,0)" fg:x="15395" fg:w="358"/><text x="39.6415%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::get_tag (91 samples, 0.23%)</title><rect x="40.0747%" y="437" width="0.2328%" height="15" fill="rgb(249,219,21)" fg:x="15662" fg:w="91"/><text x="40.3247%" y="447.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (91 samples, 0.23%)</title><rect x="40.0747%" y="421" width="0.2328%" height="15" fill="rgb(205,209,3)" fg:x="15662" fg:w="91"/><text x="40.3247%" y="431.50"></text></g><g><title>[libcrypto.so.3] (68 samples, 0.17%)</title><rect x="40.1336%" y="405" width="0.1740%" height="15" fill="rgb(243,44,1)" fg:x="15685" fg:w="68"/><text x="40.3836%" y="415.50"></text></g><g><title>OSSL_PARAM_set_octet_string (5 samples, 0.01%)</title><rect x="40.2948%" y="389" width="0.0128%" height="15" fill="rgb(206,159,16)" fg:x="15748" fg:w="5"/><text x="40.5448%" y="399.50"></text></g><g><title>[libc.so.6] (12 samples, 0.03%)</title><rect x="40.4355%" y="389" width="0.0307%" height="15" fill="rgb(244,77,30)" fg:x="15803" fg:w="12"/><text x="40.6855%" y="399.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (64 samples, 0.16%)</title><rect x="40.3127%" y="437" width="0.1638%" height="15" fill="rgb(218,69,12)" fg:x="15755" fg:w="64"/><text x="40.5627%" y="447.50"></text></g><g><title>[libcrypto.so.3] (38 samples, 0.10%)</title><rect x="40.3792%" y="421" width="0.0972%" height="15" fill="rgb(212,87,7)" fg:x="15781" fg:w="38"/><text x="40.6292%" y="431.50"></text></g><g><title>OSSL_PARAM_locate (32 samples, 0.08%)</title><rect x="40.3946%" y="405" width="0.0819%" height="15" fill="rgb(245,114,25)" fg:x="15787" fg:w="32"/><text x="40.6446%" y="415.50"></text></g><g><title>strcmp@plt (4 samples, 0.01%)</title><rect x="40.4662%" y="389" width="0.0102%" height="15" fill="rgb(210,61,42)" fg:x="15815" fg:w="4"/><text x="40.7162%" y="399.50"></text></g><g><title>[libc.so.6] (17 samples, 0.04%)</title><rect x="40.6786%" y="341" width="0.0435%" height="15" fill="rgb(211,52,33)" fg:x="15898" fg:w="17"/><text x="40.9286%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (40 samples, 0.10%)</title><rect x="40.6325%" y="357" width="0.1023%" height="15" fill="rgb(234,58,33)" fg:x="15880" fg:w="40"/><text x="40.8825%" y="367.50"></text></g><g><title>strcmp@plt (5 samples, 0.01%)</title><rect x="40.7221%" y="341" width="0.0128%" height="15" fill="rgb(220,115,36)" fg:x="15915" fg:w="5"/><text x="40.9721%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (79 samples, 0.20%)</title><rect x="40.5353%" y="389" width="0.2021%" height="15" fill="rgb(243,153,54)" fg:x="15842" fg:w="79"/><text x="40.7853%" y="399.50"></text></g><g><title>[libcrypto.so.3] (55 samples, 0.14%)</title><rect x="40.5967%" y="373" width="0.1407%" height="15" fill="rgb(251,47,18)" fg:x="15866" fg:w="55"/><text x="40.8467%" y="383.50"></text></g><g><title>[libc.so.6] (20 samples, 0.05%)</title><rect x="40.8347%" y="341" width="0.0512%" height="15" fill="rgb(242,102,42)" fg:x="15959" fg:w="20"/><text x="41.0847%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (37 samples, 0.09%)</title><rect x="40.7988%" y="357" width="0.0947%" height="15" fill="rgb(234,31,38)" fg:x="15945" fg:w="37"/><text x="41.0488%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_get_key_length (63 samples, 0.16%)</title><rect x="40.7374%" y="389" width="0.1612%" height="15" fill="rgb(221,117,51)" fg:x="15921" fg:w="63"/><text x="40.9874%" y="399.50"></text></g><g><title>[libcrypto.so.3] (54 samples, 0.14%)</title><rect x="40.7605%" y="373" width="0.1382%" height="15" fill="rgb(212,20,18)" fg:x="15930" fg:w="54"/><text x="41.0105%" y="383.50"></text></g><g><title>pthread_rwlock_rdlock (130 samples, 0.33%)</title><rect x="40.9498%" y="325" width="0.3326%" height="15" fill="rgb(245,133,36)" fg:x="16004" fg:w="130"/><text x="41.1998%" y="335.50"></text></g><g><title>CRYPTO_THREAD_read_lock (136 samples, 0.35%)</title><rect x="40.9421%" y="341" width="0.3480%" height="15" fill="rgb(212,6,19)" fg:x="16001" fg:w="136"/><text x="41.1921%" y="351.50"></text></g><g><title>pthread_rwlock_unlock (73 samples, 0.19%)</title><rect x="41.3003%" y="325" width="0.1868%" height="15" fill="rgb(218,1,36)" fg:x="16141" fg:w="73"/><text x="41.5503%" y="335.50"></text></g><g><title>CRYPTO_THREAD_unlock (82 samples, 0.21%)</title><rect x="41.2901%" y="341" width="0.2098%" height="15" fill="rgb(246,84,54)" fg:x="16137" fg:w="82"/><text x="41.5401%" y="351.50"></text></g><g><title>pthread_rwlock_unlock@plt (5 samples, 0.01%)</title><rect x="41.4871%" y="325" width="0.0128%" height="15" fill="rgb(242,110,6)" fg:x="16214" fg:w="5"/><text x="41.7371%" y="335.50"></text></g><g><title>EVP_CIPHER_up_ref (24 samples, 0.06%)</title><rect x="41.5050%" y="341" width="0.0614%" height="15" fill="rgb(214,47,5)" fg:x="16221" fg:w="24"/><text x="41.7550%" y="351.50"></text></g><g><title>OPENSSL_LH_retrieve (75 samples, 0.19%)</title><rect x="41.5665%" y="341" width="0.1919%" height="15" fill="rgb(218,159,25)" fg:x="16245" fg:w="75"/><text x="41.8165%" y="351.50"></text></g><g><title>[libcrypto.so.3] (56 samples, 0.14%)</title><rect x="41.6151%" y="325" width="0.1433%" height="15" fill="rgb(215,211,28)" fg:x="16264" fg:w="56"/><text x="41.8651%" y="335.50"></text></g><g><title>[libcrypto.so.3] (5 samples, 0.01%)</title><rect x="41.7456%" y="309" width="0.0128%" height="15" fill="rgb(238,59,32)" fg:x="16315" fg:w="5"/><text x="41.9956%" y="319.50"></text></g><g><title>pthread_rwlock_rdlock (38 samples, 0.10%)</title><rect x="41.7839%" y="309" width="0.0972%" height="15" fill="rgb(226,82,3)" fg:x="16330" fg:w="38"/><text x="42.0339%" y="319.50"></text></g><g><title>CRYPTO_THREAD_read_lock (40 samples, 0.10%)</title><rect x="41.7839%" y="325" width="0.1023%" height="15" fill="rgb(240,164,32)" fg:x="16330" fg:w="40"/><text x="42.0339%" y="335.50"></text></g><g><title>pthread_rwlock_unlock (43 samples, 0.11%)</title><rect x="41.8914%" y="309" width="0.1100%" height="15" fill="rgb(232,46,7)" fg:x="16372" fg:w="43"/><text x="42.1414%" y="319.50"></text></g><g><title>CRYPTO_THREAD_unlock (45 samples, 0.12%)</title><rect x="41.8914%" y="325" width="0.1151%" height="15" fill="rgb(229,129,53)" fg:x="16372" fg:w="45"/><text x="42.1414%" y="335.50"></text></g><g><title>OPENSSL_strnlen (5 samples, 0.01%)</title><rect x="42.0168%" y="309" width="0.0128%" height="15" fill="rgb(234,188,29)" fg:x="16421" fg:w="5"/><text x="42.2668%" y="319.50"></text></g><g><title>CRYPTO_strndup (10 samples, 0.03%)</title><rect x="42.0168%" y="325" width="0.0256%" height="15" fill="rgb(246,141,4)" fg:x="16421" fg:w="10"/><text x="42.2668%" y="335.50"></text></g><g><title>malloc (5 samples, 0.01%)</title><rect x="42.0296%" y="309" width="0.0128%" height="15" fill="rgb(229,23,39)" fg:x="16426" fg:w="5"/><text x="42.2796%" y="319.50"></text></g><g><title>OPENSSL_strcasecmp (41 samples, 0.10%)</title><rect x="42.2010%" y="293" width="0.1049%" height="15" fill="rgb(206,12,3)" fg:x="16493" fg:w="41"/><text x="42.4510%" y="303.50"></text></g><g><title>OPENSSL_LH_retrieve (132 samples, 0.34%)</title><rect x="42.0424%" y="325" width="0.3378%" height="15" fill="rgb(252,226,20)" fg:x="16431" fg:w="132"/><text x="42.2924%" y="335.50"></text></g><g><title>[libcrypto.so.3] (118 samples, 0.30%)</title><rect x="42.0782%" y="309" width="0.3019%" height="15" fill="rgb(216,123,35)" fg:x="16445" fg:w="118"/><text x="42.3282%" y="319.50"></text></g><g><title>[libcrypto.so.3] (29 samples, 0.07%)</title><rect x="42.3059%" y="293" width="0.0742%" height="15" fill="rgb(212,68,40)" fg:x="16534" fg:w="29"/><text x="42.5559%" y="303.50"></text></g><g><title>cfree (19 samples, 0.05%)</title><rect x="42.3801%" y="325" width="0.0486%" height="15" fill="rgb(254,125,32)" fg:x="16563" fg:w="19"/><text x="42.6301%" y="335.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="42.4108%" y="309" width="0.0179%" height="15" fill="rgb(253,97,22)" fg:x="16575" fg:w="7"/><text x="42.6608%" y="319.50"></text></g><g><title>[libcrypto.so.3] (264 samples, 0.68%)</title><rect x="41.7584%" y="341" width="0.6755%" height="15" fill="rgb(241,101,14)" fg:x="16320" fg:w="264"/><text x="42.0084%" y="351.50"></text></g><g><title>EVP_CIPHER_fetch (603 samples, 1.54%)</title><rect x="40.8986%" y="389" width="1.5429%" height="15" fill="rgb(238,103,29)" fg:x="15984" fg:w="603"/><text x="41.1486%" y="399.50"></text></g><g><title>[libcrypto.so.3] (600 samples, 1.54%)</title><rect x="40.9063%" y="373" width="1.5352%" height="15" fill="rgb(233,195,47)" fg:x="15987" fg:w="600"/><text x="41.1563%" y="383.50"></text></g><g><title>[libcrypto.so.3] (594 samples, 1.52%)</title><rect x="40.9217%" y="357" width="1.5199%" height="15" fill="rgb(246,218,30)" fg:x="15993" fg:w="594"/><text x="41.1717%" y="367.50"></text></g><g><title>EVP_CIPHER_free (17 samples, 0.04%)</title><rect x="42.4415%" y="389" width="0.0435%" height="15" fill="rgb(219,145,47)" fg:x="16587" fg:w="17"/><text x="42.6915%" y="399.50"></text></g><g><title>EVP_CIPHER_up_ref (20 samples, 0.05%)</title><rect x="42.4850%" y="389" width="0.0512%" height="15" fill="rgb(243,12,26)" fg:x="16604" fg:w="20"/><text x="42.7350%" y="399.50"></text></g><g><title>OBJ_nid2sn (6 samples, 0.02%)</title><rect x="42.5362%" y="389" width="0.0154%" height="15" fill="rgb(214,87,16)" fg:x="16624" fg:w="6"/><text x="42.7862%" y="399.50"></text></g><g><title>malloc (8 samples, 0.02%)</title><rect x="42.5874%" y="357" width="0.0205%" height="15" fill="rgb(208,99,42)" fg:x="16644" fg:w="8"/><text x="42.8374%" y="367.50"></text></g><g><title>CRYPTO_zalloc (14 samples, 0.04%)</title><rect x="42.5771%" y="373" width="0.0358%" height="15" fill="rgb(253,99,2)" fg:x="16640" fg:w="14"/><text x="42.8271%" y="383.50"></text></g><g><title>OPENSSL_init_crypto (5 samples, 0.01%)</title><rect x="42.6130%" y="373" width="0.0128%" height="15" fill="rgb(220,168,23)" fg:x="16654" fg:w="5"/><text x="42.8630%" y="383.50"></text></g><g><title>CRYPTO_gcm128_init (161 samples, 0.41%)</title><rect x="42.6309%" y="357" width="0.4120%" height="15" fill="rgb(242,38,24)" fg:x="16661" fg:w="161"/><text x="42.8809%" y="367.50"></text></g><g><title>[libcrypto.so.3] (132 samples, 0.34%)</title><rect x="42.7051%" y="341" width="0.3378%" height="15" fill="rgb(225,182,9)" fg:x="16690" fg:w="132"/><text x="42.9551%" y="351.50"></text></g><g><title>[libcrypto.so.3] (201 samples, 0.51%)</title><rect x="42.6283%" y="373" width="0.5143%" height="15" fill="rgb(243,178,37)" fg:x="16660" fg:w="201"/><text x="42.8783%" y="383.50"></text></g><g><title>[libcrypto.so.3] (39 samples, 0.10%)</title><rect x="43.0428%" y="357" width="0.0998%" height="15" fill="rgb(232,139,19)" fg:x="16822" fg:w="39"/><text x="43.2928%" y="367.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::cipher_init (1,042 samples, 2.67%)</title><rect x="40.4790%" y="437" width="2.6662%" height="15" fill="rgb(225,201,24)" fg:x="15820" fg:w="1042"/><text x="40.7290%" y="447.50">zs..</text></g><g><title>EVP_CipherInit_ex (1,042 samples, 2.67%)</title><rect x="40.4790%" y="421" width="2.6662%" height="15" fill="rgb(221,47,46)" fg:x="15820" fg:w="1042"/><text x="40.7290%" y="431.50">EV..</text></g><g><title>[libcrypto.so.3] (1,042 samples, 2.67%)</title><rect x="40.4790%" y="405" width="2.6662%" height="15" fill="rgb(249,23,13)" fg:x="15820" fg:w="1042"/><text x="40.7290%" y="415.50">[l..</text></g><g><title>[libcrypto.so.3] (232 samples, 0.59%)</title><rect x="42.5516%" y="389" width="0.5936%" height="15" fill="rgb(219,9,5)" fg:x="16630" fg:w="232"/><text x="42.8016%" y="399.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="43.1477%" y="405" width="0.0102%" height="15" fill="rgb(254,171,16)" fg:x="16863" fg:w="4"/><text x="43.3977%" y="415.50"></text></g><g><title>malloc (9 samples, 0.02%)</title><rect x="43.1580%" y="405" width="0.0230%" height="15" fill="rgb(230,171,20)" fg:x="16867" fg:w="9"/><text x="43.4080%" y="415.50"></text></g><g><title>CRYPTO_zalloc (15 samples, 0.04%)</title><rect x="43.1452%" y="421" width="0.0384%" height="15" fill="rgb(210,71,41)" fg:x="16862" fg:w="15"/><text x="43.3952%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_enc (1,125 samples, 2.88%)</title><rect x="40.3076%" y="453" width="2.8786%" height="15" fill="rgb(206,173,20)" fg:x="15753" fg:w="1125"/><text x="40.5576%" y="463.50">&lt;z..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::new (16 samples, 0.04%)</title><rect x="43.1452%" y="437" width="0.0409%" height="15" fill="rgb(233,88,34)" fg:x="16862" fg:w="16"/><text x="43.3952%" y="447.50"></text></g><g><title>__rdl_alloc (9 samples, 0.02%)</title><rect x="43.1912%" y="277" width="0.0230%" height="15" fill="rgb(223,209,46)" fg:x="16880" fg:w="9"/><text x="43.4412%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.02%)</title><rect x="43.1912%" y="261" width="0.0230%" height="15" fill="rgb(250,43,18)" fg:x="16880" fg:w="9"/><text x="43.4412%" y="271.50"></text></g><g><title>[libc.so.6] (54 samples, 0.14%)</title><rect x="47.1240%" y="245" width="0.1382%" height="15" fill="rgb(208,13,10)" fg:x="18417" fg:w="54"/><text x="47.3740%" y="255.50"></text></g><g><title>[libc.so.6] (925 samples, 2.37%)</title><rect x="44.8979%" y="261" width="2.3668%" height="15" fill="rgb(212,200,36)" fg:x="17547" fg:w="925"/><text x="45.1479%" y="271.50">[l..</text></g><g><title>__entry_text_start (4 samples, 0.01%)</title><rect x="47.3057%" y="245" width="0.0102%" height="15" fill="rgb(225,90,30)" fg:x="18488" fg:w="4"/><text x="47.5557%" y="255.50"></text></g><g><title>__get_user_nocheck_4 (5 samples, 0.01%)</title><rect x="47.3338%" y="149" width="0.0128%" height="15" fill="rgb(236,182,39)" fg:x="18499" fg:w="5"/><text x="47.5838%" y="159.50"></text></g><g><title>futex_q_lock (5 samples, 0.01%)</title><rect x="47.3517%" y="149" width="0.0128%" height="15" fill="rgb(212,144,35)" fg:x="18506" fg:w="5"/><text x="47.6017%" y="159.50"></text></g><g><title>futex_q_unlock (6 samples, 0.02%)</title><rect x="47.3645%" y="149" width="0.0154%" height="15" fill="rgb(228,63,44)" fg:x="18511" fg:w="6"/><text x="47.6145%" y="159.50"></text></g><g><title>futex_wait (24 samples, 0.06%)</title><rect x="47.3210%" y="181" width="0.0614%" height="15" fill="rgb(228,109,6)" fg:x="18494" fg:w="24"/><text x="47.5710%" y="191.50"></text></g><g><title>futex_wait_setup (19 samples, 0.05%)</title><rect x="47.3338%" y="165" width="0.0486%" height="15" fill="rgb(238,117,24)" fg:x="18499" fg:w="19"/><text x="47.5838%" y="175.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.07%)</title><rect x="47.3185%" y="213" width="0.0665%" height="15" fill="rgb(242,26,26)" fg:x="18493" fg:w="26"/><text x="47.5685%" y="223.50"></text></g><g><title>do_futex (26 samples, 0.07%)</title><rect x="47.3185%" y="197" width="0.0665%" height="15" fill="rgb(221,92,48)" fg:x="18493" fg:w="26"/><text x="47.5685%" y="207.50"></text></g><g><title>do_syscall_64 (31 samples, 0.08%)</title><rect x="47.3185%" y="229" width="0.0793%" height="15" fill="rgb(209,209,32)" fg:x="18493" fg:w="31"/><text x="47.5685%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.01%)</title><rect x="47.3875%" y="213" width="0.0102%" height="15" fill="rgb(221,70,22)" fg:x="18520" fg:w="4"/><text x="47.6375%" y="223.50"></text></g><g><title>__lll_lock_wait_private (53 samples, 0.14%)</title><rect x="47.2647%" y="261" width="0.1356%" height="15" fill="rgb(248,145,5)" fg:x="18472" fg:w="53"/><text x="47.5147%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.08%)</title><rect x="47.3159%" y="245" width="0.0844%" height="15" fill="rgb(226,116,26)" fg:x="18492" fg:w="33"/><text x="47.5659%" y="255.50"></text></g><g><title>__entry_text_start (4 samples, 0.01%)</title><rect x="47.4157%" y="245" width="0.0102%" height="15" fill="rgb(244,5,17)" fg:x="18531" fg:w="4"/><text x="47.6657%" y="255.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="47.4310%" y="181" width="0.0102%" height="15" fill="rgb(252,159,33)" fg:x="18537" fg:w="4"/><text x="47.6810%" y="191.50"></text></g><g><title>futex_hash (4 samples, 0.01%)</title><rect x="47.4413%" y="181" width="0.0102%" height="15" fill="rgb(206,71,0)" fg:x="18541" fg:w="4"/><text x="47.6913%" y="191.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="47.5385%" y="165" width="0.0102%" height="15" fill="rgb(233,118,54)" fg:x="18579" fg:w="4"/><text x="47.7885%" y="175.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.01%)</title><rect x="47.5385%" y="149" width="0.0102%" height="15" fill="rgb(234,83,48)" fg:x="18579" fg:w="4"/><text x="47.7885%" y="159.50"></text></g><g><title>futex_wake_mark (13 samples, 0.03%)</title><rect x="47.5487%" y="165" width="0.0333%" height="15" fill="rgb(228,3,54)" fg:x="18583" fg:w="13"/><text x="47.7987%" y="175.50"></text></g><g><title>preempt_schedule_thunk (5 samples, 0.01%)</title><rect x="47.6716%" y="133" width="0.0128%" height="15" fill="rgb(226,155,13)" fg:x="18631" fg:w="5"/><text x="47.9216%" y="143.50"></text></g><g><title>preempt_schedule (5 samples, 0.01%)</title><rect x="47.6716%" y="117" width="0.0128%" height="15" fill="rgb(241,28,37)" fg:x="18631" fg:w="5"/><text x="47.9216%" y="127.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="47.6716%" y="101" width="0.0128%" height="15" fill="rgb(233,93,10)" fg:x="18631" fg:w="5"/><text x="47.9216%" y="111.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="47.6716%" y="85" width="0.0128%" height="15" fill="rgb(225,113,19)" fg:x="18631" fg:w="5"/><text x="47.9216%" y="95.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="47.6716%" y="69" width="0.0128%" height="15" fill="rgb(241,2,18)" fg:x="18631" fg:w="5"/><text x="47.9216%" y="79.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="47.6716%" y="53" width="0.0128%" height="15" fill="rgb(228,207,21)" fg:x="18631" fg:w="5"/><text x="47.9216%" y="63.50"></text></g><g><title>__smp_call_single_queue (12 samples, 0.03%)</title><rect x="47.6997%" y="117" width="0.0307%" height="15" fill="rgb(213,211,35)" fg:x="18642" fg:w="12"/><text x="47.9497%" y="127.50"></text></g><g><title>native_send_call_func_single_ipi (9 samples, 0.02%)</title><rect x="47.7074%" y="101" width="0.0230%" height="15" fill="rgb(209,83,10)" fg:x="18645" fg:w="9"/><text x="47.9574%" y="111.50"></text></g><g><title>x2apic_send_IPI (9 samples, 0.02%)</title><rect x="47.7074%" y="85" width="0.0230%" height="15" fill="rgb(209,164,1)" fg:x="18645" fg:w="9"/><text x="47.9574%" y="95.50"></text></g><g><title>native_write_msr (6 samples, 0.02%)</title><rect x="47.7151%" y="69" width="0.0154%" height="15" fill="rgb(213,184,43)" fg:x="18648" fg:w="6"/><text x="47.9651%" y="79.50"></text></g><g><title>llist_add_batch (17 samples, 0.04%)</title><rect x="47.7304%" y="117" width="0.0435%" height="15" fill="rgb(231,61,34)" fg:x="18654" fg:w="17"/><text x="47.9804%" y="127.50"></text></g><g><title>do_futex (136 samples, 0.35%)</title><rect x="47.4310%" y="197" width="0.3480%" height="15" fill="rgb(235,75,3)" fg:x="18537" fg:w="136"/><text x="47.6810%" y="207.50"></text></g><g><title>futex_wake (128 samples, 0.33%)</title><rect x="47.4515%" y="181" width="0.3275%" height="15" fill="rgb(220,106,47)" fg:x="18545" fg:w="128"/><text x="47.7015%" y="191.50"></text></g><g><title>wake_up_q (75 samples, 0.19%)</title><rect x="47.5871%" y="165" width="0.1919%" height="15" fill="rgb(210,196,33)" fg:x="18598" fg:w="75"/><text x="47.8371%" y="175.50"></text></g><g><title>try_to_wake_up (66 samples, 0.17%)</title><rect x="47.6102%" y="149" width="0.1689%" height="15" fill="rgb(229,154,42)" fg:x="18607" fg:w="66"/><text x="47.8602%" y="159.50"></text></g><g><title>ttwu_queue_wakelist (36 samples, 0.09%)</title><rect x="47.6869%" y="133" width="0.0921%" height="15" fill="rgb(228,114,26)" fg:x="18637" fg:w="36"/><text x="47.9369%" y="143.50"></text></g><g><title>__x64_sys_futex (137 samples, 0.35%)</title><rect x="47.4310%" y="213" width="0.3505%" height="15" fill="rgb(208,144,1)" fg:x="18537" fg:w="137"/><text x="47.6810%" y="223.50"></text></g><g><title>do_syscall_64 (141 samples, 0.36%)</title><rect x="47.4310%" y="229" width="0.3608%" height="15" fill="rgb(239,112,37)" fg:x="18537" fg:w="141"/><text x="47.6810%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (144 samples, 0.37%)</title><rect x="47.4259%" y="245" width="0.3685%" height="15" fill="rgb(210,96,50)" fg:x="18535" fg:w="144"/><text x="47.6759%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,803 samples, 4.61%)</title><rect x="43.1861%" y="373" width="4.6134%" height="15" fill="rgb(222,178,2)" fg:x="16878" fg:w="1803"/><text x="43.4361%" y="383.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,803 samples, 4.61%)</title><rect x="43.1861%" y="357" width="4.6134%" height="15" fill="rgb(226,74,18)" fg:x="16878" fg:w="1803"/><text x="43.4361%" y="367.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,803 samples, 4.61%)</title><rect x="43.1861%" y="341" width="4.6134%" height="15" fill="rgb(225,67,54)" fg:x="16878" fg:w="1803"/><text x="43.4361%" y="351.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,801 samples, 4.61%)</title><rect x="43.1912%" y="325" width="4.6083%" height="15" fill="rgb(251,92,32)" fg:x="16880" fg:w="1801"/><text x="43.4412%" y="335.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,801 samples, 4.61%)</title><rect x="43.1912%" y="309" width="4.6083%" height="15" fill="rgb(228,149,22)" fg:x="16880" fg:w="1801"/><text x="43.4412%" y="319.50">alloc..</text></g><g><title>alloc::alloc::alloc (1,801 samples, 4.61%)</title><rect x="43.1912%" y="293" width="4.6083%" height="15" fill="rgb(243,54,13)" fg:x="16880" fg:w="1801"/><text x="43.4412%" y="303.50">alloc..</text></g><g><title>malloc (1,789 samples, 4.58%)</title><rect x="43.2219%" y="277" width="4.5776%" height="15" fill="rgb(243,180,28)" fg:x="16892" fg:w="1789"/><text x="43.4719%" y="287.50">malloc</text></g><g><title>__lll_lock_wake_private (156 samples, 0.40%)</title><rect x="47.4003%" y="261" width="0.3992%" height="15" fill="rgb(208,167,24)" fg:x="18525" fg:w="156"/><text x="47.6503%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,000 samples, 5.12%)</title><rect x="43.1861%" y="437" width="5.1174%" height="15" fill="rgb(245,73,45)" fg:x="16878" fg:w="2000"/><text x="43.4361%" y="447.50">alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,000 samples, 5.12%)</title><rect x="43.1861%" y="421" width="5.1174%" height="15" fill="rgb(237,203,48)" fg:x="16878" fg:w="2000"/><text x="43.4361%" y="431.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (2,000 samples, 5.12%)</title><rect x="43.1861%" y="405" width="5.1174%" height="15" fill="rgb(211,197,16)" fg:x="16878" fg:w="2000"/><text x="43.4361%" y="415.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,000 samples, 5.12%)</title><rect x="43.1861%" y="389" width="5.1174%" height="15" fill="rgb(243,99,51)" fg:x="16878" fg:w="2000"/><text x="43.4361%" y="399.50">&lt;T as ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (197 samples, 0.50%)</title><rect x="47.7995%" y="373" width="0.5041%" height="15" fill="rgb(215,123,29)" fg:x="18681" fg:w="197"/><text x="48.0495%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (197 samples, 0.50%)</title><rect x="47.7995%" y="357" width="0.5041%" height="15" fill="rgb(239,186,37)" fg:x="18681" fg:w="197"/><text x="48.0495%" y="367.50"></text></g><g><title>[libc.so.6] (194 samples, 0.50%)</title><rect x="47.8072%" y="341" width="0.4964%" height="15" fill="rgb(252,136,39)" fg:x="18684" fg:w="194"/><text x="48.0572%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (4 samples, 0.01%)</title><rect x="48.3036%" y="437" width="0.0102%" height="15" fill="rgb(223,213,32)" fg:x="18878" fg:w="4"/><text x="48.5536%" y="447.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="51.4303%" y="389" width="0.0102%" height="15" fill="rgb(233,115,5)" fg:x="20100" fg:w="4"/><text x="51.6803%" y="399.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (4 samples, 0.01%)</title><rect x="51.4406%" y="389" width="0.0102%" height="15" fill="rgb(207,226,44)" fg:x="20104" fg:w="4"/><text x="51.6906%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (66 samples, 0.17%)</title><rect x="51.5148%" y="373" width="0.1689%" height="15" fill="rgb(208,126,0)" fg:x="20133" fg:w="66"/><text x="51.7648%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (66 samples, 0.17%)</title><rect x="51.5148%" y="357" width="0.1689%" height="15" fill="rgb(244,66,21)" fg:x="20133" fg:w="66"/><text x="51.7648%" y="367.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_send (102 samples, 0.26%)</title><rect x="51.4508%" y="389" width="0.2610%" height="15" fill="rgb(222,97,12)" fg:x="20108" fg:w="102"/><text x="51.7008%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.03%)</title><rect x="51.6836%" y="373" width="0.0281%" height="15" fill="rgb(219,213,19)" fg:x="20199" fg:w="11"/><text x="51.9336%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.03%)</title><rect x="51.6836%" y="357" width="0.0281%" height="15" fill="rgb(252,169,30)" fg:x="20199" fg:w="11"/><text x="51.9336%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (6 samples, 0.02%)</title><rect x="51.7476%" y="357" width="0.0154%" height="15" fill="rgb(206,32,51)" fg:x="20224" fg:w="6"/><text x="51.9976%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="51.7502%" y="341" width="0.0128%" height="15" fill="rgb(250,172,42)" fg:x="20225" fg:w="5"/><text x="52.0002%" y="351.50"></text></g><g><title>futex_wake_mark (8 samples, 0.02%)</title><rect x="51.8448%" y="149" width="0.0205%" height="15" fill="rgb(209,34,43)" fg:x="20262" fg:w="8"/><text x="52.0948%" y="159.50"></text></g><g><title>__smp_call_single_queue (7 samples, 0.02%)</title><rect x="51.9446%" y="101" width="0.0179%" height="15" fill="rgb(223,11,35)" fg:x="20301" fg:w="7"/><text x="52.1946%" y="111.50"></text></g><g><title>native_send_call_func_single_ipi (6 samples, 0.02%)</title><rect x="51.9472%" y="85" width="0.0154%" height="15" fill="rgb(251,219,26)" fg:x="20302" fg:w="6"/><text x="52.1972%" y="95.50"></text></g><g><title>x2apic_send_IPI (6 samples, 0.02%)</title><rect x="51.9472%" y="69" width="0.0154%" height="15" fill="rgb(231,119,3)" fg:x="20302" fg:w="6"/><text x="52.1972%" y="79.50"></text></g><g><title>native_write_msr (4 samples, 0.01%)</title><rect x="51.9523%" y="53" width="0.0102%" height="15" fill="rgb(216,97,11)" fg:x="20304" fg:w="4"/><text x="52.2023%" y="63.50"></text></g><g><title>llist_add_batch (7 samples, 0.02%)</title><rect x="51.9625%" y="101" width="0.0179%" height="15" fill="rgb(223,59,9)" fg:x="20308" fg:w="7"/><text x="52.2125%" y="111.50"></text></g><g><title>futex_wake (71 samples, 0.18%)</title><rect x="51.8013%" y="165" width="0.1817%" height="15" fill="rgb(233,93,31)" fg:x="20245" fg:w="71"/><text x="52.0513%" y="175.50"></text></g><g><title>wake_up_q (44 samples, 0.11%)</title><rect x="51.8704%" y="149" width="0.1126%" height="15" fill="rgb(239,81,33)" fg:x="20272" fg:w="44"/><text x="52.1204%" y="159.50"></text></g><g><title>try_to_wake_up (43 samples, 0.11%)</title><rect x="51.8730%" y="133" width="0.1100%" height="15" fill="rgb(213,120,34)" fg:x="20273" fg:w="43"/><text x="52.1230%" y="143.50"></text></g><g><title>ttwu_queue_wakelist (24 samples, 0.06%)</title><rect x="51.9216%" y="117" width="0.0614%" height="15" fill="rgb(243,49,53)" fg:x="20292" fg:w="24"/><text x="52.1716%" y="127.50"></text></g><g><title>__x64_sys_futex (75 samples, 0.19%)</title><rect x="51.7937%" y="197" width="0.1919%" height="15" fill="rgb(247,216,33)" fg:x="20242" fg:w="75"/><text x="52.0437%" y="207.50"></text></g><g><title>do_futex (75 samples, 0.19%)</title><rect x="51.7937%" y="181" width="0.1919%" height="15" fill="rgb(226,26,14)" fg:x="20242" fg:w="75"/><text x="52.0437%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (76 samples, 0.19%)</title><rect x="51.7937%" y="229" width="0.1945%" height="15" fill="rgb(215,49,53)" fg:x="20242" fg:w="76"/><text x="52.0437%" y="239.50"></text></g><g><title>do_syscall_64 (76 samples, 0.19%)</title><rect x="51.7937%" y="213" width="0.1945%" height="15" fill="rgb(245,162,40)" fg:x="20242" fg:w="76"/><text x="52.0437%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (88 samples, 0.23%)</title><rect x="51.7655%" y="341" width="0.2252%" height="15" fill="rgb(229,68,17)" fg:x="20231" fg:w="88"/><text x="52.0155%" y="351.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select::_{{closure}} (88 samples, 0.23%)</title><rect x="51.7655%" y="325" width="0.2252%" height="15" fill="rgb(213,182,10)" fg:x="20231" fg:w="88"/><text x="52.0155%" y="335.50"></text></g><g><title>std::sync::mpmc::context::Context::unpark (84 samples, 0.21%)</title><rect x="51.7758%" y="309" width="0.2149%" height="15" fill="rgb(245,125,30)" fg:x="20235" fg:w="84"/><text x="52.0258%" y="319.50"></text></g><g><title>std::thread::Thread::unpark (84 samples, 0.21%)</title><rect x="51.7758%" y="293" width="0.2149%" height="15" fill="rgb(232,202,2)" fg:x="20235" fg:w="84"/><text x="52.0258%" y="303.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::unpark (84 samples, 0.21%)</title><rect x="51.7758%" y="277" width="0.2149%" height="15" fill="rgb(237,140,51)" fg:x="20235" fg:w="84"/><text x="52.0258%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wake (81 samples, 0.21%)</title><rect x="51.7834%" y="261" width="0.2073%" height="15" fill="rgb(236,157,25)" fg:x="20238" fg:w="81"/><text x="52.0334%" y="271.50"></text></g><g><title>syscall (80 samples, 0.20%)</title><rect x="51.7860%" y="245" width="0.2047%" height="15" fill="rgb(219,209,0)" fg:x="20239" fg:w="80"/><text x="52.0360%" y="255.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select (89 samples, 0.23%)</title><rect x="51.7655%" y="357" width="0.2277%" height="15" fill="rgb(240,116,54)" fg:x="20231" fg:w="89"/><text x="52.0155%" y="367.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::write (112 samples, 0.29%)</title><rect x="51.7118%" y="389" width="0.2866%" height="15" fill="rgb(216,10,36)" fg:x="20210" fg:w="112"/><text x="51.9618%" y="399.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (105 samples, 0.27%)</title><rect x="51.7297%" y="373" width="0.2687%" height="15" fill="rgb(222,72,44)" fg:x="20217" fg:w="105"/><text x="51.9797%" y="383.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="51.9984%" y="101" width="0.0128%" height="15" fill="rgb(232,159,9)" fg:x="20322" fg:w="5"/><text x="52.2484%" y="111.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="51.9984%" y="85" width="0.0128%" height="15" fill="rgb(210,39,32)" fg:x="20322" fg:w="5"/><text x="52.2484%" y="95.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="51.9984%" y="69" width="0.0128%" height="15" fill="rgb(216,194,45)" fg:x="20322" fg:w="5"/><text x="52.2484%" y="79.50"></text></g><g><title>futex_wait_queue (6 samples, 0.02%)</title><rect x="51.9984%" y="149" width="0.0154%" height="15" fill="rgb(218,18,35)" fg:x="20322" fg:w="6"/><text x="52.2484%" y="159.50"></text></g><g><title>schedule (6 samples, 0.02%)</title><rect x="51.9984%" y="133" width="0.0154%" height="15" fill="rgb(207,83,51)" fg:x="20322" fg:w="6"/><text x="52.2484%" y="143.50"></text></g><g><title>__schedule (6 samples, 0.02%)</title><rect x="51.9984%" y="117" width="0.0154%" height="15" fill="rgb(225,63,43)" fg:x="20322" fg:w="6"/><text x="52.2484%" y="127.50"></text></g><g><title>std::sync::mpmc::context::Context::wait_until (7 samples, 0.02%)</title><rect x="51.9984%" y="309" width="0.0179%" height="15" fill="rgb(207,57,36)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="319.50"></text></g><g><title>std::thread::park (7 samples, 0.02%)</title><rect x="51.9984%" y="293" width="0.0179%" height="15" fill="rgb(216,99,33)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="303.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (7 samples, 0.02%)</title><rect x="51.9984%" y="277" width="0.0179%" height="15" fill="rgb(225,42,16)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wait (7 samples, 0.02%)</title><rect x="51.9984%" y="261" width="0.0179%" height="15" fill="rgb(220,201,45)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="271.50"></text></g><g><title>syscall (7 samples, 0.02%)</title><rect x="51.9984%" y="245" width="0.0179%" height="15" fill="rgb(225,33,4)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="51.9984%" y="229" width="0.0179%" height="15" fill="rgb(224,33,50)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="239.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="51.9984%" y="213" width="0.0179%" height="15" fill="rgb(246,198,51)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="223.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.02%)</title><rect x="51.9984%" y="197" width="0.0179%" height="15" fill="rgb(205,22,4)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="207.50"></text></g><g><title>do_futex (7 samples, 0.02%)</title><rect x="51.9984%" y="181" width="0.0179%" height="15" fill="rgb(206,3,8)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="191.50"></text></g><g><title>futex_wait (7 samples, 0.02%)</title><rect x="51.9984%" y="165" width="0.0179%" height="15" fill="rgb(251,23,15)" fg:x="20322" fg:w="7"/><text x="52.2484%" y="175.50"></text></g><g><title>std::sync::mpmc::context::Context::with (8 samples, 0.02%)</title><rect x="51.9984%" y="389" width="0.0205%" height="15" fill="rgb(252,88,28)" fg:x="20322" fg:w="8"/><text x="52.2484%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.02%)</title><rect x="51.9984%" y="373" width="0.0205%" height="15" fill="rgb(212,127,14)" fg:x="20322" fg:w="8"/><text x="52.2484%" y="383.50"></text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (8 samples, 0.02%)</title><rect x="51.9984%" y="357" width="0.0205%" height="15" fill="rgb(247,145,37)" fg:x="20322" fg:w="8"/><text x="52.2484%" y="367.50"></text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (8 samples, 0.02%)</title><rect x="51.9984%" y="341" width="0.0205%" height="15" fill="rgb(209,117,53)" fg:x="20322" fg:w="8"/><text x="52.2484%" y="351.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send::_{{closure}} (8 samples, 0.02%)</title><rect x="51.9984%" y="325" width="0.0205%" height="15" fill="rgb(212,90,42)" fg:x="20322" fg:w="8"/><text x="52.2484%" y="335.50"></text></g><g><title>core::hint::spin_loop (14 samples, 0.04%)</title><rect x="52.0188%" y="373" width="0.0358%" height="15" fill="rgb(218,164,37)" fg:x="20330" fg:w="14"/><text x="52.2688%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (14 samples, 0.04%)</title><rect x="52.0188%" y="357" width="0.0358%" height="15" fill="rgb(246,65,34)" fg:x="20330" fg:w="14"/><text x="52.2688%" y="367.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (251 samples, 0.64%)</title><rect x="51.4150%" y="405" width="0.6422%" height="15" fill="rgb(231,100,33)" fg:x="20094" fg:w="251"/><text x="51.6650%" y="415.50"></text></g><g><title>std::sync::mpmc::utils::Backoff::spin_light (15 samples, 0.04%)</title><rect x="52.0188%" y="389" width="0.0384%" height="15" fill="rgb(228,126,14)" fg:x="20330" fg:w="15"/><text x="52.2688%" y="399.50"></text></g><g><title>benchmark::bob_main::_{{closure}} (3,468 samples, 8.87%)</title><rect x="43.1861%" y="453" width="8.8737%" height="15" fill="rgb(215,173,21)" fg:x="16878" fg:w="3468"/><text x="43.4361%" y="463.50">benchmark::bo..</text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::send (1,464 samples, 3.75%)</title><rect x="48.3138%" y="437" width="3.7460%" height="15" fill="rgb(210,6,40)" fg:x="18882" fg:w="1464"/><text x="48.5638%" y="447.50">std:..</text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (1,462 samples, 3.74%)</title><rect x="48.3189%" y="421" width="3.7409%" height="15" fill="rgb(212,48,18)" fg:x="18884" fg:w="1462"/><text x="48.5689%" y="431.50">std:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="52.0598%" y="453" width="0.0154%" height="15" fill="rgb(230,214,11)" fg:x="20346" fg:w="6"/><text x="52.3098%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.02%)</title><rect x="52.0598%" y="437" width="0.0154%" height="15" fill="rgb(254,105,39)" fg:x="20346" fg:w="6"/><text x="52.3098%" y="447.50"></text></g><g><title>core::mem::drop (25 samples, 0.06%)</title><rect x="52.0751%" y="453" width="0.0640%" height="15" fill="rgb(245,158,5)" fg:x="20352" fg:w="25"/><text x="52.3251%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;zssp::zeta::MutableState&lt;benchmark::TestApplication&gt;&gt;&gt; (25 samples, 0.06%)</title><rect x="52.0751%" y="437" width="0.0640%" height="15" fill="rgb(249,208,11)" fg:x="20352" fg:w="25"/><text x="52.3251%" y="447.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.06%)</title><rect x="52.0751%" y="421" width="0.0640%" height="15" fill="rgb(210,39,28)" fg:x="20352" fg:w="25"/><text x="52.3251%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (25 samples, 0.06%)</title><rect x="52.0751%" y="405" width="0.0640%" height="15" fill="rgb(211,56,53)" fg:x="20352" fg:w="25"/><text x="52.3251%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (24 samples, 0.06%)</title><rect x="52.0777%" y="389" width="0.0614%" height="15" fill="rgb(226,201,30)" fg:x="20353" fg:w="24"/><text x="52.3277%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (24 samples, 0.06%)</title><rect x="52.0777%" y="373" width="0.0614%" height="15" fill="rgb(239,101,34)" fg:x="20353" fg:w="24"/><text x="52.3277%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (14 samples, 0.04%)</title><rect x="52.1391%" y="453" width="0.0358%" height="15" fill="rgb(226,209,5)" fg:x="20377" fg:w="14"/><text x="52.3891%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.04%)</title><rect x="52.1391%" y="437" width="0.0358%" height="15" fill="rgb(250,105,47)" fg:x="20377" fg:w="14"/><text x="52.3891%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (20 samples, 0.05%)</title><rect x="52.1851%" y="421" width="0.0512%" height="15" fill="rgb(230,72,3)" fg:x="20395" fg:w="20"/><text x="52.4351%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.05%)</title><rect x="52.1851%" y="405" width="0.0512%" height="15" fill="rgb(232,218,39)" fg:x="20395" fg:w="20"/><text x="52.4351%" y="415.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (22 samples, 0.06%)</title><rect x="52.1851%" y="453" width="0.0563%" height="15" fill="rgb(248,166,6)" fg:x="20395" fg:w="22"/><text x="52.4351%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (22 samples, 0.06%)</title><rect x="52.1851%" y="437" width="0.0563%" height="15" fill="rgb(247,89,20)" fg:x="20395" fg:w="22"/><text x="52.4351%" y="447.50"></text></g><g><title>benchmark::alice_main (18,175 samples, 46.50%)</title><rect x="5.7725%" y="501" width="46.5048%" height="15" fill="rgb(248,130,54)" fg:x="2256" fg:w="18175"/><text x="6.0225%" y="511.50">benchmark::alice_main</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::send (8,691 samples, 22.24%)</title><rect x="30.0394%" y="485" width="22.2379%" height="15" fill="rgb(234,196,4)" fg:x="11740" fg:w="8691"/><text x="30.2894%" y="495.50">zssp::zssp::Context&lt;Crypto&gt;::send</text></g><g><title>zssp::zeta::send_payload (8,691 samples, 22.24%)</title><rect x="30.0394%" y="469" width="22.2379%" height="15" fill="rgb(250,143,31)" fg:x="11740" fg:w="8691"/><text x="30.2894%" y="479.50">zssp::zeta::send_payload</text></g><g><title>zssp::zeta::get_counter (14 samples, 0.04%)</title><rect x="52.2414%" y="453" width="0.0358%" height="15" fill="rgb(211,110,34)" fg:x="20417" fg:w="14"/><text x="52.4914%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (11 samples, 0.03%)</title><rect x="52.2491%" y="437" width="0.0281%" height="15" fill="rgb(215,124,48)" fg:x="20420" fg:w="11"/><text x="52.4991%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.03%)</title><rect x="52.2491%" y="421" width="0.0281%" height="15" fill="rgb(216,46,13)" fg:x="20420" fg:w="11"/><text x="52.4991%" y="431.50"></text></g><g><title>[libc.so.6] (15 samples, 0.04%)</title><rect x="52.3745%" y="485" width="0.0384%" height="15" fill="rgb(205,184,25)" fg:x="20469" fg:w="15"/><text x="52.6245%" y="495.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (4 samples, 0.01%)</title><rect x="52.4129%" y="485" width="0.0102%" height="15" fill="rgb(228,1,10)" fg:x="20484" fg:w="4"/><text x="52.6629%" y="495.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (4 samples, 0.01%)</title><rect x="52.4129%" y="469" width="0.0102%" height="15" fill="rgb(213,116,27)" fg:x="20484" fg:w="4"/><text x="52.6629%" y="479.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (4 samples, 0.01%)</title><rect x="52.4129%" y="453" width="0.0102%" height="15" fill="rgb(241,95,50)" fg:x="20484" fg:w="4"/><text x="52.6629%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="52.4257%" y="485" width="0.0256%" height="15" fill="rgb(238,48,32)" fg:x="20489" fg:w="10"/><text x="52.6757%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="52.4257%" y="469" width="0.0256%" height="15" fill="rgb(235,113,49)" fg:x="20489" fg:w="10"/><text x="52.6757%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.03%)</title><rect x="52.4257%" y="453" width="0.0256%" height="15" fill="rgb(205,127,43)" fg:x="20489" fg:w="10"/><text x="52.6757%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.03%)</title><rect x="52.4257%" y="437" width="0.0256%" height="15" fill="rgb(250,162,2)" fg:x="20489" fg:w="10"/><text x="52.6757%" y="447.50"></text></g><g><title>core::time::Duration::as_millis (5 samples, 0.01%)</title><rect x="52.4513%" y="485" width="0.0128%" height="15" fill="rgb(220,13,41)" fg:x="20499" fg:w="5"/><text x="52.7013%" y="495.50"></text></g><g><title>_ZN3std4sync4mpmc5array16Channel$LT$T$GT$10start_recv17h7800ca29c64cb868E.llvm.12455019271255371362 (4 samples, 0.01%)</title><rect x="52.5331%" y="421" width="0.0102%" height="15" fill="rgb(249,221,25)" fg:x="20531" fg:w="4"/><text x="52.7831%" y="431.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::read (6 samples, 0.02%)</title><rect x="52.5485%" y="421" width="0.0154%" height="15" fill="rgb(215,208,19)" fg:x="20537" fg:w="6"/><text x="52.7985%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (65 samples, 0.17%)</title><rect x="52.6585%" y="405" width="0.1663%" height="15" fill="rgb(236,175,2)" fg:x="20580" fg:w="65"/><text x="52.9085%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (65 samples, 0.17%)</title><rect x="52.6585%" y="389" width="0.1663%" height="15" fill="rgb(241,52,2)" fg:x="20580" fg:w="65"/><text x="52.9085%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (84 samples, 0.21%)</title><rect x="52.8248%" y="405" width="0.2149%" height="15" fill="rgb(248,140,14)" fg:x="20645" fg:w="84"/><text x="53.0748%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (84 samples, 0.21%)</title><rect x="52.8248%" y="389" width="0.2149%" height="15" fill="rgb(253,22,42)" fg:x="20645" fg:w="84"/><text x="53.0748%" y="399.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (190 samples, 0.49%)</title><rect x="52.5638%" y="421" width="0.4862%" height="15" fill="rgb(234,61,47)" fg:x="20543" fg:w="190"/><text x="52.8138%" y="431.50"></text></g><g><title>core::sync::atomic::fence (4 samples, 0.01%)</title><rect x="53.0398%" y="405" width="0.0102%" height="15" fill="rgb(208,226,15)" fg:x="20729" fg:w="4"/><text x="53.2898%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (5 samples, 0.01%)</title><rect x="53.0653%" y="293" width="0.0128%" height="15" fill="rgb(217,221,4)" fg:x="20739" fg:w="5"/><text x="53.3153%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.01%)</title><rect x="53.0653%" y="277" width="0.0128%" height="15" fill="rgb(212,174,34)" fg:x="20739" fg:w="5"/><text x="53.3153%" y="287.50"></text></g><g><title>[[vdso]] (4 samples, 0.01%)</title><rect x="53.0807%" y="213" width="0.0102%" height="15" fill="rgb(253,83,4)" fg:x="20745" fg:w="4"/><text x="53.3307%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5 samples, 0.01%)</title><rect x="53.0807%" y="277" width="0.0128%" height="15" fill="rgb(250,195,49)" fg:x="20745" fg:w="5"/><text x="53.3307%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wait::_{{closure}} (5 samples, 0.01%)</title><rect x="53.0807%" y="261" width="0.0128%" height="15" fill="rgb(241,192,25)" fg:x="20745" fg:w="5"/><text x="53.3307%" y="271.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (5 samples, 0.01%)</title><rect x="53.0807%" y="245" width="0.0128%" height="15" fill="rgb(208,124,10)" fg:x="20745" fg:w="5"/><text x="53.3307%" y="255.50"></text></g><g><title>clock_gettime (5 samples, 0.01%)</title><rect x="53.0807%" y="229" width="0.0128%" height="15" fill="rgb(222,33,0)" fg:x="20745" fg:w="5"/><text x="53.3307%" y="239.50"></text></g><g><title>futex_setup_timer (5 samples, 0.01%)</title><rect x="53.1396%" y="181" width="0.0128%" height="15" fill="rgb(234,209,28)" fg:x="20768" fg:w="5"/><text x="53.3896%" y="191.50"></text></g><g><title>hrtimer_init_sleeper (4 samples, 0.01%)</title><rect x="53.1421%" y="165" width="0.0102%" height="15" fill="rgb(224,11,23)" fg:x="20769" fg:w="4"/><text x="53.3921%" y="175.50"></text></g><g><title>__hrtimer_init (4 samples, 0.01%)</title><rect x="53.1421%" y="149" width="0.0102%" height="15" fill="rgb(232,99,1)" fg:x="20769" fg:w="4"/><text x="53.3921%" y="159.50"></text></g><g><title>futex_unqueue (4 samples, 0.01%)</title><rect x="53.1523%" y="181" width="0.0102%" height="15" fill="rgb(237,95,45)" fg:x="20773" fg:w="4"/><text x="53.4023%" y="191.50"></text></g><g><title>hrtimer_sleeper_start_expires (6 samples, 0.02%)</title><rect x="53.1651%" y="165" width="0.0154%" height="15" fill="rgb(208,109,11)" fg:x="20778" fg:w="6"/><text x="53.4151%" y="175.50"></text></g><g><title>hrtimer_start_range_ns (6 samples, 0.02%)</title><rect x="53.1651%" y="149" width="0.0154%" height="15" fill="rgb(216,190,48)" fg:x="20778" fg:w="6"/><text x="53.4151%" y="159.50"></text></g><g><title>update_curr (5 samples, 0.01%)</title><rect x="53.2342%" y="85" width="0.0128%" height="15" fill="rgb(251,171,36)" fg:x="20805" fg:w="5"/><text x="53.4842%" y="95.50"></text></g><g><title>dequeue_entity (14 samples, 0.04%)</title><rect x="53.2240%" y="101" width="0.0358%" height="15" fill="rgb(230,62,22)" fg:x="20801" fg:w="14"/><text x="53.4740%" y="111.50"></text></g><g><title>update_load_avg (5 samples, 0.01%)</title><rect x="53.2470%" y="85" width="0.0128%" height="15" fill="rgb(225,114,35)" fg:x="20810" fg:w="5"/><text x="53.4970%" y="95.50"></text></g><g><title>dequeue_task (18 samples, 0.05%)</title><rect x="53.2189%" y="133" width="0.0461%" height="15" fill="rgb(215,118,42)" fg:x="20799" fg:w="18"/><text x="53.4689%" y="143.50"></text></g><g><title>dequeue_task_fair (18 samples, 0.05%)</title><rect x="53.2189%" y="117" width="0.0461%" height="15" fill="rgb(243,119,21)" fg:x="20799" fg:w="18"/><text x="53.4689%" y="127.50"></text></g><g><title>finish_task_switch.isra.0 (14 samples, 0.04%)</title><rect x="53.2649%" y="133" width="0.0358%" height="15" fill="rgb(252,177,53)" fg:x="20817" fg:w="14"/><text x="53.5149%" y="143.50"></text></g><g><title>raw_spin_rq_unlock (6 samples, 0.02%)</title><rect x="53.2854%" y="117" width="0.0154%" height="15" fill="rgb(237,209,29)" fg:x="20825" fg:w="6"/><text x="53.5354%" y="127.50"></text></g><g><title>pick_next_task (5 samples, 0.01%)</title><rect x="53.3008%" y="133" width="0.0128%" height="15" fill="rgb(212,65,23)" fg:x="20831" fg:w="5"/><text x="53.5508%" y="143.50"></text></g><g><title>prepare_task_switch (6 samples, 0.02%)</title><rect x="53.3135%" y="133" width="0.0154%" height="15" fill="rgb(230,222,46)" fg:x="20836" fg:w="6"/><text x="53.5635%" y="143.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.01%)</title><rect x="53.3187%" y="117" width="0.0102%" height="15" fill="rgb(215,135,32)" fg:x="20838" fg:w="4"/><text x="53.5687%" y="127.50"></text></g><g><title>psi_group_change (12 samples, 0.03%)</title><rect x="53.3391%" y="117" width="0.0307%" height="15" fill="rgb(246,101,22)" fg:x="20846" fg:w="12"/><text x="53.5891%" y="127.50"></text></g><g><title>record_times (5 samples, 0.01%)</title><rect x="53.3698%" y="117" width="0.0128%" height="15" fill="rgb(206,107,13)" fg:x="20858" fg:w="5"/><text x="53.6198%" y="127.50"></text></g><g><title>psi_task_switch (22 samples, 0.06%)</title><rect x="53.3315%" y="133" width="0.0563%" height="15" fill="rgb(250,100,44)" fg:x="20843" fg:w="22"/><text x="53.5815%" y="143.50"></text></g><g><title>__schedule (72 samples, 0.18%)</title><rect x="53.2061%" y="149" width="0.1842%" height="15" fill="rgb(231,147,38)" fg:x="20794" fg:w="72"/><text x="53.4561%" y="159.50"></text></g><g><title>futex_wait_queue (90 samples, 0.23%)</title><rect x="53.1626%" y="181" width="0.2303%" height="15" fill="rgb(229,8,40)" fg:x="20777" fg:w="90"/><text x="53.4126%" y="191.50"></text></g><g><title>schedule (81 samples, 0.21%)</title><rect x="53.1856%" y="165" width="0.2073%" height="15" fill="rgb(221,135,30)" fg:x="20786" fg:w="81"/><text x="53.4356%" y="175.50"></text></g><g><title>__get_user_nocheck_4 (6 samples, 0.02%)</title><rect x="53.3929%" y="165" width="0.0154%" height="15" fill="rgb(249,193,18)" fg:x="20867" fg:w="6"/><text x="53.6429%" y="175.50"></text></g><g><title>futex_q_lock (7 samples, 0.02%)</title><rect x="53.4210%" y="165" width="0.0179%" height="15" fill="rgb(209,133,39)" fg:x="20878" fg:w="7"/><text x="53.6710%" y="175.50"></text></g><g><title>futex_wait_setup (19 samples, 0.05%)</title><rect x="53.3929%" y="181" width="0.0486%" height="15" fill="rgb(232,100,14)" fg:x="20867" fg:w="19"/><text x="53.6429%" y="191.50"></text></g><g><title>hrtimer_cancel (5 samples, 0.01%)</title><rect x="53.4415%" y="181" width="0.0128%" height="15" fill="rgb(224,185,1)" fg:x="20886" fg:w="5"/><text x="53.6915%" y="191.50"></text></g><g><title>hrtimer_try_to_cancel (5 samples, 0.01%)</title><rect x="53.4415%" y="165" width="0.0128%" height="15" fill="rgb(223,139,8)" fg:x="20886" fg:w="5"/><text x="53.6915%" y="175.50"></text></g><g><title>do_futex (131 samples, 0.34%)</title><rect x="53.1268%" y="213" width="0.3352%" height="15" fill="rgb(232,213,38)" fg:x="20763" fg:w="131"/><text x="53.3768%" y="223.50"></text></g><g><title>futex_wait (130 samples, 0.33%)</title><rect x="53.1293%" y="197" width="0.3326%" height="15" fill="rgb(207,94,22)" fg:x="20764" fg:w="130"/><text x="53.3793%" y="207.50"></text></g><g><title>__x64_sys_futex (143 samples, 0.37%)</title><rect x="53.1088%" y="229" width="0.3659%" height="15" fill="rgb(219,183,54)" fg:x="20756" fg:w="143"/><text x="53.3588%" y="239.50"></text></g><g><title>get_timespec64 (5 samples, 0.01%)</title><rect x="53.4620%" y="213" width="0.0128%" height="15" fill="rgb(216,185,54)" fg:x="20894" fg:w="5"/><text x="53.7120%" y="223.50"></text></g><g><title>exit_to_user_mode_loop (11 samples, 0.03%)</title><rect x="53.4773%" y="197" width="0.0281%" height="15" fill="rgb(254,217,39)" fg:x="20900" fg:w="11"/><text x="53.7273%" y="207.50"></text></g><g><title>__rseq_handle_notify_resume (4 samples, 0.01%)</title><rect x="53.4952%" y="181" width="0.0102%" height="15" fill="rgb(240,178,23)" fg:x="20907" fg:w="4"/><text x="53.7452%" y="191.50"></text></g><g><title>std::sync::mpmc::context::Context::wait_until (178 samples, 0.46%)</title><rect x="53.0577%" y="341" width="0.4555%" height="15" fill="rgb(218,11,47)" fg:x="20736" fg:w="178"/><text x="53.3077%" y="351.50"></text></g><g><title>std::thread::park_timeout (177 samples, 0.45%)</title><rect x="53.0602%" y="325" width="0.4529%" height="15" fill="rgb(218,51,51)" fg:x="20737" fg:w="177"/><text x="53.3102%" y="335.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park_timeout (175 samples, 0.45%)</title><rect x="53.0653%" y="309" width="0.4478%" height="15" fill="rgb(238,126,27)" fg:x="20739" fg:w="175"/><text x="53.3153%" y="319.50"></text></g><g><title>std::sys::unix::futex::futex_wait (170 samples, 0.43%)</title><rect x="53.0781%" y="293" width="0.4350%" height="15" fill="rgb(249,202,22)" fg:x="20744" fg:w="170"/><text x="53.3281%" y="303.50"></text></g><g><title>syscall (164 samples, 0.42%)</title><rect x="53.0935%" y="277" width="0.4196%" height="15" fill="rgb(254,195,49)" fg:x="20750" fg:w="164"/><text x="53.3435%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (159 samples, 0.41%)</title><rect x="53.1063%" y="261" width="0.4068%" height="15" fill="rgb(208,123,14)" fg:x="20755" fg:w="159"/><text x="53.3563%" y="271.50"></text></g><g><title>do_syscall_64 (159 samples, 0.41%)</title><rect x="53.1063%" y="245" width="0.4068%" height="15" fill="rgb(224,200,8)" fg:x="20755" fg:w="159"/><text x="53.3563%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.04%)</title><rect x="53.4747%" y="229" width="0.0384%" height="15" fill="rgb(217,61,36)" fg:x="20899" fg:w="15"/><text x="53.7247%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (15 samples, 0.04%)</title><rect x="53.4747%" y="213" width="0.0384%" height="15" fill="rgb(206,35,45)" fg:x="20899" fg:w="15"/><text x="53.7247%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (8 samples, 0.02%)</title><rect x="53.5208%" y="325" width="0.0205%" height="15" fill="rgb(217,65,33)" fg:x="20917" fg:w="8"/><text x="53.7708%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_store (8 samples, 0.02%)</title><rect x="53.5208%" y="309" width="0.0205%" height="15" fill="rgb(222,158,48)" fg:x="20917" fg:w="8"/><text x="53.7708%" y="319.50"></text></g><g><title>std::sync::mpmc::waker::Waker::register (5 samples, 0.01%)</title><rect x="53.5413%" y="325" width="0.0128%" height="15" fill="rgb(254,2,54)" fg:x="20925" fg:w="5"/><text x="53.7913%" y="335.50"></text></g><g><title>std::sync::mpmc::waker::Waker::register_with_packet (5 samples, 0.01%)</title><rect x="53.5413%" y="309" width="0.0128%" height="15" fill="rgb(250,143,38)" fg:x="20925" fg:w="5"/><text x="53.7913%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="53.5413%" y="293" width="0.0128%" height="15" fill="rgb(248,25,0)" fg:x="20925" fg:w="5"/><text x="53.7913%" y="303.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="53.5413%" y="277" width="0.0128%" height="15" fill="rgb(206,152,27)" fg:x="20925" fg:w="5"/><text x="53.7913%" y="287.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::register (24 samples, 0.06%)</title><rect x="53.5131%" y="341" width="0.0614%" height="15" fill="rgb(240,77,30)" fg:x="20914" fg:w="24"/><text x="53.7631%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="53.5541%" y="325" width="0.0205%" height="15" fill="rgb(231,5,3)" fg:x="20930" fg:w="8"/><text x="53.8041%" y="335.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (8 samples, 0.02%)</title><rect x="53.5541%" y="309" width="0.0205%" height="15" fill="rgb(207,226,32)" fg:x="20930" fg:w="8"/><text x="53.8041%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (8 samples, 0.02%)</title><rect x="53.5541%" y="293" width="0.0205%" height="15" fill="rgb(222,207,47)" fg:x="20930" fg:w="8"/><text x="53.8041%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="53.5541%" y="277" width="0.0205%" height="15" fill="rgb(229,115,45)" fg:x="20930" fg:w="8"/><text x="53.8041%" y="287.50"></text></g><g><title>std::sync::mpmc::context::Context::with (207 samples, 0.53%)</title><rect x="53.0500%" y="421" width="0.5297%" height="15" fill="rgb(224,191,6)" fg:x="20733" fg:w="207"/><text x="53.3000%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (207 samples, 0.53%)</title><rect x="53.0500%" y="405" width="0.5297%" height="15" fill="rgb(230,227,24)" fg:x="20733" fg:w="207"/><text x="53.3000%" y="415.50"></text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (207 samples, 0.53%)</title><rect x="53.0500%" y="389" width="0.5297%" height="15" fill="rgb(228,80,19)" fg:x="20733" fg:w="207"/><text x="53.3000%" y="399.50"></text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (207 samples, 0.53%)</title><rect x="53.0500%" y="373" width="0.5297%" height="15" fill="rgb(247,229,0)" fg:x="20733" fg:w="207"/><text x="53.3000%" y="383.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv::_{{closure}} (207 samples, 0.53%)</title><rect x="53.0500%" y="357" width="0.5297%" height="15" fill="rgb(237,194,15)" fg:x="20733" fg:w="207"/><text x="53.3000%" y="367.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv_deadline (431 samples, 1.10%)</title><rect x="52.4896%" y="453" width="1.1028%" height="15" fill="rgb(219,203,20)" fg:x="20514" fg:w="431"/><text x="52.7396%" y="463.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (431 samples, 1.10%)</title><rect x="52.4896%" y="437" width="1.1028%" height="15" fill="rgb(234,128,8)" fg:x="20514" fg:w="431"/><text x="52.7396%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (5 samples, 0.01%)</title><rect x="53.5797%" y="421" width="0.0128%" height="15" fill="rgb(248,202,8)" fg:x="20940" fg:w="5"/><text x="53.8297%" y="431.50"></text></g><g><title>clock_gettime (5 samples, 0.01%)</title><rect x="53.5797%" y="405" width="0.0128%" height="15" fill="rgb(206,104,37)" fg:x="20940" fg:w="5"/><text x="53.8297%" y="415.50"></text></g><g><title>[[vdso]] (5 samples, 0.01%)</title><rect x="53.5797%" y="389" width="0.0128%" height="15" fill="rgb(223,8,27)" fg:x="20940" fg:w="5"/><text x="53.8297%" y="399.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv_timeout (4 samples, 0.01%)</title><rect x="53.5924%" y="453" width="0.0102%" height="15" fill="rgb(216,217,28)" fg:x="20945" fg:w="4"/><text x="53.8424%" y="463.50"></text></g><g><title>[[vdso]] (131 samples, 0.34%)</title><rect x="53.6257%" y="421" width="0.3352%" height="15" fill="rgb(249,199,1)" fg:x="20958" fg:w="131"/><text x="53.8757%" y="431.50"></text></g><g><title>[[vdso]] (88 samples, 0.23%)</title><rect x="53.7357%" y="405" width="0.2252%" height="15" fill="rgb(240,85,17)" fg:x="21001" fg:w="88"/><text x="53.9857%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (146 samples, 0.37%)</title><rect x="53.6027%" y="453" width="0.3736%" height="15" fill="rgb(206,108,45)" fg:x="20949" fg:w="146"/><text x="53.8527%" y="463.50"></text></g><g><title>clock_gettime (140 samples, 0.36%)</title><rect x="53.6180%" y="437" width="0.3582%" height="15" fill="rgb(245,210,41)" fg:x="20955" fg:w="140"/><text x="53.8680%" y="447.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.02%)</title><rect x="53.9609%" y="421" width="0.0154%" height="15" fill="rgb(206,13,37)" fg:x="21089" fg:w="6"/><text x="54.2109%" y="431.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv_timeout (605 samples, 1.55%)</title><rect x="52.4640%" y="485" width="1.5480%" height="15" fill="rgb(250,61,18)" fg:x="20504" fg:w="605"/><text x="52.7140%" y="495.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv_timeout (602 samples, 1.54%)</title><rect x="52.4717%" y="469" width="1.5404%" height="15" fill="rgb(235,172,48)" fg:x="20507" fg:w="602"/><text x="52.7217%" y="479.50"></text></g><g><title>std::time::SystemTime::checked_add (12 samples, 0.03%)</title><rect x="53.9814%" y="453" width="0.0307%" height="15" fill="rgb(249,201,17)" fg:x="21097" fg:w="12"/><text x="54.2314%" y="463.50"></text></g><g><title>std::sys::unix::time::SystemTime::checked_add_duration (12 samples, 0.03%)</title><rect x="53.9814%" y="437" width="0.0307%" height="15" fill="rgb(219,208,6)" fg:x="21097" fg:w="12"/><text x="54.2314%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::checked_add_duration (12 samples, 0.03%)</title><rect x="53.9814%" y="421" width="0.0307%" height="15" fill="rgb(248,31,23)" fg:x="21097" fg:w="12"/><text x="54.2314%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.01%)</title><rect x="54.0018%" y="405" width="0.0102%" height="15" fill="rgb(245,15,42)" fg:x="21105" fg:w="4"/><text x="54.2518%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (6 samples, 0.02%)</title><rect x="54.0607%" y="389" width="0.0154%" height="15" fill="rgb(222,217,39)" fg:x="21128" fg:w="6"/><text x="54.3107%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::ge (6 samples, 0.02%)</title><rect x="54.0607%" y="373" width="0.0154%" height="15" fill="rgb(210,219,27)" fg:x="21128" fg:w="6"/><text x="54.3107%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 0.01%)</title><rect x="54.0633%" y="357" width="0.0128%" height="15" fill="rgb(252,166,36)" fg:x="21129" fg:w="5"/><text x="54.3133%" y="367.50"></text></g><g><title>std::time::Instant::duration_since (22 samples, 0.06%)</title><rect x="54.0274%" y="453" width="0.0563%" height="15" fill="rgb(245,132,34)" fg:x="21115" fg:w="22"/><text x="54.2774%" y="463.50"></text></g><g><title>std::time::Instant::checked_duration_since (21 samples, 0.05%)</title><rect x="54.0300%" y="437" width="0.0537%" height="15" fill="rgb(236,54,3)" fg:x="21116" fg:w="21"/><text x="54.2800%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (21 samples, 0.05%)</title><rect x="54.0300%" y="421" width="0.0537%" height="15" fill="rgb(241,173,43)" fg:x="21116" fg:w="21"/><text x="54.2800%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (21 samples, 0.05%)</title><rect x="54.0300%" y="405" width="0.0537%" height="15" fill="rgb(215,190,9)" fg:x="21116" fg:w="21"/><text x="54.2800%" y="415.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (27 samples, 0.07%)</title><rect x="54.0274%" y="469" width="0.0691%" height="15" fill="rgb(242,101,16)" fg:x="21115" fg:w="27"/><text x="54.2774%" y="479.50"></text></g><g><title>std::time::Instant::elapsed (5 samples, 0.01%)</title><rect x="54.0837%" y="453" width="0.0128%" height="15" fill="rgb(223,190,21)" fg:x="21137" fg:w="5"/><text x="54.3337%" y="463.50"></text></g><g><title>[[vdso]] (148 samples, 0.38%)</title><rect x="54.1144%" y="405" width="0.3787%" height="15" fill="rgb(215,228,25)" fg:x="21149" fg:w="148"/><text x="54.3644%" y="415.50"></text></g><g><title>[[vdso]] (107 samples, 0.27%)</title><rect x="54.2193%" y="389" width="0.2738%" height="15" fill="rgb(225,36,22)" fg:x="21190" fg:w="107"/><text x="54.4693%" y="399.50"></text></g><g><title>std::time::Instant::elapsed (192 samples, 0.49%)</title><rect x="54.0121%" y="485" width="0.4913%" height="15" fill="rgb(251,106,46)" fg:x="21109" fg:w="192"/><text x="54.2621%" y="495.50"></text></g><g><title>std::time::Instant::now (159 samples, 0.41%)</title><rect x="54.0965%" y="469" width="0.4068%" height="15" fill="rgb(208,90,1)" fg:x="21142" fg:w="159"/><text x="54.3465%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (159 samples, 0.41%)</title><rect x="54.0965%" y="453" width="0.4068%" height="15" fill="rgb(243,10,4)" fg:x="21142" fg:w="159"/><text x="54.3465%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (155 samples, 0.40%)</title><rect x="54.1067%" y="437" width="0.3966%" height="15" fill="rgb(212,137,27)" fg:x="21146" fg:w="155"/><text x="54.3567%" y="447.50"></text></g><g><title>clock_gettime (154 samples, 0.39%)</title><rect x="54.1093%" y="421" width="0.3940%" height="15" fill="rgb(231,220,49)" fg:x="21147" fg:w="154"/><text x="54.3593%" y="431.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.01%)</title><rect x="54.4931%" y="405" width="0.0102%" height="15" fill="rgb(237,96,20)" fg:x="21297" fg:w="4"/><text x="54.7431%" y="415.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (306 samples, 0.78%)</title><rect x="54.7029%" y="469" width="0.7830%" height="15" fill="rgb(239,229,30)" fg:x="21379" fg:w="306"/><text x="54.9529%" y="479.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (306 samples, 0.78%)</title><rect x="54.7029%" y="453" width="0.7830%" height="15" fill="rgb(219,65,33)" fg:x="21379" fg:w="306"/><text x="54.9529%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (306 samples, 0.78%)</title><rect x="54.7029%" y="437" width="0.7830%" height="15" fill="rgb(243,134,7)" fg:x="21379" fg:w="306"/><text x="54.9529%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.03%)</title><rect x="55.4859%" y="469" width="0.0333%" height="15" fill="rgb(216,177,54)" fg:x="21685" fg:w="13"/><text x="55.7359%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (61 samples, 0.16%)</title><rect x="55.5345%" y="453" width="0.1561%" height="15" fill="rgb(211,160,20)" fg:x="21704" fg:w="61"/><text x="55.7845%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.16%)</title><rect x="55.5345%" y="437" width="0.1561%" height="15" fill="rgb(239,85,39)" fg:x="21704" fg:w="61"/><text x="55.7845%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (60 samples, 0.15%)</title><rect x="55.5371%" y="421" width="0.1535%" height="15" fill="rgb(232,125,22)" fg:x="21705" fg:w="60"/><text x="55.7871%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (56 samples, 0.14%)</title><rect x="55.5473%" y="405" width="0.1433%" height="15" fill="rgb(244,57,34)" fg:x="21709" fg:w="56"/><text x="55.7973%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (56 samples, 0.14%)</title><rect x="55.5473%" y="389" width="0.1433%" height="15" fill="rgb(214,203,32)" fg:x="21709" fg:w="56"/><text x="55.7973%" y="399.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="55.6906%" y="437" width="0.0154%" height="15" fill="rgb(207,58,43)" fg:x="21765" fg:w="6"/><text x="55.9406%" y="447.50"></text></g><g><title>std::sync::poison::Flag::guard (6 samples, 0.02%)</title><rect x="55.6906%" y="421" width="0.0154%" height="15" fill="rgb(215,193,15)" fg:x="21765" fg:w="6"/><text x="55.9406%" y="431.50"></text></g><g><title>std::thread::panicking (6 samples, 0.02%)</title><rect x="55.6906%" y="405" width="0.0154%" height="15" fill="rgb(232,15,44)" fg:x="21765" fg:w="6"/><text x="55.9406%" y="415.50"></text></g><g><title>std::panicking::panicking (6 samples, 0.02%)</title><rect x="55.6906%" y="389" width="0.0154%" height="15" fill="rgb(212,3,48)" fg:x="21765" fg:w="6"/><text x="55.9406%" y="399.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (6 samples, 0.02%)</title><rect x="55.6906%" y="373" width="0.0154%" height="15" fill="rgb(218,128,7)" fg:x="21765" fg:w="6"/><text x="55.9406%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (77 samples, 0.20%)</title><rect x="55.6906%" y="453" width="0.1970%" height="15" fill="rgb(226,216,39)" fg:x="21765" fg:w="77"/><text x="55.9406%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (71 samples, 0.18%)</title><rect x="55.7060%" y="437" width="0.1817%" height="15" fill="rgb(243,47,51)" fg:x="21771" fg:w="71"/><text x="55.9560%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (69 samples, 0.18%)</title><rect x="55.7111%" y="421" width="0.1766%" height="15" fill="rgb(241,183,40)" fg:x="21773" fg:w="69"/><text x="55.9611%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (69 samples, 0.18%)</title><rect x="55.7111%" y="405" width="0.1766%" height="15" fill="rgb(231,217,32)" fg:x="21773" fg:w="69"/><text x="55.9611%" y="415.50"></text></g><g><title>EVP_CIPHER_CTX_get_block_size (5 samples, 0.01%)</title><rect x="55.9618%" y="421" width="0.0128%" height="15" fill="rgb(229,61,38)" fg:x="21871" fg:w="5"/><text x="56.2118%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (344 samples, 0.88%)</title><rect x="55.5192%" y="469" width="0.8802%" height="15" fill="rgb(225,210,5)" fg:x="21698" fg:w="344"/><text x="55.7692%" y="479.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (200 samples, 0.51%)</title><rect x="55.8876%" y="453" width="0.5117%" height="15" fill="rgb(231,79,45)" fg:x="21842" fg:w="200"/><text x="56.1376%" y="463.50"></text></g><g><title>EVP_DecryptUpdate (196 samples, 0.50%)</title><rect x="55.8979%" y="437" width="0.5015%" height="15" fill="rgb(224,100,7)" fg:x="21846" fg:w="196"/><text x="56.1479%" y="447.50"></text></g><g><title>[libcrypto.so.3] (166 samples, 0.42%)</title><rect x="55.9746%" y="421" width="0.4247%" height="15" fill="rgb(241,198,18)" fg:x="21876" fg:w="166"/><text x="56.2246%" y="431.50"></text></g><g><title>[libcrypto.so.3] (119 samples, 0.30%)</title><rect x="56.0949%" y="405" width="0.3045%" height="15" fill="rgb(252,97,53)" fg:x="21923" fg:w="119"/><text x="56.3449%" y="415.50"></text></g><g><title>[libcrypto.so.3] (113 samples, 0.29%)</title><rect x="56.1102%" y="389" width="0.2891%" height="15" fill="rgb(220,88,7)" fg:x="21929" fg:w="113"/><text x="56.3602%" y="399.50"></text></g><g><title>__rust_probestack (9 samples, 0.02%)</title><rect x="56.3994%" y="469" width="0.0230%" height="15" fill="rgb(213,176,14)" fg:x="22042" fg:w="9"/><text x="56.6494%" y="479.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.01%)</title><rect x="56.4250%" y="469" width="0.0128%" height="15" fill="rgb(246,73,7)" fg:x="22052" fg:w="5"/><text x="56.6750%" y="479.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (5 samples, 0.01%)</title><rect x="56.4250%" y="453" width="0.0128%" height="15" fill="rgb(245,64,36)" fg:x="22052" fg:w="5"/><text x="56.6750%" y="463.50"></text></g><g><title>core::num::nonzero::NonZeroU32::new (6 samples, 0.02%)</title><rect x="56.4377%" y="469" width="0.0154%" height="15" fill="rgb(245,80,10)" fg:x="22057" fg:w="6"/><text x="56.6877%" y="479.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="56.4403%" y="453" width="0.0128%" height="15" fill="rgb(232,107,50)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="463.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="56.4403%" y="437" width="0.0128%" height="15" fill="rgb(253,3,0)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="447.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="56.4403%" y="421" width="0.0128%" height="15" fill="rgb(212,99,53)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="431.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="56.4403%" y="405" width="0.0128%" height="15" fill="rgb(249,111,54)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="415.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="56.4403%" y="389" width="0.0128%" height="15" fill="rgb(249,55,30)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="399.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="56.4403%" y="373" width="0.0128%" height="15" fill="rgb(237,47,42)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="383.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="56.4403%" y="357" width="0.0128%" height="15" fill="rgb(211,20,18)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="367.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="56.4403%" y="341" width="0.0128%" height="15" fill="rgb(231,203,46)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="351.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="56.4403%" y="325" width="0.0128%" height="15" fill="rgb(237,142,3)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="56.4403%" y="309" width="0.0128%" height="15" fill="rgb(241,107,1)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="319.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="56.4403%" y="293" width="0.0128%" height="15" fill="rgb(229,83,13)" fg:x="22058" fg:w="5"/><text x="56.6903%" y="303.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade::_{{closure}} (7 samples, 0.02%)</title><rect x="56.4710%" y="405" width="0.0179%" height="15" fill="rgb(241,91,40)" fg:x="22070" fg:w="7"/><text x="56.7210%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (43 samples, 0.11%)</title><rect x="56.4889%" y="405" width="0.1100%" height="15" fill="rgb(225,3,45)" fg:x="22077" fg:w="43"/><text x="56.7389%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (43 samples, 0.11%)</title><rect x="56.4889%" y="389" width="0.1100%" height="15" fill="rgb(244,223,14)" fg:x="22077" fg:w="43"/><text x="56.7389%" y="399.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (63 samples, 0.16%)</title><rect x="56.4531%" y="437" width="0.1612%" height="15" fill="rgb(224,124,37)" fg:x="22063" fg:w="63"/><text x="56.7031%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (61 samples, 0.16%)</title><rect x="56.4582%" y="421" width="0.1561%" height="15" fill="rgb(251,171,30)" fg:x="22065" fg:w="61"/><text x="56.7082%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.02%)</title><rect x="56.5989%" y="405" width="0.0154%" height="15" fill="rgb(236,46,54)" fg:x="22120" fg:w="6"/><text x="56.8489%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="56.5989%" y="389" width="0.0154%" height="15" fill="rgb(245,213,5)" fg:x="22120" fg:w="6"/><text x="56.8489%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (71 samples, 0.18%)</title><rect x="56.4531%" y="469" width="0.1817%" height="15" fill="rgb(230,144,27)" fg:x="22063" fg:w="71"/><text x="56.7031%" y="479.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive::_{{closure}} (71 samples, 0.18%)</title><rect x="56.4531%" y="453" width="0.1817%" height="15" fill="rgb(220,86,6)" fg:x="22063" fg:w="71"/><text x="56.7031%" y="463.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (8 samples, 0.02%)</title><rect x="56.6143%" y="437" width="0.0205%" height="15" fill="rgb(240,20,13)" fg:x="22126" fg:w="8"/><text x="56.8643%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt; (55 samples, 0.14%)</title><rect x="56.6348%" y="469" width="0.1407%" height="15" fill="rgb(217,89,34)" fg:x="22134" fg:w="55"/><text x="56.8848%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.14%)</title><rect x="56.6348%" y="453" width="0.1407%" height="15" fill="rgb(229,13,5)" fg:x="22134" fg:w="55"/><text x="56.8848%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (53 samples, 0.14%)</title><rect x="56.6399%" y="437" width="0.1356%" height="15" fill="rgb(244,67,35)" fg:x="22136" fg:w="53"/><text x="56.8899%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (53 samples, 0.14%)</title><rect x="56.6399%" y="421" width="0.1356%" height="15" fill="rgb(221,40,2)" fg:x="22136" fg:w="53"/><text x="56.8899%" y="431.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.01%)</title><rect x="56.7832%" y="293" width="0.0102%" height="15" fill="rgb(237,157,21)" fg:x="22192" fg:w="4"/><text x="57.0332%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.01%)</title><rect x="56.7832%" y="277" width="0.0102%" height="15" fill="rgb(222,94,11)" fg:x="22192" fg:w="4"/><text x="57.0332%" y="287.50"></text></g><g><title>[libc.so.6] (73 samples, 0.19%)</title><rect x="57.9346%" y="261" width="0.1868%" height="15" fill="rgb(249,113,6)" fg:x="22642" fg:w="73"/><text x="58.1846%" y="271.50"></text></g><g><title>__entry_text_start (13 samples, 0.03%)</title><rect x="58.2109%" y="245" width="0.0333%" height="15" fill="rgb(238,137,36)" fg:x="22750" fg:w="13"/><text x="58.4609%" y="255.50"></text></g><g><title>futex_unqueue (8 samples, 0.02%)</title><rect x="58.3133%" y="165" width="0.0205%" height="15" fill="rgb(210,102,26)" fg:x="22790" fg:w="8"/><text x="58.5633%" y="175.50"></text></g><g><title>update_curr (16 samples, 0.04%)</title><rect x="58.4131%" y="69" width="0.0409%" height="15" fill="rgb(218,30,30)" fg:x="22829" fg:w="16"/><text x="58.6631%" y="79.50"></text></g><g><title>cpuacct_charge (8 samples, 0.02%)</title><rect x="58.4335%" y="53" width="0.0205%" height="15" fill="rgb(214,67,26)" fg:x="22837" fg:w="8"/><text x="58.6835%" y="63.50"></text></g><g><title>dequeue_entity (23 samples, 0.06%)</title><rect x="58.4054%" y="85" width="0.0589%" height="15" fill="rgb(251,9,53)" fg:x="22826" fg:w="23"/><text x="58.6554%" y="95.50"></text></g><g><title>update_load_avg (4 samples, 0.01%)</title><rect x="58.4540%" y="69" width="0.0102%" height="15" fill="rgb(228,204,25)" fg:x="22845" fg:w="4"/><text x="58.7040%" y="79.50"></text></g><g><title>dequeue_task_fair (28 samples, 0.07%)</title><rect x="58.4003%" y="101" width="0.0716%" height="15" fill="rgb(207,153,8)" fg:x="22824" fg:w="28"/><text x="58.6503%" y="111.50"></text></g><g><title>dequeue_task (29 samples, 0.07%)</title><rect x="58.4003%" y="117" width="0.0742%" height="15" fill="rgb(242,9,16)" fg:x="22824" fg:w="29"/><text x="58.6503%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (8 samples, 0.02%)</title><rect x="58.4822%" y="101" width="0.0205%" height="15" fill="rgb(217,211,10)" fg:x="22856" fg:w="8"/><text x="58.7322%" y="111.50"></text></g><g><title>perf_ctx_enable (8 samples, 0.02%)</title><rect x="58.4822%" y="85" width="0.0205%" height="15" fill="rgb(219,228,52)" fg:x="22856" fg:w="8"/><text x="58.7322%" y="95.50"></text></g><g><title>x86_pmu_enable (4 samples, 0.01%)</title><rect x="58.4924%" y="69" width="0.0102%" height="15" fill="rgb(231,92,29)" fg:x="22860" fg:w="4"/><text x="58.7424%" y="79.50"></text></g><g><title>intel_pmu_enable_all (4 samples, 0.01%)</title><rect x="58.4924%" y="53" width="0.0102%" height="15" fill="rgb(232,8,23)" fg:x="22860" fg:w="4"/><text x="58.7424%" y="63.50"></text></g><g><title>native_write_msr (4 samples, 0.01%)</title><rect x="58.4924%" y="37" width="0.0102%" height="15" fill="rgb(216,211,34)" fg:x="22860" fg:w="4"/><text x="58.7424%" y="47.50"></text></g><g><title>finish_task_switch.isra.0 (19 samples, 0.05%)</title><rect x="58.4745%" y="117" width="0.0486%" height="15" fill="rgb(236,151,0)" fg:x="22853" fg:w="19"/><text x="58.7245%" y="127.50"></text></g><g><title>raw_spin_rq_unlock (5 samples, 0.01%)</title><rect x="58.5103%" y="101" width="0.0128%" height="15" fill="rgb(209,168,3)" fg:x="22867" fg:w="5"/><text x="58.7603%" y="111.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.01%)</title><rect x="58.5257%" y="101" width="0.0128%" height="15" fill="rgb(208,129,28)" fg:x="22873" fg:w="5"/><text x="58.7757%" y="111.50"></text></g><g><title>pick_next_task (10 samples, 0.03%)</title><rect x="58.5231%" y="117" width="0.0256%" height="15" fill="rgb(229,78,22)" fg:x="22872" fg:w="10"/><text x="58.7731%" y="127.50"></text></g><g><title>put_prev_task_fair (4 samples, 0.01%)</title><rect x="58.5385%" y="101" width="0.0102%" height="15" fill="rgb(228,187,13)" fg:x="22878" fg:w="4"/><text x="58.7885%" y="111.50"></text></g><g><title>prepare_task_switch (16 samples, 0.04%)</title><rect x="58.5513%" y="117" width="0.0409%" height="15" fill="rgb(240,119,24)" fg:x="22883" fg:w="16"/><text x="58.8013%" y="127.50"></text></g><g><title>__perf_event_task_sched_out (5 samples, 0.01%)</title><rect x="58.5794%" y="101" width="0.0128%" height="15" fill="rgb(209,194,42)" fg:x="22894" fg:w="5"/><text x="58.8294%" y="111.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="58.5820%" y="85" width="0.0102%" height="15" fill="rgb(247,200,46)" fg:x="22895" fg:w="4"/><text x="58.8320%" y="95.50"></text></g><g><title>psi_group_change (22 samples, 0.06%)</title><rect x="58.6280%" y="101" width="0.0563%" height="15" fill="rgb(218,76,16)" fg:x="22913" fg:w="22"/><text x="58.8780%" y="111.50"></text></g><g><title>psi_task_switch (35 samples, 0.09%)</title><rect x="58.5973%" y="117" width="0.0896%" height="15" fill="rgb(225,21,48)" fg:x="22901" fg:w="35"/><text x="58.8473%" y="127.50"></text></g><g><title>futex_wait_queue (143 samples, 0.37%)</title><rect x="58.3338%" y="165" width="0.3659%" height="15" fill="rgb(239,223,50)" fg:x="22798" fg:w="143"/><text x="58.5838%" y="175.50"></text></g><g><title>schedule (136 samples, 0.35%)</title><rect x="58.3517%" y="149" width="0.3480%" height="15" fill="rgb(244,45,21)" fg:x="22805" fg:w="136"/><text x="58.6017%" y="159.50"></text></g><g><title>__schedule (130 samples, 0.33%)</title><rect x="58.3670%" y="133" width="0.3326%" height="15" fill="rgb(232,33,43)" fg:x="22811" fg:w="130"/><text x="58.6170%" y="143.50"></text></g><g><title>__get_user_nocheck_4 (8 samples, 0.02%)</title><rect x="58.7125%" y="149" width="0.0205%" height="15" fill="rgb(209,8,3)" fg:x="22946" fg:w="8"/><text x="58.9625%" y="159.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.02%)</title><rect x="58.7329%" y="149" width="0.0154%" height="15" fill="rgb(214,25,53)" fg:x="22954" fg:w="6"/><text x="58.9829%" y="159.50"></text></g><g><title>futex_q_lock (8 samples, 0.02%)</title><rect x="58.7508%" y="149" width="0.0205%" height="15" fill="rgb(254,186,54)" fg:x="22961" fg:w="8"/><text x="59.0008%" y="159.50"></text></g><g><title>futex_wait (192 samples, 0.49%)</title><rect x="58.2851%" y="181" width="0.4913%" height="15" fill="rgb(208,174,49)" fg:x="22779" fg:w="192"/><text x="58.5351%" y="191.50"></text></g><g><title>futex_wait_setup (30 samples, 0.08%)</title><rect x="58.6997%" y="165" width="0.0768%" height="15" fill="rgb(233,191,51)" fg:x="22941" fg:w="30"/><text x="58.9497%" y="175.50"></text></g><g><title>__x64_sys_futex (201 samples, 0.51%)</title><rect x="58.2647%" y="213" width="0.5143%" height="15" fill="rgb(222,134,10)" fg:x="22771" fg:w="201"/><text x="58.5147%" y="223.50"></text></g><g><title>do_futex (200 samples, 0.51%)</title><rect x="58.2672%" y="197" width="0.5117%" height="15" fill="rgb(230,226,20)" fg:x="22772" fg:w="200"/><text x="58.5172%" y="207.50"></text></g><g><title>__rseq_handle_notify_resume (7 samples, 0.02%)</title><rect x="58.8122%" y="165" width="0.0179%" height="15" fill="rgb(251,111,25)" fg:x="22985" fg:w="7"/><text x="59.0622%" y="175.50"></text></g><g><title>rseq_update_cpu_node_id (5 samples, 0.01%)</title><rect x="58.8174%" y="149" width="0.0128%" height="15" fill="rgb(224,40,46)" fg:x="22987" fg:w="5"/><text x="59.0674%" y="159.50"></text></g><g><title>exit_to_user_mode_loop (12 samples, 0.03%)</title><rect x="58.8020%" y="181" width="0.0307%" height="15" fill="rgb(236,108,47)" fg:x="22981" fg:w="12"/><text x="59.0520%" y="191.50"></text></g><g><title>exit_to_user_mode_prepare (19 samples, 0.05%)</title><rect x="58.7892%" y="197" width="0.0486%" height="15" fill="rgb(234,93,0)" fg:x="22976" fg:w="19"/><text x="59.0392%" y="207.50"></text></g><g><title>do_syscall_64 (227 samples, 0.58%)</title><rect x="58.2596%" y="229" width="0.5808%" height="15" fill="rgb(224,213,32)" fg:x="22769" fg:w="227"/><text x="58.5096%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (22 samples, 0.06%)</title><rect x="58.7841%" y="213" width="0.0563%" height="15" fill="rgb(251,11,48)" fg:x="22974" fg:w="22"/><text x="59.0341%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (233 samples, 0.60%)</title><rect x="58.2468%" y="245" width="0.5962%" height="15" fill="rgb(236,173,5)" fg:x="22764" fg:w="233"/><text x="58.4968%" y="255.50"></text></g><g><title>__lll_lock_wait_private (283 samples, 0.72%)</title><rect x="58.1214%" y="261" width="0.7241%" height="15" fill="rgb(230,95,12)" fg:x="22715" fg:w="283"/><text x="58.3714%" y="271.50"></text></g><g><title>[libc.so.6] (759 samples, 1.94%)</title><rect x="56.9060%" y="277" width="1.9421%" height="15" fill="rgb(232,209,1)" fg:x="22240" fg:w="759"/><text x="57.1560%" y="287.50">[..</text></g><g><title>__entry_text_start (8 samples, 0.02%)</title><rect x="58.8711%" y="261" width="0.0205%" height="15" fill="rgb(232,6,1)" fg:x="23008" fg:w="8"/><text x="59.1211%" y="271.50"></text></g><g><title>futex_hash (7 samples, 0.02%)</title><rect x="58.9171%" y="197" width="0.0179%" height="15" fill="rgb(210,224,50)" fg:x="23026" fg:w="7"/><text x="59.1671%" y="207.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.03%)</title><rect x="59.0297%" y="181" width="0.0307%" height="15" fill="rgb(228,127,35)" fg:x="23070" fg:w="12"/><text x="59.2797%" y="191.50"></text></g><g><title>native_queued_spin_lock_slowpath (12 samples, 0.03%)</title><rect x="59.0297%" y="165" width="0.0307%" height="15" fill="rgb(245,102,45)" fg:x="23070" fg:w="12"/><text x="59.2797%" y="175.50"></text></g><g><title>__x64_sys_futex (65 samples, 0.17%)</title><rect x="58.8992%" y="229" width="0.1663%" height="15" fill="rgb(214,1,49)" fg:x="23019" fg:w="65"/><text x="59.1492%" y="239.50"></text></g><g><title>do_futex (61 samples, 0.16%)</title><rect x="58.9095%" y="213" width="0.1561%" height="15" fill="rgb(226,163,40)" fg:x="23023" fg:w="61"/><text x="59.1595%" y="223.50"></text></g><g><title>futex_wake (51 samples, 0.13%)</title><rect x="58.9351%" y="197" width="0.1305%" height="15" fill="rgb(239,212,28)" fg:x="23033" fg:w="51"/><text x="59.1851%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (78 samples, 0.20%)</title><rect x="58.8916%" y="261" width="0.1996%" height="15" fill="rgb(220,20,13)" fg:x="23016" fg:w="78"/><text x="59.1416%" y="271.50"></text></g><g><title>do_syscall_64 (77 samples, 0.20%)</title><rect x="58.8941%" y="245" width="0.1970%" height="15" fill="rgb(210,164,35)" fg:x="23017" fg:w="77"/><text x="59.1441%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.02%)</title><rect x="59.0758%" y="229" width="0.0154%" height="15" fill="rgb(248,109,41)" fg:x="23088" fg:w="6"/><text x="59.3258%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.02%)</title><rect x="59.0758%" y="213" width="0.0154%" height="15" fill="rgb(238,23,50)" fg:x="23088" fg:w="6"/><text x="59.3258%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (903 samples, 2.31%)</title><rect x="56.7832%" y="309" width="2.3105%" height="15" fill="rgb(211,48,49)" fg:x="22192" fg:w="903"/><text x="57.0332%" y="319.50">a..</text></g><g><title>cfree (896 samples, 2.29%)</title><rect x="56.8011%" y="293" width="2.2926%" height="15" fill="rgb(223,36,21)" fg:x="22199" fg:w="896"/><text x="57.0511%" y="303.50">c..</text></g><g><title>__lll_lock_wake_private (96 samples, 0.25%)</title><rect x="58.8481%" y="277" width="0.2456%" height="15" fill="rgb(207,123,46)" fg:x="22999" fg:w="96"/><text x="59.0981%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (906 samples, 2.32%)</title><rect x="56.7832%" y="325" width="2.3182%" height="15" fill="rgb(240,218,32)" fg:x="22192" fg:w="906"/><text x="57.0332%" y="335.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt; (914 samples, 2.34%)</title><rect x="56.7755%" y="469" width="2.3387%" height="15" fill="rgb(252,5,43)" fg:x="22189" fg:w="914"/><text x="57.0255%" y="479.50">c..</text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (914 samples, 2.34%)</title><rect x="56.7755%" y="453" width="2.3387%" height="15" fill="rgb(252,84,19)" fg:x="22189" fg:w="914"/><text x="57.0255%" y="463.50">&lt;..</text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (914 samples, 2.34%)</title><rect x="56.7755%" y="437" width="2.3387%" height="15" fill="rgb(243,152,39)" fg:x="22189" fg:w="914"/><text x="57.0255%" y="447.50">a..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (914 samples, 2.34%)</title><rect x="56.7755%" y="421" width="2.3387%" height="15" fill="rgb(234,160,15)" fg:x="22189" fg:w="914"/><text x="57.0255%" y="431.50">a..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (914 samples, 2.34%)</title><rect x="56.7755%" y="405" width="2.3387%" height="15" fill="rgb(237,34,20)" fg:x="22189" fg:w="914"/><text x="57.0255%" y="415.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (913 samples, 2.34%)</title><rect x="56.7781%" y="389" width="2.3361%" height="15" fill="rgb(229,97,13)" fg:x="22190" fg:w="913"/><text x="57.0281%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (911 samples, 2.33%)</title><rect x="56.7832%" y="373" width="2.3310%" height="15" fill="rgb(234,71,50)" fg:x="22192" fg:w="911"/><text x="57.0332%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (911 samples, 2.33%)</title><rect x="56.7832%" y="357" width="2.3310%" height="15" fill="rgb(253,155,4)" fg:x="22192" fg:w="911"/><text x="57.0332%" y="367.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (911 samples, 2.33%)</title><rect x="56.7832%" y="341" width="2.3310%" height="15" fill="rgb(222,185,37)" fg:x="22192" fg:w="911"/><text x="57.0332%" y="351.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.01%)</title><rect x="59.1014%" y="325" width="0.0128%" height="15" fill="rgb(251,177,13)" fg:x="23098" fg:w="5"/><text x="59.3514%" y="335.50"></text></g><g><title>std::sync::poison::Flag::done (9 samples, 0.02%)</title><rect x="59.1142%" y="437" width="0.0230%" height="15" fill="rgb(250,179,40)" fg:x="23103" fg:w="9"/><text x="59.3642%" y="447.50"></text></g><g><title>std::thread::panicking (9 samples, 0.02%)</title><rect x="59.1142%" y="421" width="0.0230%" height="15" fill="rgb(242,44,2)" fg:x="23103" fg:w="9"/><text x="59.3642%" y="431.50"></text></g><g><title>std::panicking::panicking (9 samples, 0.02%)</title><rect x="59.1142%" y="405" width="0.0230%" height="15" fill="rgb(216,177,13)" fg:x="23103" fg:w="9"/><text x="59.3642%" y="415.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (9 samples, 0.02%)</title><rect x="59.1142%" y="389" width="0.0230%" height="15" fill="rgb(216,106,43)" fg:x="23103" fg:w="9"/><text x="59.3642%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="59.1244%" y="373" width="0.0128%" height="15" fill="rgb(216,183,2)" fg:x="23107" fg:w="5"/><text x="59.3744%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="59.1244%" y="357" width="0.0128%" height="15" fill="rgb(249,75,3)" fg:x="23107" fg:w="5"/><text x="59.3744%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::fragged::Fragged&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt;&gt; (71 samples, 0.18%)</title><rect x="59.1142%" y="469" width="0.1817%" height="15" fill="rgb(219,67,39)" fg:x="23103" fg:w="71"/><text x="59.3642%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.18%)</title><rect x="59.1142%" y="453" width="0.1817%" height="15" fill="rgb(253,228,2)" fg:x="23103" fg:w="71"/><text x="59.3642%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (62 samples, 0.16%)</title><rect x="59.1372%" y="437" width="0.1586%" height="15" fill="rgb(235,138,27)" fg:x="23112" fg:w="62"/><text x="59.3872%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (61 samples, 0.16%)</title><rect x="59.1398%" y="421" width="0.1561%" height="15" fill="rgb(236,97,51)" fg:x="23113" fg:w="61"/><text x="59.3898%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (61 samples, 0.16%)</title><rect x="59.1398%" y="405" width="0.1561%" height="15" fill="rgb(240,80,30)" fg:x="23113" fg:w="61"/><text x="59.3898%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;core::num::nonzero::NonZeroU32,alloc::sync::Weak&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt;&gt;&gt; (58 samples, 0.15%)</title><rect x="59.2958%" y="469" width="0.1484%" height="15" fill="rgb(230,178,19)" fg:x="23174" fg:w="58"/><text x="59.5458%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.15%)</title><rect x="59.2958%" y="453" width="0.1484%" height="15" fill="rgb(210,190,27)" fg:x="23174" fg:w="58"/><text x="59.5458%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (58 samples, 0.15%)</title><rect x="59.2958%" y="437" width="0.1484%" height="15" fill="rgb(222,107,31)" fg:x="23174" fg:w="58"/><text x="59.5458%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (53 samples, 0.14%)</title><rect x="59.3086%" y="421" width="0.1356%" height="15" fill="rgb(216,127,34)" fg:x="23179" fg:w="53"/><text x="59.5586%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (53 samples, 0.14%)</title><rect x="59.3086%" y="405" width="0.1356%" height="15" fill="rgb(234,116,52)" fg:x="23179" fg:w="53"/><text x="59.5586%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;zssp::zeta::MutableState&lt;benchmark::TestApplication&gt;&gt;&gt; (48 samples, 0.12%)</title><rect x="59.4442%" y="469" width="0.1228%" height="15" fill="rgb(222,124,15)" fg:x="23232" fg:w="48"/><text x="59.6942%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.12%)</title><rect x="59.4442%" y="453" width="0.1228%" height="15" fill="rgb(231,179,28)" fg:x="23232" fg:w="48"/><text x="59.6942%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (48 samples, 0.12%)</title><rect x="59.4442%" y="437" width="0.1228%" height="15" fill="rgb(226,93,45)" fg:x="23232" fg:w="48"/><text x="59.6942%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (44 samples, 0.11%)</title><rect x="59.4545%" y="421" width="0.1126%" height="15" fill="rgb(215,8,51)" fg:x="23236" fg:w="44"/><text x="59.7045%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.11%)</title><rect x="59.4545%" y="405" width="0.1126%" height="15" fill="rgb(223,106,5)" fg:x="23236" fg:w="44"/><text x="59.7045%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="59.6131%" y="325" width="0.0154%" height="15" fill="rgb(250,191,5)" fg:x="23298" fg:w="6"/><text x="59.8631%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.03%)</title><rect x="59.6054%" y="341" width="0.0281%" height="15" fill="rgb(242,132,44)" fg:x="23295" fg:w="11"/><text x="59.8554%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.03%)</title><rect x="59.6515%" y="325" width="0.0281%" height="15" fill="rgb(251,152,29)" fg:x="23313" fg:w="11"/><text x="59.9015%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (51 samples, 0.13%)</title><rect x="59.5799%" y="389" width="0.1305%" height="15" fill="rgb(218,179,5)" fg:x="23285" fg:w="51"/><text x="59.8299%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (51 samples, 0.13%)</title><rect x="59.5799%" y="373" width="0.1305%" height="15" fill="rgb(227,67,19)" fg:x="23285" fg:w="51"/><text x="59.8299%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (51 samples, 0.13%)</title><rect x="59.5799%" y="357" width="0.1305%" height="15" fill="rgb(233,119,31)" fg:x="23285" fg:w="51"/><text x="59.8299%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.08%)</title><rect x="59.6336%" y="341" width="0.0768%" height="15" fill="rgb(241,120,22)" fg:x="23306" fg:w="30"/><text x="59.8836%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.03%)</title><rect x="59.6796%" y="325" width="0.0307%" height="15" fill="rgb(224,102,30)" fg:x="23324" fg:w="12"/><text x="59.9296%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.01%)</title><rect x="59.7104%" y="389" width="0.0128%" height="15" fill="rgb(210,164,37)" fg:x="23336" fg:w="5"/><text x="59.9604%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (76 samples, 0.19%)</title><rect x="59.5722%" y="421" width="0.1945%" height="15" fill="rgb(226,191,16)" fg:x="23282" fg:w="76"/><text x="59.8222%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (76 samples, 0.19%)</title><rect x="59.5722%" y="405" width="0.1945%" height="15" fill="rgb(214,40,45)" fg:x="23282" fg:w="76"/><text x="59.8222%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.04%)</title><rect x="59.7231%" y="389" width="0.0435%" height="15" fill="rgb(244,29,26)" fg:x="23341" fg:w="17"/><text x="59.9731%" y="399.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::hash::Hash&gt;::hash (17 samples, 0.04%)</title><rect x="59.7231%" y="373" width="0.0435%" height="15" fill="rgb(216,16,5)" fg:x="23341" fg:w="17"/><text x="59.9731%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (17 samples, 0.04%)</title><rect x="59.7231%" y="357" width="0.0435%" height="15" fill="rgb(249,76,35)" fg:x="23341" fg:w="17"/><text x="59.9731%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u32 (17 samples, 0.04%)</title><rect x="59.7231%" y="341" width="0.0435%" height="15" fill="rgb(207,11,44)" fg:x="23341" fg:w="17"/><text x="59.9731%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.04%)</title><rect x="59.7231%" y="325" width="0.0435%" height="15" fill="rgb(228,190,49)" fg:x="23341" fg:w="17"/><text x="59.9731%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.04%)</title><rect x="59.7231%" y="309" width="0.0435%" height="15" fill="rgb(214,173,12)" fg:x="23341" fg:w="17"/><text x="59.9731%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.04%)</title><rect x="59.7231%" y="293" width="0.0435%" height="15" fill="rgb(218,26,35)" fg:x="23341" fg:w="17"/><text x="59.9731%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="59.7487%" y="277" width="0.0179%" height="15" fill="rgb(220,200,19)" fg:x="23351" fg:w="7"/><text x="59.9987%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="59.7820%" y="373" width="0.0230%" height="15" fill="rgb(239,95,49)" fg:x="23364" fg:w="9"/><text x="60.0320%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.01%)</title><rect x="59.7922%" y="357" width="0.0128%" height="15" fill="rgb(235,85,53)" fg:x="23368" fg:w="5"/><text x="60.0422%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (7 samples, 0.02%)</title><rect x="59.8050%" y="357" width="0.0179%" height="15" fill="rgb(233,133,31)" fg:x="23373" fg:w="7"/><text x="60.0550%" y="367.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="59.8050%" y="341" width="0.0179%" height="15" fill="rgb(218,25,20)" fg:x="23373" fg:w="7"/><text x="60.0550%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (11 samples, 0.03%)</title><rect x="59.8050%" y="373" width="0.0281%" height="15" fill="rgb(252,210,38)" fg:x="23373" fg:w="11"/><text x="60.0550%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.01%)</title><rect x="59.8229%" y="357" width="0.0102%" height="15" fill="rgb(242,134,21)" fg:x="23380" fg:w="4"/><text x="60.0729%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="59.8229%" y="341" width="0.0102%" height="15" fill="rgb(213,28,48)" fg:x="23380" fg:w="4"/><text x="60.0729%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.01%)</title><rect x="59.8229%" y="325" width="0.0102%" height="15" fill="rgb(250,196,2)" fg:x="23380" fg:w="4"/><text x="60.0729%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="59.8229%" y="309" width="0.0102%" height="15" fill="rgb(227,5,17)" fg:x="23380" fg:w="4"/><text x="60.0729%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (10 samples, 0.03%)</title><rect x="59.8332%" y="373" width="0.0256%" height="15" fill="rgb(221,226,24)" fg:x="23384" fg:w="10"/><text x="60.0832%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (119 samples, 0.30%)</title><rect x="59.5722%" y="437" width="0.3045%" height="15" fill="rgb(211,5,48)" fg:x="23282" fg:w="119"/><text x="59.8222%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (43 samples, 0.11%)</title><rect x="59.7666%" y="421" width="0.1100%" height="15" fill="rgb(219,150,6)" fg:x="23358" fg:w="43"/><text x="60.0166%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.11%)</title><rect x="59.7666%" y="405" width="0.1100%" height="15" fill="rgb(251,46,16)" fg:x="23358" fg:w="43"/><text x="60.0166%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (43 samples, 0.11%)</title><rect x="59.7666%" y="389" width="0.1100%" height="15" fill="rgb(220,204,40)" fg:x="23358" fg:w="43"/><text x="60.0166%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="59.8664%" y="373" width="0.0102%" height="15" fill="rgb(211,85,2)" fg:x="23397" fg:w="4"/><text x="60.1164%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="59.8664%" y="357" width="0.0102%" height="15" fill="rgb(229,17,7)" fg:x="23397" fg:w="4"/><text x="60.1164%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (122 samples, 0.31%)</title><rect x="59.5722%" y="469" width="0.3122%" height="15" fill="rgb(239,72,28)" fg:x="23282" fg:w="122"/><text x="59.8222%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (122 samples, 0.31%)</title><rect x="59.5722%" y="453" width="0.3122%" height="15" fill="rgb(230,47,54)" fg:x="23282" fg:w="122"/><text x="59.8222%" y="463.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="59.8895%" y="453" width="0.0205%" height="15" fill="rgb(214,50,8)" fg:x="23406" fg:w="8"/><text x="60.1395%" y="463.50"></text></g><g><title>std::sync::poison::Flag::guard (5 samples, 0.01%)</title><rect x="59.8971%" y="437" width="0.0128%" height="15" fill="rgb(216,198,43)" fg:x="23409" fg:w="5"/><text x="60.1471%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.12%)</title><rect x="59.8843%" y="469" width="0.1203%" height="15" fill="rgb(234,20,35)" fg:x="23404" fg:w="47"/><text x="60.1343%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (37 samples, 0.09%)</title><rect x="59.9099%" y="453" width="0.0947%" height="15" fill="rgb(254,45,19)" fg:x="23414" fg:w="37"/><text x="60.1599%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (37 samples, 0.09%)</title><rect x="59.9099%" y="437" width="0.0947%" height="15" fill="rgb(219,14,44)" fg:x="23414" fg:w="37"/><text x="60.1599%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.09%)</title><rect x="59.9099%" y="421" width="0.0947%" height="15" fill="rgb(217,220,26)" fg:x="23414" fg:w="37"/><text x="60.1599%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (108 samples, 0.28%)</title><rect x="60.0404%" y="437" width="0.2763%" height="15" fill="rgb(213,158,28)" fg:x="23465" fg:w="108"/><text x="60.2904%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (108 samples, 0.28%)</title><rect x="60.0404%" y="421" width="0.2763%" height="15" fill="rgb(252,51,52)" fg:x="23465" fg:w="108"/><text x="60.2904%" y="431.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (129 samples, 0.33%)</title><rect x="60.0046%" y="469" width="0.3301%" height="15" fill="rgb(246,89,16)" fg:x="23451" fg:w="129"/><text x="60.2546%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (129 samples, 0.33%)</title><rect x="60.0046%" y="453" width="0.3301%" height="15" fill="rgb(216,158,49)" fg:x="23451" fg:w="129"/><text x="60.2546%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (7 samples, 0.02%)</title><rect x="60.3168%" y="437" width="0.0179%" height="15" fill="rgb(236,107,19)" fg:x="23573" fg:w="7"/><text x="60.5668%" y="447.50"></text></g><g><title>zssp::antireplay::Window&lt;_,_&gt;::check (11 samples, 0.03%)</title><rect x="60.3347%" y="469" width="0.0281%" height="15" fill="rgb(228,185,30)" fg:x="23580" fg:w="11"/><text x="60.5847%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (6 samples, 0.02%)</title><rect x="60.3475%" y="453" width="0.0154%" height="15" fill="rgb(246,134,8)" fg:x="23585" fg:w="6"/><text x="60.5975%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="60.3475%" y="437" width="0.0154%" height="15" fill="rgb(214,143,50)" fg:x="23585" fg:w="6"/><text x="60.5975%" y="447.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (19 samples, 0.05%)</title><rect x="60.4217%" y="453" width="0.0486%" height="15" fill="rgb(228,75,8)" fg:x="23614" fg:w="19"/><text x="60.6717%" y="463.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (19 samples, 0.05%)</title><rect x="60.4217%" y="437" width="0.0486%" height="15" fill="rgb(207,175,4)" fg:x="23614" fg:w="19"/><text x="60.6717%" y="447.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (19 samples, 0.05%)</title><rect x="60.4217%" y="421" width="0.0486%" height="15" fill="rgb(205,108,24)" fg:x="23614" fg:w="19"/><text x="60.6717%" y="431.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (13 samples, 0.03%)</title><rect x="60.4370%" y="405" width="0.0333%" height="15" fill="rgb(244,120,49)" fg:x="23620" fg:w="13"/><text x="60.6870%" y="415.50"></text></g><g><title>core::ptr::write (12 samples, 0.03%)</title><rect x="60.4396%" y="389" width="0.0307%" height="15" fill="rgb(223,47,38)" fg:x="23621" fg:w="12"/><text x="60.6896%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (4 samples, 0.01%)</title><rect x="60.4780%" y="453" width="0.0102%" height="15" fill="rgb(229,179,11)" fg:x="23636" fg:w="4"/><text x="60.7280%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (4 samples, 0.01%)</title><rect x="60.4780%" y="437" width="0.0102%" height="15" fill="rgb(231,122,1)" fg:x="23636" fg:w="4"/><text x="60.7280%" y="447.50"></text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="60.4780%" y="421" width="0.0102%" height="15" fill="rgb(245,119,9)" fg:x="23636" fg:w="4"/><text x="60.7280%" y="431.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.01%)</title><rect x="60.4780%" y="405" width="0.0102%" height="15" fill="rgb(241,163,25)" fg:x="23636" fg:w="4"/><text x="60.7280%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.01%)</title><rect x="60.4882%" y="453" width="0.0102%" height="15" fill="rgb(217,214,3)" fg:x="23640" fg:w="4"/><text x="60.7382%" y="463.50"></text></g><g><title>zssp::fragged::Fragged&lt;Fragment,_&gt;::assemble (5 samples, 0.01%)</title><rect x="60.5061%" y="453" width="0.0128%" height="15" fill="rgb(240,86,28)" fg:x="23647" fg:w="5"/><text x="60.7561%" y="463.50"></text></g><g><title>zssp::fragged::Fragged&lt;Fragment,_&gt;::assemble (62 samples, 0.16%)</title><rect x="60.3628%" y="469" width="0.1586%" height="15" fill="rgb(215,47,9)" fg:x="23591" fg:w="62"/><text x="60.6128%" y="479.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (26 samples, 0.07%)</title><rect x="60.5240%" y="453" width="0.0665%" height="15" fill="rgb(252,25,45)" fg:x="23654" fg:w="26"/><text x="60.7740%" y="463.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (26 samples, 0.07%)</title><rect x="60.5240%" y="437" width="0.0665%" height="15" fill="rgb(251,164,9)" fg:x="23654" fg:w="26"/><text x="60.7740%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (26 samples, 0.07%)</title><rect x="60.5240%" y="421" width="0.0665%" height="15" fill="rgb(233,194,0)" fg:x="23654" fg:w="26"/><text x="60.7740%" y="431.50"></text></g><g><title>zssp::zeta::from_nonce (31 samples, 0.08%)</title><rect x="60.5215%" y="469" width="0.0793%" height="15" fill="rgb(249,111,24)" fg:x="23653" fg:w="31"/><text x="60.7715%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be_bytes (4 samples, 0.01%)</title><rect x="60.5906%" y="453" width="0.0102%" height="15" fill="rgb(250,223,3)" fg:x="23680" fg:w="4"/><text x="60.8406%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be (4 samples, 0.01%)</title><rect x="60.5906%" y="437" width="0.0102%" height="15" fill="rgb(236,178,37)" fg:x="23680" fg:w="4"/><text x="60.8406%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (4 samples, 0.01%)</title><rect x="60.5906%" y="421" width="0.0102%" height="15" fill="rgb(241,158,50)" fg:x="23680" fg:w="4"/><text x="60.8406%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="60.6417%" y="453" width="0.0230%" height="15" fill="rgb(213,121,41)" fg:x="23700" fg:w="9"/><text x="60.8917%" y="463.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.14%)</title><rect x="60.6648%" y="453" width="0.1407%" height="15" fill="rgb(240,92,3)" fg:x="23709" fg:w="55"/><text x="60.9148%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (55 samples, 0.14%)</title><rect x="60.6648%" y="437" width="0.1407%" height="15" fill="rgb(205,123,3)" fg:x="23709" fg:w="55"/><text x="60.9148%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (53 samples, 0.14%)</title><rect x="60.6699%" y="421" width="0.1356%" height="15" fill="rgb(205,97,47)" fg:x="23711" fg:w="53"/><text x="60.9199%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (53 samples, 0.14%)</title><rect x="60.6699%" y="405" width="0.1356%" height="15" fill="rgb(247,152,14)" fg:x="23711" fg:w="53"/><text x="60.9199%" y="415.50"></text></g><g><title>[libcrypto.so.3] (103 samples, 0.26%)</title><rect x="61.5552%" y="341" width="0.2635%" height="15" fill="rgb(248,195,53)" fg:x="24057" fg:w="103"/><text x="61.8052%" y="351.50"></text></g><g><title>CRYPTO_gcm128_decrypt (234 samples, 0.60%)</title><rect x="61.2328%" y="357" width="0.5987%" height="15" fill="rgb(226,201,16)" fg:x="23931" fg:w="234"/><text x="61.4828%" y="367.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="61.8187%" y="341" width="0.0128%" height="15" fill="rgb(205,98,0)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="351.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="61.8187%" y="325" width="0.0128%" height="15" fill="rgb(214,191,48)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="335.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="61.8187%" y="309" width="0.0128%" height="15" fill="rgb(237,112,39)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="61.8187%" y="293" width="0.0128%" height="15" fill="rgb(247,203,27)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="61.8187%" y="277" width="0.0128%" height="15" fill="rgb(235,124,28)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="287.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="61.8187%" y="261" width="0.0128%" height="15" fill="rgb(208,207,46)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="271.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="61.8187%" y="245" width="0.0128%" height="15" fill="rgb(234,176,4)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="255.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="61.8187%" y="229" width="0.0128%" height="15" fill="rgb(230,133,28)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="61.8187%" y="213" width="0.0128%" height="15" fill="rgb(211,137,40)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="61.8187%" y="197" width="0.0128%" height="15" fill="rgb(254,35,13)" fg:x="24160" fg:w="5"/><text x="62.0687%" y="207.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.01%)</title><rect x="61.8213%" y="181" width="0.0102%" height="15" fill="rgb(225,49,51)" fg:x="24161" fg:w="4"/><text x="62.0713%" y="191.50"></text></g><g><title>[libcrypto.so.3] (17 samples, 0.04%)</title><rect x="62.9420%" y="325" width="0.0435%" height="15" fill="rgb(251,10,15)" fg:x="24599" fg:w="17"/><text x="63.1920%" y="335.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (452 samples, 1.16%)</title><rect x="61.8315%" y="357" width="1.1565%" height="15" fill="rgb(228,207,15)" fg:x="24165" fg:w="452"/><text x="62.0815%" y="367.50"></text></g><g><title>[libcrypto.so.3] (355 samples, 0.91%)</title><rect x="62.0797%" y="341" width="0.9083%" height="15" fill="rgb(241,99,19)" fg:x="24262" fg:w="355"/><text x="62.3297%" y="351.50"></text></g><g><title>CRYPTO_gcm128_setiv (15 samples, 0.04%)</title><rect x="62.9881%" y="357" width="0.0384%" height="15" fill="rgb(207,104,49)" fg:x="24617" fg:w="15"/><text x="63.2381%" y="367.50"></text></g><g><title>[libcrypto.so.3] (14 samples, 0.04%)</title><rect x="62.9906%" y="341" width="0.0358%" height="15" fill="rgb(234,99,18)" fg:x="24618" fg:w="14"/><text x="63.2406%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.01%)</title><rect x="71.7619%" y="325" width="0.0128%" height="15" fill="rgb(213,191,49)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.01%)</title><rect x="71.7619%" y="309" width="0.0128%" height="15" fill="rgb(210,226,19)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="319.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="71.7619%" y="293" width="0.0128%" height="15" fill="rgb(229,97,18)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="71.7619%" y="277" width="0.0128%" height="15" fill="rgb(211,167,15)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="71.7619%" y="261" width="0.0128%" height="15" fill="rgb(210,169,34)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="71.7619%" y="245" width="0.0128%" height="15" fill="rgb(241,121,31)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="255.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="71.7619%" y="229" width="0.0128%" height="15" fill="rgb(232,40,11)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="239.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="71.7619%" y="213" width="0.0128%" height="15" fill="rgb(205,86,26)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="71.7619%" y="197" width="0.0128%" height="15" fill="rgb(231,126,28)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="71.7619%" y="181" width="0.0128%" height="15" fill="rgb(219,221,18)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="191.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="71.7619%" y="165" width="0.0128%" height="15" fill="rgb(211,40,0)" fg:x="28046" fg:w="5"/><text x="72.0119%" y="175.50"></text></g><g><title>__perf_event_task_sched_in (9 samples, 0.02%)</title><rect x="71.7747%" y="181" width="0.0230%" height="15" fill="rgb(239,85,43)" fg:x="28051" fg:w="9"/><text x="72.0247%" y="191.50"></text></g><g><title>perf_ctx_enable (9 samples, 0.02%)</title><rect x="71.7747%" y="165" width="0.0230%" height="15" fill="rgb(231,55,21)" fg:x="28051" fg:w="9"/><text x="72.0247%" y="175.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::decrypt_in_place (4,297 samples, 10.99%)</title><rect x="60.8055%" y="453" width="10.9948%" height="15" fill="rgb(225,184,43)" fg:x="23764" fg:w="4297"/><text x="61.0555%" y="463.50">&lt;zssp::crypto_im..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (4,297 samples, 10.99%)</title><rect x="60.8055%" y="437" width="10.9948%" height="15" fill="rgb(251,158,41)" fg:x="23764" fg:w="4297"/><text x="61.0555%" y="447.50">zssp::crypto_imp..</text></g><g><title>EVP_DecryptUpdate (4,294 samples, 10.99%)</title><rect x="60.8132%" y="421" width="10.9872%" height="15" fill="rgb(234,159,37)" fg:x="23767" fg:w="4294"/><text x="61.0632%" y="431.50">EVP_DecryptUpdate</text></g><g><title>[libcrypto.so.3] (4,195 samples, 10.73%)</title><rect x="61.0665%" y="405" width="10.7338%" height="15" fill="rgb(216,204,22)" fg:x="23866" fg:w="4195"/><text x="61.3165%" y="415.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (4,187 samples, 10.71%)</title><rect x="61.0869%" y="389" width="10.7134%" height="15" fill="rgb(214,17,3)" fg:x="23874" fg:w="4187"/><text x="61.3369%" y="399.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (4,169 samples, 10.67%)</title><rect x="61.1330%" y="373" width="10.6673%" height="15" fill="rgb(212,111,17)" fg:x="23892" fg:w="4169"/><text x="61.3830%" y="383.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (3,429 samples, 8.77%)</title><rect x="63.0265%" y="357" width="8.7739%" height="15" fill="rgb(221,157,24)" fg:x="24632" fg:w="3429"/><text x="63.2765%" y="367.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (3,280 samples, 8.39%)</title><rect x="63.4077%" y="341" width="8.3926%" height="15" fill="rgb(252,16,13)" fg:x="24781" fg:w="3280"/><text x="63.6577%" y="351.50">[libcrypto.s..</text></g><g><title>asm_sysvec_reschedule_ipi (10 samples, 0.03%)</title><rect x="71.7747%" y="325" width="0.0256%" height="15" fill="rgb(221,62,2)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="335.50"></text></g><g><title>sysvec_reschedule_ipi (10 samples, 0.03%)</title><rect x="71.7747%" y="309" width="0.0256%" height="15" fill="rgb(247,87,22)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="319.50"></text></g><g><title>irqentry_exit (10 samples, 0.03%)</title><rect x="71.7747%" y="293" width="0.0256%" height="15" fill="rgb(215,73,9)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (10 samples, 0.03%)</title><rect x="71.7747%" y="277" width="0.0256%" height="15" fill="rgb(207,175,33)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (10 samples, 0.03%)</title><rect x="71.7747%" y="261" width="0.0256%" height="15" fill="rgb(243,129,54)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (10 samples, 0.03%)</title><rect x="71.7747%" y="245" width="0.0256%" height="15" fill="rgb(227,119,45)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="255.50"></text></g><g><title>schedule (10 samples, 0.03%)</title><rect x="71.7747%" y="229" width="0.0256%" height="15" fill="rgb(205,109,36)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="239.50"></text></g><g><title>__schedule (10 samples, 0.03%)</title><rect x="71.7747%" y="213" width="0.0256%" height="15" fill="rgb(205,6,39)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (10 samples, 0.03%)</title><rect x="71.7747%" y="197" width="0.0256%" height="15" fill="rgb(221,32,16)" fg:x="28051" fg:w="10"/><text x="72.0247%" y="207.50"></text></g><g><title>CRYPTO_clear_free (106 samples, 0.27%)</title><rect x="71.8336%" y="357" width="0.2712%" height="15" fill="rgb(228,144,50)" fg:x="28074" fg:w="106"/><text x="72.0836%" y="367.50"></text></g><g><title>OPENSSL_cleanse (103 samples, 0.26%)</title><rect x="71.8413%" y="341" width="0.2635%" height="15" fill="rgb(229,201,53)" fg:x="28077" fg:w="103"/><text x="72.0913%" y="351.50"></text></g><g><title>EVP_CIPHER_free (44 samples, 0.11%)</title><rect x="72.1099%" y="357" width="0.1126%" height="15" fill="rgb(249,153,27)" fg:x="28182" fg:w="44"/><text x="72.3599%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_free (199 samples, 0.51%)</title><rect x="71.8080%" y="389" width="0.5092%" height="15" fill="rgb(227,106,25)" fg:x="28064" fg:w="199"/><text x="72.0580%" y="399.50"></text></g><g><title>EVP_CIPHER_CTX_reset (198 samples, 0.51%)</title><rect x="71.8106%" y="373" width="0.5066%" height="15" fill="rgb(230,65,29)" fg:x="28065" fg:w="198"/><text x="72.0606%" y="383.50"></text></g><g><title>cfree (37 samples, 0.09%)</title><rect x="72.2225%" y="357" width="0.0947%" height="15" fill="rgb(221,57,46)" fg:x="28226" fg:w="37"/><text x="72.4725%" y="367.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="72.3044%" y="341" width="0.0128%" height="15" fill="rgb(229,161,17)" fg:x="28258" fg:w="5"/><text x="72.5544%" y="351.50"></text></g><g><title>cfree (9 samples, 0.02%)</title><rect x="72.3172%" y="389" width="0.0230%" height="15" fill="rgb(222,213,11)" fg:x="28263" fg:w="9"/><text x="72.5672%" y="399.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="72.3300%" y="373" width="0.0102%" height="15" fill="rgb(235,35,13)" fg:x="28268" fg:w="4"/><text x="72.5800%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec&gt; (212 samples, 0.54%)</title><rect x="71.8003%" y="437" width="0.5424%" height="15" fill="rgb(233,158,34)" fg:x="28061" fg:w="212"/><text x="72.0503%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::CipherCtx&gt; (212 samples, 0.54%)</title><rect x="71.8003%" y="421" width="0.5424%" height="15" fill="rgb(215,151,48)" fg:x="28061" fg:w="212"/><text x="72.0503%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::CipherCtx as core::ops::drop::Drop&gt;::drop (212 samples, 0.54%)</title><rect x="71.8003%" y="405" width="0.5424%" height="15" fill="rgb(229,84,14)" fg:x="28061" fg:w="212"/><text x="72.0503%" y="415.50"></text></g><g><title>[libcrypto.so.3] (26 samples, 0.07%)</title><rect x="72.3556%" y="405" width="0.0665%" height="15" fill="rgb(229,68,14)" fg:x="28278" fg:w="26"/><text x="72.6056%" y="415.50"></text></g><g><title>[libcrypto.so.3] (26 samples, 0.07%)</title><rect x="72.3556%" y="389" width="0.0665%" height="15" fill="rgb(243,106,26)" fg:x="28278" fg:w="26"/><text x="72.6056%" y="399.50"></text></g><g><title>[libcrypto.so.3] (26 samples, 0.07%)</title><rect x="72.3556%" y="373" width="0.0665%" height="15" fill="rgb(206,45,38)" fg:x="28278" fg:w="26"/><text x="72.6056%" y="383.50"></text></g><g><title>CRYPTO_gcm128_finish (24 samples, 0.06%)</title><rect x="72.3607%" y="357" width="0.0614%" height="15" fill="rgb(226,6,15)" fg:x="28280" fg:w="24"/><text x="72.6107%" y="367.50"></text></g><g><title>[libcrypto.so.3] (18 samples, 0.05%)</title><rect x="72.3760%" y="341" width="0.0461%" height="15" fill="rgb(232,22,54)" fg:x="28286" fg:w="18"/><text x="72.6260%" y="351.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (36 samples, 0.09%)</title><rect x="72.3428%" y="437" width="0.0921%" height="15" fill="rgb(229,222,32)" fg:x="28273" fg:w="36"/><text x="72.5928%" y="447.50"></text></g><g><title>EVP_DecryptFinal_ex (36 samples, 0.09%)</title><rect x="72.3428%" y="421" width="0.0921%" height="15" fill="rgb(228,62,29)" fg:x="28273" fg:w="36"/><text x="72.5928%" y="431.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="72.4221%" y="405" width="0.0128%" height="15" fill="rgb(251,103,34)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="415.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="72.4221%" y="389" width="0.0128%" height="15" fill="rgb(233,12,30)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="399.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="72.4221%" y="373" width="0.0128%" height="15" fill="rgb(238,52,0)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="383.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="72.4221%" y="357" width="0.0128%" height="15" fill="rgb(223,98,5)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="367.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="72.4221%" y="341" width="0.0128%" height="15" fill="rgb(228,75,37)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="351.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="72.4221%" y="325" width="0.0128%" height="15" fill="rgb(205,115,49)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="335.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="72.4221%" y="309" width="0.0128%" height="15" fill="rgb(250,154,43)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="319.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="72.4221%" y="293" width="0.0128%" height="15" fill="rgb(226,43,29)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="303.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="72.4221%" y="277" width="0.0128%" height="15" fill="rgb(249,228,39)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="287.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="72.4221%" y="261" width="0.0128%" height="15" fill="rgb(216,79,43)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="271.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="72.4221%" y="245" width="0.0128%" height="15" fill="rgb(228,95,12)" fg:x="28304" fg:w="5"/><text x="72.6721%" y="255.50"></text></g><g><title>OSSL_PARAM_get_octet_string (7 samples, 0.02%)</title><rect x="72.5577%" y="389" width="0.0179%" height="15" fill="rgb(249,221,15)" fg:x="28357" fg:w="7"/><text x="72.8077%" y="399.50"></text></g><g><title>[libcrypto.so.3] (5 samples, 0.01%)</title><rect x="72.5628%" y="373" width="0.0128%" height="15" fill="rgb(233,34,13)" fg:x="28359" fg:w="5"/><text x="72.8128%" y="383.50"></text></g><g><title>[libc.so.6] (12 samples, 0.03%)</title><rect x="72.6191%" y="373" width="0.0307%" height="15" fill="rgb(214,103,39)" fg:x="28381" fg:w="12"/><text x="72.8691%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (30 samples, 0.08%)</title><rect x="72.5756%" y="389" width="0.0768%" height="15" fill="rgb(251,126,39)" fg:x="28364" fg:w="30"/><text x="72.8256%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::finish (336 samples, 0.86%)</title><rect x="71.8003%" y="453" width="0.8597%" height="15" fill="rgb(214,216,36)" fg:x="28061" fg:w="336"/><text x="72.0503%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::set_tag (88 samples, 0.23%)</title><rect x="72.4349%" y="437" width="0.2252%" height="15" fill="rgb(220,221,8)" fg:x="28309" fg:w="88"/><text x="72.6849%" y="447.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (88 samples, 0.23%)</title><rect x="72.4349%" y="421" width="0.2252%" height="15" fill="rgb(240,216,3)" fg:x="28309" fg:w="88"/><text x="72.6849%" y="431.50"></text></g><g><title>[libcrypto.so.3] (49 samples, 0.13%)</title><rect x="72.5347%" y="405" width="0.1254%" height="15" fill="rgb(232,218,17)" fg:x="28348" fg:w="49"/><text x="72.7847%" y="415.50"></text></g><g><title>[libc.so.6] (27 samples, 0.07%)</title><rect x="72.8110%" y="389" width="0.0691%" height="15" fill="rgb(229,163,45)" fg:x="28456" fg:w="27"/><text x="73.0610%" y="399.50"></text></g><g><title>OSSL_PARAM_locate (38 samples, 0.10%)</title><rect x="72.7905%" y="405" width="0.0972%" height="15" fill="rgb(231,110,42)" fg:x="28448" fg:w="38"/><text x="73.0405%" y="415.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (90 samples, 0.23%)</title><rect x="72.6652%" y="437" width="0.2303%" height="15" fill="rgb(208,170,48)" fg:x="28399" fg:w="90"/><text x="72.9152%" y="447.50"></text></g><g><title>[libcrypto.so.3] (53 samples, 0.14%)</title><rect x="72.7598%" y="421" width="0.1356%" height="15" fill="rgb(239,116,25)" fg:x="28436" fg:w="53"/><text x="73.0098%" y="431.50"></text></g><g><title>[libc.so.6] (24 samples, 0.06%)</title><rect x="73.1078%" y="341" width="0.0614%" height="15" fill="rgb(219,200,50)" fg:x="28572" fg:w="24"/><text x="73.3578%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (48 samples, 0.12%)</title><rect x="73.0515%" y="357" width="0.1228%" height="15" fill="rgb(245,200,0)" fg:x="28550" fg:w="48"/><text x="73.3015%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (82 samples, 0.21%)</title><rect x="72.9671%" y="389" width="0.2098%" height="15" fill="rgb(245,119,33)" fg:x="28517" fg:w="82"/><text x="73.2171%" y="399.50"></text></g><g><title>[libcrypto.so.3] (60 samples, 0.15%)</title><rect x="73.0234%" y="373" width="0.1535%" height="15" fill="rgb(231,125,12)" fg:x="28539" fg:w="60"/><text x="73.2734%" y="383.50"></text></g><g><title>[libc.so.6] (18 samples, 0.05%)</title><rect x="73.2537%" y="341" width="0.0461%" height="15" fill="rgb(216,96,41)" fg:x="28629" fg:w="18"/><text x="73.5037%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (34 samples, 0.09%)</title><rect x="73.2178%" y="357" width="0.0870%" height="15" fill="rgb(248,43,45)" fg:x="28615" fg:w="34"/><text x="73.4678%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_get_key_length (51 samples, 0.13%)</title><rect x="73.1769%" y="389" width="0.1305%" height="15" fill="rgb(217,222,7)" fg:x="28599" fg:w="51"/><text x="73.4269%" y="399.50"></text></g><g><title>[libcrypto.so.3] (42 samples, 0.11%)</title><rect x="73.1999%" y="373" width="0.1075%" height="15" fill="rgb(233,28,6)" fg:x="28608" fg:w="42"/><text x="73.4499%" y="383.50"></text></g><g><title>CRYPTO_THREAD_read_lock (155 samples, 0.40%)</title><rect x="73.3560%" y="341" width="0.3966%" height="15" fill="rgb(231,218,15)" fg:x="28669" fg:w="155"/><text x="73.6060%" y="351.50"></text></g><g><title>pthread_rwlock_rdlock (151 samples, 0.39%)</title><rect x="73.3663%" y="325" width="0.3864%" height="15" fill="rgb(226,171,48)" fg:x="28673" fg:w="151"/><text x="73.6163%" y="335.50"></text></g><g><title>pthread_rwlock_unlock (88 samples, 0.23%)</title><rect x="73.7629%" y="325" width="0.2252%" height="15" fill="rgb(235,201,9)" fg:x="28828" fg:w="88"/><text x="74.0129%" y="335.50"></text></g><g><title>CRYPTO_THREAD_unlock (91 samples, 0.23%)</title><rect x="73.7577%" y="341" width="0.2328%" height="15" fill="rgb(217,80,15)" fg:x="28826" fg:w="91"/><text x="74.0077%" y="351.50"></text></g><g><title>EVP_CIPHER_up_ref (29 samples, 0.07%)</title><rect x="73.9957%" y="341" width="0.0742%" height="15" fill="rgb(219,152,8)" fg:x="28919" fg:w="29"/><text x="74.2457%" y="351.50"></text></g><g><title>OPENSSL_LH_retrieve (59 samples, 0.15%)</title><rect x="74.0699%" y="341" width="0.1510%" height="15" fill="rgb(243,107,38)" fg:x="28948" fg:w="59"/><text x="74.3199%" y="351.50"></text></g><g><title>[libcrypto.so.3] (51 samples, 0.13%)</title><rect x="74.0904%" y="325" width="0.1305%" height="15" fill="rgb(231,17,5)" fg:x="28956" fg:w="51"/><text x="74.3404%" y="335.50"></text></g><g><title>pthread_rwlock_rdlock (40 samples, 0.10%)</title><rect x="74.2465%" y="309" width="0.1023%" height="15" fill="rgb(209,25,54)" fg:x="29017" fg:w="40"/><text x="74.4965%" y="319.50"></text></g><g><title>CRYPTO_THREAD_read_lock (43 samples, 0.11%)</title><rect x="74.2465%" y="325" width="0.1100%" height="15" fill="rgb(219,0,2)" fg:x="29017" fg:w="43"/><text x="74.4965%" y="335.50"></text></g><g><title>pthread_rwlock_unlock (49 samples, 0.13%)</title><rect x="74.3667%" y="309" width="0.1254%" height="15" fill="rgb(246,9,5)" fg:x="29064" fg:w="49"/><text x="74.6167%" y="319.50"></text></g><g><title>CRYPTO_THREAD_unlock (54 samples, 0.14%)</title><rect x="74.3565%" y="325" width="0.1382%" height="15" fill="rgb(226,159,4)" fg:x="29060" fg:w="54"/><text x="74.6065%" y="335.50"></text></g><g><title>OPENSSL_strnlen (7 samples, 0.02%)</title><rect x="74.5074%" y="309" width="0.0179%" height="15" fill="rgb(219,175,34)" fg:x="29119" fg:w="7"/><text x="74.7574%" y="319.50"></text></g><g><title>CRYPTO_strndup (15 samples, 0.04%)</title><rect x="74.5023%" y="325" width="0.0384%" height="15" fill="rgb(236,10,46)" fg:x="29117" fg:w="15"/><text x="74.7523%" y="335.50"></text></g><g><title>OPENSSL_strcasecmp (25 samples, 0.06%)</title><rect x="74.7531%" y="293" width="0.0640%" height="15" fill="rgb(240,211,16)" fg:x="29215" fg:w="25"/><text x="75.0031%" y="303.50"></text></g><g><title>OPENSSL_LH_retrieve (150 samples, 0.38%)</title><rect x="74.5407%" y="325" width="0.3838%" height="15" fill="rgb(205,3,43)" fg:x="29132" fg:w="150"/><text x="74.7907%" y="335.50"></text></g><g><title>[libcrypto.so.3] (142 samples, 0.36%)</title><rect x="74.5612%" y="309" width="0.3633%" height="15" fill="rgb(245,7,22)" fg:x="29140" fg:w="142"/><text x="74.8112%" y="319.50"></text></g><g><title>[libcrypto.so.3] (42 samples, 0.11%)</title><rect x="74.8171%" y="293" width="0.1075%" height="15" fill="rgb(239,132,32)" fg:x="29240" fg:w="42"/><text x="75.0671%" y="303.50"></text></g><g><title>[libcrypto.so.3] (298 samples, 0.76%)</title><rect x="74.2234%" y="341" width="0.7625%" height="15" fill="rgb(228,202,34)" fg:x="29008" fg:w="298"/><text x="74.4734%" y="351.50"></text></g><g><title>cfree (23 samples, 0.06%)</title><rect x="74.9271%" y="325" width="0.0589%" height="15" fill="rgb(254,200,22)" fg:x="29283" fg:w="23"/><text x="75.1771%" y="335.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="74.9706%" y="309" width="0.0154%" height="15" fill="rgb(219,10,39)" fg:x="29300" fg:w="6"/><text x="75.2206%" y="319.50"></text></g><g><title>[libcrypto.so.3] (652 samples, 1.67%)</title><rect x="73.3253%" y="357" width="1.6683%" height="15" fill="rgb(226,210,39)" fg:x="28657" fg:w="652"/><text x="73.5753%" y="367.50"></text></g><g><title>EVP_CIPHER_fetch (660 samples, 1.69%)</title><rect x="73.3074%" y="389" width="1.6888%" height="15" fill="rgb(208,219,16)" fg:x="28650" fg:w="660"/><text x="73.5574%" y="399.50"></text></g><g><title>[libcrypto.so.3] (658 samples, 1.68%)</title><rect x="73.3125%" y="373" width="1.6836%" height="15" fill="rgb(216,158,51)" fg:x="28652" fg:w="658"/><text x="73.5625%" y="383.50"></text></g><g><title>EVP_CIPHER_free (15 samples, 0.04%)</title><rect x="74.9962%" y="389" width="0.0384%" height="15" fill="rgb(233,14,44)" fg:x="29310" fg:w="15"/><text x="75.2462%" y="399.50"></text></g><g><title>EVP_CIPHER_up_ref (14 samples, 0.04%)</title><rect x="75.0345%" y="389" width="0.0358%" height="15" fill="rgb(237,97,39)" fg:x="29325" fg:w="14"/><text x="75.2845%" y="399.50"></text></g><g><title>CRYPTO_malloc (4 samples, 0.01%)</title><rect x="75.1036%" y="357" width="0.0102%" height="15" fill="rgb(218,198,43)" fg:x="29352" fg:w="4"/><text x="75.3536%" y="367.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="75.1139%" y="357" width="0.0205%" height="15" fill="rgb(231,104,20)" fg:x="29356" fg:w="8"/><text x="75.3639%" y="367.50"></text></g><g><title>malloc (7 samples, 0.02%)</title><rect x="75.1343%" y="357" width="0.0179%" height="15" fill="rgb(254,36,13)" fg:x="29364" fg:w="7"/><text x="75.3843%" y="367.50"></text></g><g><title>CRYPTO_zalloc (21 samples, 0.05%)</title><rect x="75.1011%" y="373" width="0.0537%" height="15" fill="rgb(248,14,50)" fg:x="29351" fg:w="21"/><text x="75.3511%" y="383.50"></text></g><g><title>CRYPTO_gcm128_init (149 samples, 0.38%)</title><rect x="75.1702%" y="357" width="0.3812%" height="15" fill="rgb(217,107,29)" fg:x="29378" fg:w="149"/><text x="75.4202%" y="367.50"></text></g><g><title>[libcrypto.so.3] (122 samples, 0.31%)</title><rect x="75.2392%" y="341" width="0.3122%" height="15" fill="rgb(251,169,33)" fg:x="29405" fg:w="122"/><text x="75.4892%" y="351.50"></text></g><g><title>[libcrypto.so.3] (188 samples, 0.48%)</title><rect x="75.1574%" y="373" width="0.4810%" height="15" fill="rgb(217,108,32)" fg:x="29373" fg:w="188"/><text x="75.4074%" y="383.50"></text></g><g><title>[libcrypto.so.3] (34 samples, 0.09%)</title><rect x="75.5514%" y="357" width="0.0870%" height="15" fill="rgb(219,66,42)" fg:x="29527" fg:w="34"/><text x="75.8014%" y="367.50"></text></g><g><title>EVP_CipherInit_ex (1,072 samples, 2.74%)</title><rect x="72.8980%" y="421" width="2.7430%" height="15" fill="rgb(206,180,7)" fg:x="28490" fg:w="1072"/><text x="73.1480%" y="431.50">EV..</text></g><g><title>[libcrypto.so.3] (1,072 samples, 2.74%)</title><rect x="72.8980%" y="405" width="2.7430%" height="15" fill="rgb(208,226,31)" fg:x="28490" fg:w="1072"/><text x="73.1480%" y="415.50">[l..</text></g><g><title>[libcrypto.so.3] (221 samples, 0.57%)</title><rect x="75.0755%" y="389" width="0.5655%" height="15" fill="rgb(218,26,49)" fg:x="29341" fg:w="221"/><text x="75.3255%" y="399.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::cipher_init (1,074 samples, 2.75%)</title><rect x="72.8955%" y="437" width="2.7481%" height="15" fill="rgb(233,197,48)" fg:x="28489" fg:w="1074"/><text x="73.1455%" y="447.50">zs..</text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="75.6486%" y="405" width="0.0102%" height="15" fill="rgb(252,181,51)" fg:x="29565" fg:w="4"/><text x="75.8986%" y="415.50"></text></g><g><title>malloc (15 samples, 0.04%)</title><rect x="75.6589%" y="405" width="0.0384%" height="15" fill="rgb(253,90,19)" fg:x="29569" fg:w="15"/><text x="75.9089%" y="415.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_dec (1,188 samples, 3.04%)</title><rect x="72.6600%" y="453" width="3.0398%" height="15" fill="rgb(215,171,30)" fg:x="28397" fg:w="1188"/><text x="72.9100%" y="463.50">&lt;zs..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::new (22 samples, 0.06%)</title><rect x="75.6435%" y="437" width="0.0563%" height="15" fill="rgb(214,222,9)" fg:x="29563" fg:w="22"/><text x="75.8935%" y="447.50"></text></g><g><title>CRYPTO_zalloc (22 samples, 0.06%)</title><rect x="75.6435%" y="421" width="0.0563%" height="15" fill="rgb(223,3,22)" fg:x="29563" fg:w="22"/><text x="75.8935%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="75.7024%" y="453" width="0.0128%" height="15" fill="rgb(225,196,46)" fg:x="29586" fg:w="5"/><text x="75.9524%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="75.7024%" y="437" width="0.0128%" height="15" fill="rgb(209,110,37)" fg:x="29586" fg:w="5"/><text x="75.9524%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="75.7049%" y="421" width="0.0102%" height="15" fill="rgb(249,89,12)" fg:x="29587" fg:w="4"/><text x="75.9549%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="75.7049%" y="405" width="0.0102%" height="15" fill="rgb(226,27,33)" fg:x="29587" fg:w="4"/><text x="75.9549%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.01%)</title><rect x="75.7049%" y="389" width="0.0102%" height="15" fill="rgb(213,82,22)" fg:x="29587" fg:w="4"/><text x="75.9549%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.01%)</title><rect x="75.7049%" y="373" width="0.0102%" height="15" fill="rgb(248,140,0)" fg:x="29587" fg:w="4"/><text x="75.9549%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.02%)</title><rect x="75.7152%" y="453" width="0.0154%" height="15" fill="rgb(228,106,3)" fg:x="29591" fg:w="6"/><text x="75.9652%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.02%)</title><rect x="75.7152%" y="437" width="0.0154%" height="15" fill="rgb(209,23,37)" fg:x="29591" fg:w="6"/><text x="75.9652%" y="447.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (183 samples, 0.47%)</title><rect x="75.7305%" y="453" width="0.4682%" height="15" fill="rgb(241,93,50)" fg:x="29597" fg:w="183"/><text x="75.9805%" y="463.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;u8,_&gt; as std::io::Write&gt;::write (183 samples, 0.47%)</title><rect x="75.7305%" y="437" width="0.4682%" height="15" fill="rgb(253,46,43)" fg:x="29597" fg:w="183"/><text x="75.9805%" y="447.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::try_extend_from_slice (181 samples, 0.46%)</title><rect x="75.7356%" y="421" width="0.4631%" height="15" fill="rgb(226,206,43)" fg:x="29599" fg:w="181"/><text x="75.9856%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (181 samples, 0.46%)</title><rect x="75.7356%" y="405" width="0.4631%" height="15" fill="rgb(217,54,7)" fg:x="29599" fg:w="181"/><text x="75.9856%" y="415.50"></text></g><g><title>[libc.so.6] (181 samples, 0.46%)</title><rect x="75.7356%" y="389" width="0.4631%" height="15" fill="rgb(223,5,52)" fg:x="29599" fg:w="181"/><text x="75.9856%" y="399.50"></text></g><g><title>zssp::zeta::receive_payload_in_place (6,109 samples, 15.63%)</title><rect x="60.6008%" y="469" width="15.6312%" height="15" fill="rgb(206,52,46)" fg:x="23684" fg:w="6109"/><text x="60.8508%" y="479.50">zssp::zeta::receive_payl..</text></g><g><title>zssp::antireplay::Window&lt;_,_&gt;::update (13 samples, 0.03%)</title><rect x="76.1988%" y="453" width="0.0333%" height="15" fill="rgb(253,136,11)" fg:x="29780" fg:w="13"/><text x="76.4488%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_max (13 samples, 0.03%)</title><rect x="76.1988%" y="437" width="0.0333%" height="15" fill="rgb(208,106,33)" fg:x="29780" fg:w="13"/><text x="76.4488%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_umax (13 samples, 0.03%)</title><rect x="76.1988%" y="421" width="0.0333%" height="15" fill="rgb(206,54,4)" fg:x="29780" fg:w="13"/><text x="76.4488%" y="431.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (8,570 samples, 21.93%)</title><rect x="54.5034%" y="485" width="21.9283%" height="15" fill="rgb(213,3,15)" fg:x="21301" fg:w="8570"/><text x="54.7534%" y="495.50">zssp::zssp::Context&lt;Crypto&gt;::receive</text></g><g><title>zssp::zssp::parse_fragment_header (78 samples, 0.20%)</title><rect x="76.2320%" y="469" width="0.1996%" height="15" fill="rgb(252,211,39)" fg:x="29793" fg:w="78"/><text x="76.4820%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.02%)</title><rect x="76.4163%" y="453" width="0.0154%" height="15" fill="rgb(223,6,36)" fg:x="29865" fg:w="6"/><text x="76.6663%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="76.4163%" y="437" width="0.0154%" height="15" fill="rgb(252,169,45)" fg:x="29865" fg:w="6"/><text x="76.6663%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (60 samples, 0.15%)</title><rect x="76.5237%" y="437" width="0.1535%" height="15" fill="rgb(212,48,26)" fg:x="29907" fg:w="60"/><text x="76.7737%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.15%)</title><rect x="76.5237%" y="421" width="0.1535%" height="15" fill="rgb(251,102,48)" fg:x="29907" fg:w="60"/><text x="76.7737%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (58 samples, 0.15%)</title><rect x="76.5288%" y="405" width="0.1484%" height="15" fill="rgb(243,208,16)" fg:x="29909" fg:w="58"/><text x="76.7788%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (53 samples, 0.14%)</title><rect x="76.5416%" y="389" width="0.1356%" height="15" fill="rgb(219,96,24)" fg:x="29914" fg:w="53"/><text x="76.7916%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (53 samples, 0.14%)</title><rect x="76.5416%" y="373" width="0.1356%" height="15" fill="rgb(219,33,29)" fg:x="29914" fg:w="53"/><text x="76.7916%" y="383.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="76.6772%" y="421" width="0.0102%" height="15" fill="rgb(223,176,5)" fg:x="29967" fg:w="4"/><text x="76.9272%" y="431.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.01%)</title><rect x="76.6772%" y="405" width="0.0102%" height="15" fill="rgb(228,140,14)" fg:x="29967" fg:w="4"/><text x="76.9272%" y="415.50"></text></g><g><title>std::thread::panicking (4 samples, 0.01%)</title><rect x="76.6772%" y="389" width="0.0102%" height="15" fill="rgb(217,179,31)" fg:x="29967" fg:w="4"/><text x="76.9272%" y="399.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.01%)</title><rect x="76.6772%" y="373" width="0.0102%" height="15" fill="rgb(230,9,30)" fg:x="29967" fg:w="4"/><text x="76.9272%" y="383.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.01%)</title><rect x="76.6772%" y="357" width="0.0102%" height="15" fill="rgb(230,136,20)" fg:x="29967" fg:w="4"/><text x="76.9272%" y="367.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (90 samples, 0.23%)</title><rect x="76.6772%" y="437" width="0.2303%" height="15" fill="rgb(215,210,22)" fg:x="29967" fg:w="90"/><text x="76.9272%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (86 samples, 0.22%)</title><rect x="76.6875%" y="421" width="0.2201%" height="15" fill="rgb(218,43,5)" fg:x="29971" fg:w="86"/><text x="76.9375%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (80 samples, 0.20%)</title><rect x="76.7028%" y="405" width="0.2047%" height="15" fill="rgb(216,11,5)" fg:x="29977" fg:w="80"/><text x="76.9528%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (80 samples, 0.20%)</title><rect x="76.7028%" y="389" width="0.2047%" height="15" fill="rgb(209,82,29)" fg:x="29977" fg:w="80"/><text x="76.9528%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLEnc as zssp::crypto::aes::Aes256Enc&gt;::encrypt_in_place (337 samples, 0.86%)</title><rect x="76.5160%" y="453" width="0.8623%" height="15" fill="rgb(244,115,12)" fg:x="29904" fg:w="337"/><text x="76.7660%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (184 samples, 0.47%)</title><rect x="76.9075%" y="437" width="0.4708%" height="15" fill="rgb(222,82,18)" fg:x="30057" fg:w="184"/><text x="77.1575%" y="447.50"></text></g><g><title>EVP_EncryptUpdate (183 samples, 0.47%)</title><rect x="76.9101%" y="421" width="0.4682%" height="15" fill="rgb(249,227,8)" fg:x="30058" fg:w="183"/><text x="77.1601%" y="431.50"></text></g><g><title>[libcrypto.so.3] (160 samples, 0.41%)</title><rect x="76.9689%" y="405" width="0.4094%" height="15" fill="rgb(253,141,45)" fg:x="30081" fg:w="160"/><text x="77.2189%" y="415.50"></text></g><g><title>[libcrypto.so.3] (121 samples, 0.31%)</title><rect x="77.0687%" y="389" width="0.3096%" height="15" fill="rgb(234,184,4)" fg:x="30120" fg:w="121"/><text x="77.3187%" y="399.50"></text></g><g><title>[libcrypto.so.3] (116 samples, 0.30%)</title><rect x="77.0815%" y="373" width="0.2968%" height="15" fill="rgb(218,194,23)" fg:x="30125" fg:w="116"/><text x="77.3315%" y="383.50"></text></g><g><title>CRYPTO_gcm128_encrypt (243 samples, 0.62%)</title><rect x="77.7340%" y="357" width="0.6218%" height="15" fill="rgb(235,66,41)" fg:x="30380" fg:w="243"/><text x="77.9840%" y="367.50"></text></g><g><title>[libcrypto.so.3] (137 samples, 0.35%)</title><rect x="78.0052%" y="341" width="0.3505%" height="15" fill="rgb(245,217,1)" fg:x="30486" fg:w="137"/><text x="78.2552%" y="351.50"></text></g><g><title>[libcrypto.so.3] (326 samples, 0.83%)</title><rect x="78.6500%" y="341" width="0.8341%" height="15" fill="rgb(229,91,1)" fg:x="30738" fg:w="326"/><text x="78.9000%" y="351.50"></text></g><g><title>[libcrypto.so.3] (21 samples, 0.05%)</title><rect x="79.4304%" y="325" width="0.0537%" height="15" fill="rgb(207,101,30)" fg:x="31043" fg:w="21"/><text x="79.6804%" y="335.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (442 samples, 1.13%)</title><rect x="78.3558%" y="357" width="1.1310%" height="15" fill="rgb(223,82,49)" fg:x="30623" fg:w="442"/><text x="78.6058%" y="367.50"></text></g><g><title>CRYPTO_gcm128_setiv (16 samples, 0.04%)</title><rect x="79.4867%" y="357" width="0.0409%" height="15" fill="rgb(218,167,17)" fg:x="31065" fg:w="16"/><text x="79.7367%" y="367.50"></text></g><g><title>[libcrypto.so.3] (15 samples, 0.04%)</title><rect x="79.4893%" y="341" width="0.0384%" height="15" fill="rgb(208,103,14)" fg:x="31066" fg:w="15"/><text x="79.7393%" y="351.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::encrypt (3,402 samples, 8.70%)</title><rect x="77.3783%" y="453" width="8.7048%" height="15" fill="rgb(238,20,8)" fg:x="30241" fg:w="3402"/><text x="77.6283%" y="463.50">&lt;zssp::crypt..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (3,400 samples, 8.70%)</title><rect x="77.3835%" y="437" width="8.6997%" height="15" fill="rgb(218,80,54)" fg:x="30243" fg:w="3400"/><text x="77.6335%" y="447.50">zssp::crypto..</text></g><g><title>EVP_EncryptUpdate (3,399 samples, 8.70%)</title><rect x="77.3860%" y="421" width="8.6971%" height="15" fill="rgb(240,144,17)" fg:x="30244" fg:w="3399"/><text x="77.6360%" y="431.50">EVP_EncryptU..</text></g><g><title>[libcrypto.so.3] (3,327 samples, 8.51%)</title><rect x="77.5702%" y="405" width="8.5129%" height="15" fill="rgb(245,27,50)" fg:x="30316" fg:w="3327"/><text x="77.8202%" y="415.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (3,322 samples, 8.50%)</title><rect x="77.5830%" y="389" width="8.5001%" height="15" fill="rgb(251,51,7)" fg:x="30321" fg:w="3322"/><text x="77.8330%" y="399.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (3,300 samples, 8.44%)</title><rect x="77.6393%" y="373" width="8.4438%" height="15" fill="rgb(245,217,29)" fg:x="30343" fg:w="3300"/><text x="77.8893%" y="383.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (2,562 samples, 6.56%)</title><rect x="79.5277%" y="357" width="6.5554%" height="15" fill="rgb(221,176,29)" fg:x="31081" fg:w="2562"/><text x="79.7777%" y="367.50">[libcrypt..</text></g><g><title>[libcrypto.so.3] (2,334 samples, 5.97%)</title><rect x="80.1110%" y="341" width="5.9721%" height="15" fill="rgb(212,180,24)" fg:x="31309" fg:w="2334"/><text x="80.3610%" y="351.50">[libcryp..</text></g><g><title>CRYPTO_clear_free (96 samples, 0.25%)</title><rect x="86.1394%" y="357" width="0.2456%" height="15" fill="rgb(254,24,2)" fg:x="33665" fg:w="96"/><text x="86.3894%" y="367.50"></text></g><g><title>OPENSSL_cleanse (96 samples, 0.25%)</title><rect x="86.1394%" y="341" width="0.2456%" height="15" fill="rgb(230,100,2)" fg:x="33665" fg:w="96"/><text x="86.3894%" y="351.50"></text></g><g><title>EVP_CIPHER_free (43 samples, 0.11%)</title><rect x="86.3876%" y="357" width="0.1100%" height="15" fill="rgb(219,142,25)" fg:x="33762" fg:w="43"/><text x="86.6376%" y="367.50"></text></g><g><title>cfree (23 samples, 0.06%)</title><rect x="86.5002%" y="357" width="0.0589%" height="15" fill="rgb(240,73,43)" fg:x="33806" fg:w="23"/><text x="86.7502%" y="367.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="86.5462%" y="341" width="0.0128%" height="15" fill="rgb(214,114,15)" fg:x="33824" fg:w="5"/><text x="86.7962%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_free (185 samples, 0.47%)</title><rect x="86.0882%" y="389" width="0.4734%" height="15" fill="rgb(207,130,4)" fg:x="33645" fg:w="185"/><text x="86.3382%" y="399.50"></text></g><g><title>EVP_CIPHER_CTX_reset (185 samples, 0.47%)</title><rect x="86.0882%" y="373" width="0.4734%" height="15" fill="rgb(221,25,40)" fg:x="33645" fg:w="185"/><text x="86.3382%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc&gt; (191 samples, 0.49%)</title><rect x="86.0857%" y="437" width="0.4887%" height="15" fill="rgb(241,184,7)" fg:x="33644" fg:w="191"/><text x="86.3357%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::CipherCtx&gt; (191 samples, 0.49%)</title><rect x="86.0857%" y="421" width="0.4887%" height="15" fill="rgb(235,159,4)" fg:x="33644" fg:w="191"/><text x="86.3357%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::CipherCtx as core::ops::drop::Drop&gt;::drop (191 samples, 0.49%)</title><rect x="86.0857%" y="405" width="0.4887%" height="15" fill="rgb(214,87,48)" fg:x="33644" fg:w="191"/><text x="86.3357%" y="415.50"></text></g><g><title>cfree (5 samples, 0.01%)</title><rect x="86.5616%" y="389" width="0.0128%" height="15" fill="rgb(246,198,24)" fg:x="33830" fg:w="5"/><text x="86.8116%" y="399.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="86.5641%" y="373" width="0.0102%" height="15" fill="rgb(209,66,40)" fg:x="33831" fg:w="4"/><text x="86.8141%" y="383.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (69 samples, 0.18%)</title><rect x="86.5744%" y="437" width="0.1766%" height="15" fill="rgb(233,147,39)" fg:x="33835" fg:w="69"/><text x="86.8244%" y="447.50"></text></g><g><title>EVP_EncryptFinal_ex (67 samples, 0.17%)</title><rect x="86.5795%" y="421" width="0.1714%" height="15" fill="rgb(231,145,52)" fg:x="33837" fg:w="67"/><text x="86.8295%" y="431.50"></text></g><g><title>[libcrypto.so.3] (51 samples, 0.13%)</title><rect x="86.6204%" y="405" width="0.1305%" height="15" fill="rgb(206,20,26)" fg:x="33853" fg:w="51"/><text x="86.8704%" y="415.50"></text></g><g><title>[libcrypto.so.3] (50 samples, 0.13%)</title><rect x="86.6230%" y="389" width="0.1279%" height="15" fill="rgb(238,220,4)" fg:x="33854" fg:w="50"/><text x="86.8730%" y="399.50"></text></g><g><title>[libcrypto.so.3] (45 samples, 0.12%)</title><rect x="86.6358%" y="373" width="0.1151%" height="15" fill="rgb(252,195,42)" fg:x="33859" fg:w="45"/><text x="86.8858%" y="383.50"></text></g><g><title>CRYPTO_gcm128_tag (45 samples, 0.12%)</title><rect x="86.6358%" y="357" width="0.1151%" height="15" fill="rgb(209,10,6)" fg:x="33859" fg:w="45"/><text x="86.8858%" y="367.50"></text></g><g><title>CRYPTO_gcm128_finish (37 samples, 0.09%)</title><rect x="86.6563%" y="341" width="0.0947%" height="15" fill="rgb(229,3,52)" fg:x="33867" fg:w="37"/><text x="86.9063%" y="351.50"></text></g><g><title>[libcrypto.so.3] (22 samples, 0.06%)</title><rect x="86.6946%" y="325" width="0.0563%" height="15" fill="rgb(253,49,37)" fg:x="33882" fg:w="22"/><text x="86.9446%" y="335.50"></text></g><g><title>[libc.so.6] (15 samples, 0.04%)</title><rect x="86.9147%" y="373" width="0.0384%" height="15" fill="rgb(240,103,49)" fg:x="33968" fg:w="15"/><text x="87.1647%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (39 samples, 0.10%)</title><rect x="86.8584%" y="389" width="0.0998%" height="15" fill="rgb(250,182,30)" fg:x="33946" fg:w="39"/><text x="87.1084%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::finish (345 samples, 0.88%)</title><rect x="86.0831%" y="453" width="0.8828%" height="15" fill="rgb(248,8,30)" fg:x="33643" fg:w="345"/><text x="86.3331%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::get_tag (84 samples, 0.21%)</title><rect x="86.7509%" y="437" width="0.2149%" height="15" fill="rgb(237,120,30)" fg:x="33904" fg:w="84"/><text x="87.0009%" y="447.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (83 samples, 0.21%)</title><rect x="86.7535%" y="421" width="0.2124%" height="15" fill="rgb(221,146,34)" fg:x="33905" fg:w="83"/><text x="87.0035%" y="431.50"></text></g><g><title>[libcrypto.so.3] (51 samples, 0.13%)</title><rect x="86.8354%" y="405" width="0.1305%" height="15" fill="rgb(242,55,13)" fg:x="33937" fg:w="51"/><text x="87.0854%" y="415.50"></text></g><g><title>[libc.so.6] (25 samples, 0.06%)</title><rect x="87.0861%" y="389" width="0.0640%" height="15" fill="rgb(242,112,31)" fg:x="34035" fg:w="25"/><text x="87.3361%" y="399.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="87.1373%" y="373" width="0.0128%" height="15" fill="rgb(249,192,27)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="383.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="87.1373%" y="357" width="0.0128%" height="15" fill="rgb(208,204,44)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="367.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="87.1373%" y="341" width="0.0128%" height="15" fill="rgb(208,93,54)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="351.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="87.1373%" y="325" width="0.0128%" height="15" fill="rgb(242,1,31)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="335.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="87.1373%" y="309" width="0.0128%" height="15" fill="rgb(241,83,25)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="319.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="87.1373%" y="293" width="0.0128%" height="15" fill="rgb(205,169,50)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="303.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="87.1373%" y="277" width="0.0128%" height="15" fill="rgb(239,186,37)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="287.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="87.1373%" y="261" width="0.0128%" height="15" fill="rgb(205,221,10)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="271.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="87.1373%" y="245" width="0.0128%" height="15" fill="rgb(218,196,15)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="255.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="87.1373%" y="229" width="0.0128%" height="15" fill="rgb(218,196,35)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="239.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="87.1373%" y="213" width="0.0128%" height="15" fill="rgb(233,63,24)" fg:x="34055" fg:w="5"/><text x="87.3873%" y="223.50"></text></g><g><title>OSSL_PARAM_locate (41 samples, 0.10%)</title><rect x="87.0554%" y="405" width="0.1049%" height="15" fill="rgb(225,8,4)" fg:x="34023" fg:w="41"/><text x="87.3054%" y="415.50"></text></g><g><title>strcmp@plt (4 samples, 0.01%)</title><rect x="87.1501%" y="389" width="0.0102%" height="15" fill="rgb(234,105,35)" fg:x="34060" fg:w="4"/><text x="87.4001%" y="399.50"></text></g><g><title>[libcrypto.so.3] (49 samples, 0.13%)</title><rect x="87.0401%" y="421" width="0.1254%" height="15" fill="rgb(236,21,32)" fg:x="34017" fg:w="49"/><text x="87.2901%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="87.1654%" y="277" width="0.0128%" height="15" fill="rgb(228,109,6)" fg:x="34066" fg:w="5"/><text x="87.4154%" y="287.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="87.1654%" y="261" width="0.0128%" height="15" fill="rgb(229,215,31)" fg:x="34066" fg:w="5"/><text x="87.4154%" y="271.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (83 samples, 0.21%)</title><rect x="86.9684%" y="437" width="0.2124%" height="15" fill="rgb(221,52,54)" fg:x="33989" fg:w="83"/><text x="87.2184%" y="447.50"></text></g><g><title>asm_sysvec_reschedule_ipi (6 samples, 0.02%)</title><rect x="87.1654%" y="421" width="0.0154%" height="15" fill="rgb(252,129,43)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="431.50"></text></g><g><title>sysvec_reschedule_ipi (6 samples, 0.02%)</title><rect x="87.1654%" y="405" width="0.0154%" height="15" fill="rgb(248,183,27)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="415.50"></text></g><g><title>irqentry_exit (6 samples, 0.02%)</title><rect x="87.1654%" y="389" width="0.0154%" height="15" fill="rgb(250,0,22)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="399.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.02%)</title><rect x="87.1654%" y="373" width="0.0154%" height="15" fill="rgb(213,166,10)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="383.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.02%)</title><rect x="87.1654%" y="357" width="0.0154%" height="15" fill="rgb(207,163,36)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="367.50"></text></g><g><title>exit_to_user_mode_loop (6 samples, 0.02%)</title><rect x="87.1654%" y="341" width="0.0154%" height="15" fill="rgb(208,122,22)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="351.50"></text></g><g><title>schedule (6 samples, 0.02%)</title><rect x="87.1654%" y="325" width="0.0154%" height="15" fill="rgb(207,104,49)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="335.50"></text></g><g><title>__schedule (6 samples, 0.02%)</title><rect x="87.1654%" y="309" width="0.0154%" height="15" fill="rgb(248,211,50)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="319.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.02%)</title><rect x="87.1654%" y="293" width="0.0154%" height="15" fill="rgb(217,13,45)" fg:x="34066" fg:w="6"/><text x="87.4154%" y="303.50"></text></g><g><title>[libc.so.6] (21 samples, 0.05%)</title><rect x="87.4136%" y="341" width="0.0537%" height="15" fill="rgb(211,216,49)" fg:x="34163" fg:w="21"/><text x="87.6636%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (41 samples, 0.10%)</title><rect x="87.3676%" y="357" width="0.1049%" height="15" fill="rgb(221,58,53)" fg:x="34145" fg:w="41"/><text x="87.6176%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (82 samples, 0.21%)</title><rect x="87.2652%" y="389" width="0.2098%" height="15" fill="rgb(220,112,41)" fg:x="34105" fg:w="82"/><text x="87.5152%" y="399.50"></text></g><g><title>[libcrypto.so.3] (54 samples, 0.14%)</title><rect x="87.3369%" y="373" width="0.1382%" height="15" fill="rgb(236,38,28)" fg:x="34133" fg:w="54"/><text x="87.5869%" y="383.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="87.5646%" y="341" width="0.0230%" height="15" fill="rgb(227,195,22)" fg:x="34222" fg:w="9"/><text x="87.8146%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (26 samples, 0.07%)</title><rect x="87.5288%" y="357" width="0.0665%" height="15" fill="rgb(214,55,33)" fg:x="34208" fg:w="26"/><text x="87.7788%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_get_key_length (48 samples, 0.12%)</title><rect x="87.4751%" y="389" width="0.1228%" height="15" fill="rgb(248,80,13)" fg:x="34187" fg:w="48"/><text x="87.7251%" y="399.50"></text></g><g><title>[libcrypto.so.3] (40 samples, 0.10%)</title><rect x="87.4955%" y="373" width="0.1023%" height="15" fill="rgb(238,52,6)" fg:x="34195" fg:w="40"/><text x="87.7455%" y="383.50"></text></g><g><title>CRYPTO_THREAD_read_lock (116 samples, 0.30%)</title><rect x="87.6414%" y="341" width="0.2968%" height="15" fill="rgb(224,198,47)" fg:x="34252" fg:w="116"/><text x="87.8914%" y="351.50"></text></g><g><title>pthread_rwlock_rdlock (112 samples, 0.29%)</title><rect x="87.6516%" y="325" width="0.2866%" height="15" fill="rgb(233,171,20)" fg:x="34256" fg:w="112"/><text x="87.9016%" y="335.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="87.9254%" y="309" width="0.0128%" height="15" fill="rgb(241,30,25)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="319.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="87.9254%" y="293" width="0.0128%" height="15" fill="rgb(207,171,38)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="303.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="87.9254%" y="277" width="0.0128%" height="15" fill="rgb(234,70,1)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="87.9254%" y="261" width="0.0128%" height="15" fill="rgb(232,178,18)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="271.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="87.9254%" y="245" width="0.0128%" height="15" fill="rgb(241,78,40)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="255.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="87.9254%" y="229" width="0.0128%" height="15" fill="rgb(222,35,25)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="239.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="87.9254%" y="213" width="0.0128%" height="15" fill="rgb(207,92,16)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="223.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="87.9254%" y="197" width="0.0128%" height="15" fill="rgb(216,59,51)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="207.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="87.9254%" y="181" width="0.0128%" height="15" fill="rgb(213,80,28)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="191.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="87.9254%" y="165" width="0.0128%" height="15" fill="rgb(220,93,7)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="175.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="87.9254%" y="149" width="0.0128%" height="15" fill="rgb(225,24,44)" fg:x="34363" fg:w="5"/><text x="88.1754%" y="159.50"></text></g><g><title>pthread_rwlock_unlock (95 samples, 0.24%)</title><rect x="87.9535%" y="325" width="0.2431%" height="15" fill="rgb(243,74,40)" fg:x="34374" fg:w="95"/><text x="88.2035%" y="335.50"></text></g><g><title>asm_sysvec_reschedule_ipi (4 samples, 0.01%)</title><rect x="88.1864%" y="309" width="0.0102%" height="15" fill="rgb(228,39,7)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="319.50"></text></g><g><title>sysvec_reschedule_ipi (4 samples, 0.01%)</title><rect x="88.1864%" y="293" width="0.0102%" height="15" fill="rgb(227,79,8)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="303.50"></text></g><g><title>irqentry_exit (4 samples, 0.01%)</title><rect x="88.1864%" y="277" width="0.0102%" height="15" fill="rgb(236,58,11)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.01%)</title><rect x="88.1864%" y="261" width="0.0102%" height="15" fill="rgb(249,63,35)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="271.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.01%)</title><rect x="88.1864%" y="245" width="0.0102%" height="15" fill="rgb(252,114,16)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="255.50"></text></g><g><title>exit_to_user_mode_loop (4 samples, 0.01%)</title><rect x="88.1864%" y="229" width="0.0102%" height="15" fill="rgb(254,151,24)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="239.50"></text></g><g><title>schedule (4 samples, 0.01%)</title><rect x="88.1864%" y="213" width="0.0102%" height="15" fill="rgb(253,54,39)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="223.50"></text></g><g><title>__schedule (4 samples, 0.01%)</title><rect x="88.1864%" y="197" width="0.0102%" height="15" fill="rgb(243,25,45)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="207.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.01%)</title><rect x="88.1864%" y="181" width="0.0102%" height="15" fill="rgb(234,134,9)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="191.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="88.1864%" y="165" width="0.0102%" height="15" fill="rgb(227,166,31)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="175.50"></text></g><g><title>perf_pmu_nop_void (4 samples, 0.01%)</title><rect x="88.1864%" y="149" width="0.0102%" height="15" fill="rgb(245,143,41)" fg:x="34465" fg:w="4"/><text x="88.4364%" y="159.50"></text></g><g><title>CRYPTO_THREAD_unlock (101 samples, 0.26%)</title><rect x="87.9433%" y="341" width="0.2584%" height="15" fill="rgb(238,181,32)" fg:x="34370" fg:w="101"/><text x="88.1933%" y="351.50"></text></g><g><title>EVP_CIPHER_up_ref (39 samples, 0.10%)</title><rect x="88.2017%" y="341" width="0.0998%" height="15" fill="rgb(224,113,18)" fg:x="34471" fg:w="39"/><text x="88.4517%" y="351.50"></text></g><g><title>OPENSSL_LH_retrieve (56 samples, 0.14%)</title><rect x="88.3015%" y="341" width="0.1433%" height="15" fill="rgb(240,229,28)" fg:x="34510" fg:w="56"/><text x="88.5515%" y="351.50"></text></g><g><title>[libcrypto.so.3] (48 samples, 0.12%)</title><rect x="88.3220%" y="325" width="0.1228%" height="15" fill="rgb(250,185,3)" fg:x="34518" fg:w="48"/><text x="88.5720%" y="335.50"></text></g><g><title>[libcrypto.so.3] (6 samples, 0.02%)</title><rect x="88.4295%" y="309" width="0.0154%" height="15" fill="rgb(212,59,25)" fg:x="34560" fg:w="6"/><text x="88.6795%" y="319.50"></text></g><g><title>pthread_rwlock_rdlock (20 samples, 0.05%)</title><rect x="88.4602%" y="309" width="0.0512%" height="15" fill="rgb(221,87,20)" fg:x="34572" fg:w="20"/><text x="88.7102%" y="319.50"></text></g><g><title>CRYPTO_THREAD_read_lock (24 samples, 0.06%)</title><rect x="88.4576%" y="325" width="0.0614%" height="15" fill="rgb(213,74,28)" fg:x="34571" fg:w="24"/><text x="88.7076%" y="335.50"></text></g><g><title>pthread_rwlock_unlock (51 samples, 0.13%)</title><rect x="88.5267%" y="309" width="0.1305%" height="15" fill="rgb(224,132,34)" fg:x="34598" fg:w="51"/><text x="88.7767%" y="319.50"></text></g><g><title>CRYPTO_THREAD_unlock (54 samples, 0.14%)</title><rect x="88.5241%" y="325" width="0.1382%" height="15" fill="rgb(222,101,24)" fg:x="34597" fg:w="54"/><text x="88.7741%" y="335.50"></text></g><g><title>CRYPTO_strndup (10 samples, 0.03%)</title><rect x="88.6725%" y="325" width="0.0256%" height="15" fill="rgb(254,142,4)" fg:x="34655" fg:w="10"/><text x="88.9225%" y="335.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="88.6828%" y="309" width="0.0154%" height="15" fill="rgb(230,229,49)" fg:x="34659" fg:w="6"/><text x="88.9328%" y="319.50"></text></g><g><title>OPENSSL_strcasecmp (44 samples, 0.11%)</title><rect x="88.8926%" y="293" width="0.1126%" height="15" fill="rgb(238,70,47)" fg:x="34741" fg:w="44"/><text x="89.1426%" y="303.50"></text></g><g><title>OPENSSL_LH_retrieve (173 samples, 0.44%)</title><rect x="88.6981%" y="325" width="0.4427%" height="15" fill="rgb(231,160,17)" fg:x="34665" fg:w="173"/><text x="88.9481%" y="335.50"></text></g><g><title>[libcrypto.so.3] (157 samples, 0.40%)</title><rect x="88.7391%" y="309" width="0.4017%" height="15" fill="rgb(218,68,53)" fg:x="34681" fg:w="157"/><text x="88.9891%" y="319.50"></text></g><g><title>[libcrypto.so.3] (53 samples, 0.14%)</title><rect x="89.0052%" y="293" width="0.1356%" height="15" fill="rgb(236,111,10)" fg:x="34785" fg:w="53"/><text x="89.2552%" y="303.50"></text></g><g><title>cfree (17 samples, 0.04%)</title><rect x="89.1408%" y="325" width="0.0435%" height="15" fill="rgb(224,34,41)" fg:x="34838" fg:w="17"/><text x="89.3908%" y="335.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="89.1689%" y="309" width="0.0154%" height="15" fill="rgb(241,118,19)" fg:x="34849" fg:w="6"/><text x="89.4189%" y="319.50"></text></g><g><title>[libcrypto.so.3] (290 samples, 0.74%)</title><rect x="88.4448%" y="341" width="0.7420%" height="15" fill="rgb(238,129,25)" fg:x="34566" fg:w="290"/><text x="88.6948%" y="351.50"></text></g><g><title>EVP_CIPHER_fetch (622 samples, 1.59%)</title><rect x="87.5979%" y="389" width="1.5915%" height="15" fill="rgb(238,22,31)" fg:x="34235" fg:w="622"/><text x="87.8479%" y="399.50"></text></g><g><title>[libcrypto.so.3] (620 samples, 1.59%)</title><rect x="87.6030%" y="373" width="1.5864%" height="15" fill="rgb(222,174,48)" fg:x="34237" fg:w="620"/><text x="87.8530%" y="383.50"></text></g><g><title>[libcrypto.so.3] (612 samples, 1.57%)</title><rect x="87.6235%" y="357" width="1.5659%" height="15" fill="rgb(206,152,40)" fg:x="34245" fg:w="612"/><text x="87.8735%" y="367.50"></text></g><g><title>EVP_CIPHER_free (14 samples, 0.04%)</title><rect x="89.1894%" y="389" width="0.0358%" height="15" fill="rgb(218,99,54)" fg:x="34857" fg:w="14"/><text x="89.4394%" y="399.50"></text></g><g><title>EVP_CIPHER_up_ref (18 samples, 0.05%)</title><rect x="89.2252%" y="389" width="0.0461%" height="15" fill="rgb(220,174,26)" fg:x="34871" fg:w="18"/><text x="89.4752%" y="399.50"></text></g><g><title>CRYPTO_malloc (4 samples, 0.01%)</title><rect x="89.2943%" y="357" width="0.0102%" height="15" fill="rgb(245,116,9)" fg:x="34898" fg:w="4"/><text x="89.5443%" y="367.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="89.3045%" y="357" width="0.0230%" height="15" fill="rgb(209,72,35)" fg:x="34902" fg:w="9"/><text x="89.5545%" y="367.50"></text></g><g><title>malloc (8 samples, 0.02%)</title><rect x="89.3276%" y="357" width="0.0205%" height="15" fill="rgb(226,126,21)" fg:x="34911" fg:w="8"/><text x="89.5776%" y="367.50"></text></g><g><title>CRYPTO_zalloc (24 samples, 0.06%)</title><rect x="89.2917%" y="373" width="0.0614%" height="15" fill="rgb(227,192,1)" fg:x="34897" fg:w="24"/><text x="89.5417%" y="383.50"></text></g><g><title>OPENSSL_init_crypto (4 samples, 0.01%)</title><rect x="89.3532%" y="373" width="0.0102%" height="15" fill="rgb(237,180,29)" fg:x="34921" fg:w="4"/><text x="89.6032%" y="383.50"></text></g><g><title>CRYPTO_gcm128_init (157 samples, 0.40%)</title><rect x="89.3685%" y="357" width="0.4017%" height="15" fill="rgb(230,197,35)" fg:x="34927" fg:w="157"/><text x="89.6185%" y="367.50"></text></g><g><title>[libcrypto.so.3] (141 samples, 0.36%)</title><rect x="89.4094%" y="341" width="0.3608%" height="15" fill="rgb(246,193,31)" fg:x="34943" fg:w="141"/><text x="89.6594%" y="351.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.01%)</title><rect x="89.8675%" y="213" width="0.0102%" height="15" fill="rgb(241,36,4)" fg:x="35122" fg:w="4"/><text x="90.1175%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="89.8675%" y="197" width="0.0102%" height="15" fill="rgb(241,130,17)" fg:x="35122" fg:w="4"/><text x="90.1175%" y="207.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.01%)</title><rect x="89.8675%" y="181" width="0.0102%" height="15" fill="rgb(206,137,32)" fg:x="35122" fg:w="4"/><text x="90.1175%" y="191.50"></text></g><g><title>EVP_CipherInit_ex (1,051 samples, 2.69%)</title><rect x="87.1910%" y="421" width="2.6892%" height="15" fill="rgb(237,228,51)" fg:x="34076" fg:w="1051"/><text x="87.4410%" y="431.50">EV..</text></g><g><title>[libcrypto.so.3] (1,051 samples, 2.69%)</title><rect x="87.1910%" y="405" width="2.6892%" height="15" fill="rgb(243,6,42)" fg:x="34076" fg:w="1051"/><text x="87.4410%" y="415.50">[l..</text></g><g><title>[libcrypto.so.3] (235 samples, 0.60%)</title><rect x="89.2790%" y="389" width="0.6013%" height="15" fill="rgb(251,74,28)" fg:x="34892" fg:w="235"/><text x="89.5290%" y="399.50"></text></g><g><title>[libcrypto.so.3] (202 samples, 0.52%)</title><rect x="89.3634%" y="373" width="0.5169%" height="15" fill="rgb(218,20,49)" fg:x="34925" fg:w="202"/><text x="89.6134%" y="383.50"></text></g><g><title>[libcrypto.so.3] (43 samples, 0.11%)</title><rect x="89.7702%" y="357" width="0.1100%" height="15" fill="rgb(238,28,14)" fg:x="35084" fg:w="43"/><text x="90.0202%" y="367.50"></text></g><g><title>asm_sysvec_reschedule_ipi (6 samples, 0.02%)</title><rect x="89.8649%" y="341" width="0.0154%" height="15" fill="rgb(229,40,46)" fg:x="35121" fg:w="6"/><text x="90.1149%" y="351.50"></text></g><g><title>sysvec_reschedule_ipi (6 samples, 0.02%)</title><rect x="89.8649%" y="325" width="0.0154%" height="15" fill="rgb(244,195,20)" fg:x="35121" fg:w="6"/><text x="90.1149%" y="335.50"></text></g><g><title>irqentry_exit (6 samples, 0.02%)</title><rect x="89.8649%" y="309" width="0.0154%" height="15" fill="rgb(253,56,35)" fg:x="35121" fg:w="6"/><text x="90.1149%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.02%)</title><rect x="89.8649%" y="293" width="0.0154%" height="15" fill="rgb(210,149,44)" fg:x="35121" fg:w="6"/><text x="90.1149%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.02%)</title><rect x="89.8649%" y="277" width="0.0154%" height="15" fill="rgb(240,135,12)" fg:x="35121" fg:w="6"/><text x="90.1149%" y="287.50"></text></g><g><title>exit_to_user_mode_loop (6 samples, 0.02%)</title><rect x="89.8649%" y="261" width="0.0154%" height="15" fill="rgb(251,24,50)" fg:x="35121" fg:w="6"/><text x="90.1149%" y="271.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="89.8675%" y="245" width="0.0128%" height="15" fill="rgb(243,200,47)" fg:x="35122" fg:w="5"/><text x="90.1175%" y="255.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="89.8675%" y="229" width="0.0128%" height="15" fill="rgb(224,166,26)" fg:x="35122" fg:w="5"/><text x="90.1175%" y="239.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::cipher_init (1,054 samples, 2.70%)</title><rect x="87.1859%" y="437" width="2.6969%" height="15" fill="rgb(233,0,47)" fg:x="34074" fg:w="1054"/><text x="87.4359%" y="447.50">zs..</text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="89.8854%" y="405" width="0.0102%" height="15" fill="rgb(253,80,5)" fg:x="35129" fg:w="4"/><text x="90.1354%" y="415.50"></text></g><g><title>malloc (7 samples, 0.02%)</title><rect x="89.8956%" y="405" width="0.0179%" height="15" fill="rgb(214,133,25)" fg:x="35133" fg:w="7"/><text x="90.1456%" y="415.50"></text></g><g><title>CRYPTO_zalloc (13 samples, 0.03%)</title><rect x="89.8828%" y="421" width="0.0333%" height="15" fill="rgb(209,27,14)" fg:x="35128" fg:w="13"/><text x="90.1328%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_enc (1,154 samples, 2.95%)</title><rect x="86.9659%" y="453" width="2.9528%" height="15" fill="rgb(219,102,51)" fg:x="33988" fg:w="1154"/><text x="87.2159%" y="463.50">&lt;zs..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::new (14 samples, 0.04%)</title><rect x="89.8828%" y="437" width="0.0358%" height="15" fill="rgb(237,18,16)" fg:x="35128" fg:w="14"/><text x="90.1328%" y="447.50"></text></g><g><title>__rdl_alloc (6 samples, 0.02%)</title><rect x="89.9238%" y="277" width="0.0154%" height="15" fill="rgb(241,85,17)" fg:x="35144" fg:w="6"/><text x="90.1738%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.02%)</title><rect x="89.9238%" y="261" width="0.0154%" height="15" fill="rgb(236,90,42)" fg:x="35144" fg:w="6"/><text x="90.1738%" y="271.50"></text></g><g><title>[libc.so.6] (49 samples, 0.13%)</title><rect x="93.4804%" y="245" width="0.1254%" height="15" fill="rgb(249,57,21)" fg:x="36534" fg:w="49"/><text x="93.7304%" y="255.50"></text></g><g><title>[libc.so.6] (850 samples, 2.17%)</title><rect x="91.4436%" y="261" width="2.1749%" height="15" fill="rgb(243,12,36)" fg:x="35738" fg:w="850"/><text x="91.6936%" y="271.50">[..</text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="93.6058%" y="245" width="0.0128%" height="15" fill="rgb(253,128,47)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="255.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="93.6058%" y="229" width="0.0128%" height="15" fill="rgb(207,33,20)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="239.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="93.6058%" y="213" width="0.0128%" height="15" fill="rgb(233,215,35)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="223.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="93.6058%" y="197" width="0.0128%" height="15" fill="rgb(249,188,52)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="207.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="93.6058%" y="181" width="0.0128%" height="15" fill="rgb(225,12,32)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="191.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="93.6058%" y="165" width="0.0128%" height="15" fill="rgb(247,98,14)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="175.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="93.6058%" y="149" width="0.0128%" height="15" fill="rgb(247,219,48)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="159.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="93.6058%" y="133" width="0.0128%" height="15" fill="rgb(253,60,48)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="143.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="93.6058%" y="117" width="0.0128%" height="15" fill="rgb(245,15,52)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="93.6058%" y="101" width="0.0128%" height="15" fill="rgb(220,133,28)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="111.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="93.6058%" y="85" width="0.0128%" height="15" fill="rgb(217,180,4)" fg:x="36583" fg:w="5"/><text x="93.8558%" y="95.50"></text></g><g><title>__get_user_nocheck_4 (8 samples, 0.02%)</title><rect x="93.6800%" y="149" width="0.0205%" height="15" fill="rgb(251,24,1)" fg:x="36612" fg:w="8"/><text x="93.9300%" y="159.50"></text></g><g><title>futex_q_lock (13 samples, 0.03%)</title><rect x="93.7004%" y="149" width="0.0333%" height="15" fill="rgb(212,185,49)" fg:x="36620" fg:w="13"/><text x="93.9504%" y="159.50"></text></g><g><title>futex_q_unlock (5 samples, 0.01%)</title><rect x="93.7337%" y="149" width="0.0128%" height="15" fill="rgb(215,175,22)" fg:x="36633" fg:w="5"/><text x="93.9837%" y="159.50"></text></g><g><title>__x64_sys_futex (35 samples, 0.09%)</title><rect x="93.6620%" y="213" width="0.0896%" height="15" fill="rgb(250,205,14)" fg:x="36605" fg:w="35"/><text x="93.9120%" y="223.50"></text></g><g><title>do_futex (33 samples, 0.08%)</title><rect x="93.6672%" y="197" width="0.0844%" height="15" fill="rgb(225,211,22)" fg:x="36607" fg:w="33"/><text x="93.9172%" y="207.50"></text></g><g><title>futex_wait (32 samples, 0.08%)</title><rect x="93.6697%" y="181" width="0.0819%" height="15" fill="rgb(251,179,42)" fg:x="36608" fg:w="32"/><text x="93.9197%" y="191.50"></text></g><g><title>futex_wait_setup (28 samples, 0.07%)</title><rect x="93.6800%" y="165" width="0.0716%" height="15" fill="rgb(208,216,51)" fg:x="36612" fg:w="28"/><text x="93.9300%" y="175.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.09%)</title><rect x="93.6620%" y="245" width="0.0947%" height="15" fill="rgb(235,36,11)" fg:x="36605" fg:w="37"/><text x="93.9120%" y="255.50"></text></g><g><title>do_syscall_64 (37 samples, 0.09%)</title><rect x="93.6620%" y="229" width="0.0947%" height="15" fill="rgb(213,189,28)" fg:x="36605" fg:w="37"/><text x="93.9120%" y="239.50"></text></g><g><title>__lll_lock_wait_private (55 samples, 0.14%)</title><rect x="93.6185%" y="261" width="0.1407%" height="15" fill="rgb(227,203,42)" fg:x="36588" fg:w="55"/><text x="93.8685%" y="271.50"></text></g><g><title>futex_wake_mark (11 samples, 0.03%)</title><rect x="93.9179%" y="165" width="0.0281%" height="15" fill="rgb(244,72,36)" fg:x="36705" fg:w="11"/><text x="94.1679%" y="175.50"></text></g><g><title>wake_q_add_safe (4 samples, 0.01%)</title><rect x="93.9461%" y="165" width="0.0102%" height="15" fill="rgb(213,53,17)" fg:x="36716" fg:w="4"/><text x="94.1961%" y="175.50"></text></g><g><title>call_function_single_prep_ipi (4 samples, 0.01%)</title><rect x="94.0459%" y="101" width="0.0102%" height="15" fill="rgb(207,167,3)" fg:x="36755" fg:w="4"/><text x="94.2959%" y="111.50"></text></g><g><title>__smp_call_single_queue (17 samples, 0.04%)</title><rect x="94.0459%" y="117" width="0.0435%" height="15" fill="rgb(216,98,30)" fg:x="36755" fg:w="17"/><text x="94.2959%" y="127.50"></text></g><g><title>native_send_call_func_single_ipi (13 samples, 0.03%)</title><rect x="94.0561%" y="101" width="0.0333%" height="15" fill="rgb(236,123,15)" fg:x="36759" fg:w="13"/><text x="94.3061%" y="111.50"></text></g><g><title>x2apic_send_IPI (12 samples, 0.03%)</title><rect x="94.0586%" y="85" width="0.0307%" height="15" fill="rgb(248,81,50)" fg:x="36760" fg:w="12"/><text x="94.3086%" y="95.50"></text></g><g><title>native_write_msr (10 samples, 0.03%)</title><rect x="94.0638%" y="69" width="0.0256%" height="15" fill="rgb(214,120,4)" fg:x="36762" fg:w="10"/><text x="94.3138%" y="79.50"></text></g><g><title>llist_add_batch (10 samples, 0.03%)</title><rect x="94.0894%" y="117" width="0.0256%" height="15" fill="rgb(208,179,34)" fg:x="36772" fg:w="10"/><text x="94.3394%" y="127.50"></text></g><g><title>futex_wake (123 samples, 0.31%)</title><rect x="93.8028%" y="181" width="0.3147%" height="15" fill="rgb(227,140,7)" fg:x="36660" fg:w="123"/><text x="94.0528%" y="191.50"></text></g><g><title>wake_up_q (63 samples, 0.16%)</title><rect x="93.9563%" y="165" width="0.1612%" height="15" fill="rgb(214,22,6)" fg:x="36720" fg:w="63"/><text x="94.2063%" y="175.50"></text></g><g><title>try_to_wake_up (58 samples, 0.15%)</title><rect x="93.9691%" y="149" width="0.1484%" height="15" fill="rgb(207,137,27)" fg:x="36725" fg:w="58"/><text x="94.2191%" y="159.50"></text></g><g><title>ttwu_queue_wakelist (38 samples, 0.10%)</title><rect x="94.0203%" y="133" width="0.0972%" height="15" fill="rgb(210,8,46)" fg:x="36745" fg:w="38"/><text x="94.2703%" y="143.50"></text></g><g><title>__x64_sys_futex (133 samples, 0.34%)</title><rect x="93.7797%" y="213" width="0.3403%" height="15" fill="rgb(240,16,54)" fg:x="36651" fg:w="133"/><text x="94.0297%" y="223.50"></text></g><g><title>do_futex (132 samples, 0.34%)</title><rect x="93.7823%" y="197" width="0.3378%" height="15" fill="rgb(211,209,29)" fg:x="36652" fg:w="132"/><text x="94.0323%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (145 samples, 0.37%)</title><rect x="93.7746%" y="245" width="0.3710%" height="15" fill="rgb(226,228,24)" fg:x="36649" fg:w="145"/><text x="94.0246%" y="255.50"></text></g><g><title>do_syscall_64 (144 samples, 0.37%)</title><rect x="93.7772%" y="229" width="0.3685%" height="15" fill="rgb(222,84,9)" fg:x="36650" fg:w="144"/><text x="94.0272%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.02%)</title><rect x="94.1277%" y="213" width="0.0179%" height="15" fill="rgb(234,203,30)" fg:x="36787" fg:w="7"/><text x="94.3777%" y="223.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="94.1328%" y="197" width="0.0128%" height="15" fill="rgb(238,109,14)" fg:x="36789" fg:w="5"/><text x="94.3828%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,653 samples, 4.23%)</title><rect x="89.9186%" y="373" width="4.2296%" height="15" fill="rgb(233,206,34)" fg:x="35142" fg:w="1653"/><text x="90.1686%" y="383.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,653 samples, 4.23%)</title><rect x="89.9186%" y="357" width="4.2296%" height="15" fill="rgb(220,167,47)" fg:x="35142" fg:w="1653"/><text x="90.1686%" y="367.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,653 samples, 4.23%)</title><rect x="89.9186%" y="341" width="4.2296%" height="15" fill="rgb(238,105,10)" fg:x="35142" fg:w="1653"/><text x="90.1686%" y="351.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,651 samples, 4.22%)</title><rect x="89.9238%" y="325" width="4.2245%" height="15" fill="rgb(213,227,17)" fg:x="35144" fg:w="1651"/><text x="90.1738%" y="335.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,651 samples, 4.22%)</title><rect x="89.9238%" y="309" width="4.2245%" height="15" fill="rgb(217,132,38)" fg:x="35144" fg:w="1651"/><text x="90.1738%" y="319.50">alloc..</text></g><g><title>alloc::alloc::alloc (1,651 samples, 4.22%)</title><rect x="89.9238%" y="293" width="4.2245%" height="15" fill="rgb(242,146,4)" fg:x="35144" fg:w="1651"/><text x="90.1738%" y="303.50">alloc..</text></g><g><title>malloc (1,644 samples, 4.21%)</title><rect x="89.9417%" y="277" width="4.2065%" height="15" fill="rgb(212,61,9)" fg:x="35151" fg:w="1644"/><text x="90.1917%" y="287.50">malloc</text></g><g><title>__lll_lock_wake_private (152 samples, 0.39%)</title><rect x="93.7593%" y="261" width="0.3889%" height="15" fill="rgb(247,126,22)" fg:x="36643" fg:w="152"/><text x="94.0093%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,857 samples, 4.75%)</title><rect x="89.9186%" y="437" width="4.7515%" height="15" fill="rgb(220,196,2)" fg:x="35142" fg:w="1857"/><text x="90.1686%" y="447.50">alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,857 samples, 4.75%)</title><rect x="89.9186%" y="421" width="4.7515%" height="15" fill="rgb(208,46,4)" fg:x="35142" fg:w="1857"/><text x="90.1686%" y="431.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (1,857 samples, 4.75%)</title><rect x="89.9186%" y="405" width="4.7515%" height="15" fill="rgb(252,104,46)" fg:x="35142" fg:w="1857"/><text x="90.1686%" y="415.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,857 samples, 4.75%)</title><rect x="89.9186%" y="389" width="4.7515%" height="15" fill="rgb(237,152,48)" fg:x="35142" fg:w="1857"/><text x="90.1686%" y="399.50">&lt;T as ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (204 samples, 0.52%)</title><rect x="94.1482%" y="373" width="0.5220%" height="15" fill="rgb(221,59,37)" fg:x="36795" fg:w="204"/><text x="94.3982%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (204 samples, 0.52%)</title><rect x="94.1482%" y="357" width="0.5220%" height="15" fill="rgb(209,202,51)" fg:x="36795" fg:w="204"/><text x="94.3982%" y="367.50"></text></g><g><title>[libc.so.6] (203 samples, 0.52%)</title><rect x="94.1508%" y="341" width="0.5194%" height="15" fill="rgb(228,81,30)" fg:x="36796" fg:w="203"/><text x="94.4008%" y="351.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="97.9556%" y="405" width="0.0128%" height="15" fill="rgb(227,42,39)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="415.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="97.9556%" y="389" width="0.0128%" height="15" fill="rgb(221,26,2)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="399.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="97.9556%" y="373" width="0.0128%" height="15" fill="rgb(254,61,31)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="383.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="97.9556%" y="357" width="0.0128%" height="15" fill="rgb(222,173,38)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="367.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="97.9556%" y="341" width="0.0128%" height="15" fill="rgb(218,50,12)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="351.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="97.9556%" y="325" width="0.0128%" height="15" fill="rgb(223,88,40)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="335.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="97.9556%" y="309" width="0.0128%" height="15" fill="rgb(237,54,19)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="319.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="97.9556%" y="293" width="0.0128%" height="15" fill="rgb(251,129,25)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="303.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="97.9556%" y="277" width="0.0128%" height="15" fill="rgb(238,97,19)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="287.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="97.9556%" y="261" width="0.0128%" height="15" fill="rgb(240,169,18)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="271.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="97.9556%" y="245" width="0.0128%" height="15" fill="rgb(230,187,49)" fg:x="38283" fg:w="5"/><text x="98.2056%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (100 samples, 0.26%)</title><rect x="98.0707%" y="373" width="0.2559%" height="15" fill="rgb(209,44,26)" fg:x="38328" fg:w="100"/><text x="98.3207%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (100 samples, 0.26%)</title><rect x="98.0707%" y="357" width="0.2559%" height="15" fill="rgb(244,0,6)" fg:x="38328" fg:w="100"/><text x="98.3207%" y="367.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_send (155 samples, 0.40%)</title><rect x="98.0119%" y="389" width="0.3966%" height="15" fill="rgb(248,18,21)" fg:x="38305" fg:w="155"/><text x="98.2619%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32 samples, 0.08%)</title><rect x="98.3266%" y="373" width="0.0819%" height="15" fill="rgb(245,180,19)" fg:x="38428" fg:w="32"/><text x="98.5766%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.08%)</title><rect x="98.3266%" y="357" width="0.0819%" height="15" fill="rgb(252,118,36)" fg:x="38428" fg:w="32"/><text x="98.5766%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.01%)</title><rect x="98.4136%" y="373" width="0.0102%" height="15" fill="rgb(210,224,19)" fg:x="38462" fg:w="4"/><text x="98.6636%" y="383.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="98.4136%" y="357" width="0.0102%" height="15" fill="rgb(218,30,24)" fg:x="38462" fg:w="4"/><text x="98.6636%" y="367.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (185 samples, 0.47%)</title><rect x="97.9684%" y="405" width="0.4734%" height="15" fill="rgb(219,75,50)" fg:x="38288" fg:w="185"/><text x="98.2184%" y="415.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::write (13 samples, 0.03%)</title><rect x="98.4085%" y="389" width="0.0333%" height="15" fill="rgb(234,72,50)" fg:x="38460" fg:w="13"/><text x="98.6585%" y="399.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (7 samples, 0.02%)</title><rect x="98.4238%" y="373" width="0.0179%" height="15" fill="rgb(219,100,48)" fg:x="38466" fg:w="7"/><text x="98.6738%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (5 samples, 0.01%)</title><rect x="98.4289%" y="357" width="0.0128%" height="15" fill="rgb(253,5,41)" fg:x="38468" fg:w="5"/><text x="98.6789%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="98.4289%" y="341" width="0.0128%" height="15" fill="rgb(247,181,11)" fg:x="38468" fg:w="5"/><text x="98.6789%" y="351.50"></text></g><g><title>benchmark::bob_main::_{{closure}} (3,332 samples, 8.53%)</title><rect x="89.9186%" y="453" width="8.5257%" height="15" fill="rgb(222,223,25)" fg:x="35142" fg:w="3332"/><text x="90.1686%" y="463.50">benchmark::b..</text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::send (1,474 samples, 3.77%)</title><rect x="94.6727%" y="437" width="3.7716%" height="15" fill="rgb(214,198,28)" fg:x="37000" fg:w="1474"/><text x="94.9227%" y="447.50">std:..</text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (1,473 samples, 3.77%)</title><rect x="94.6753%" y="421" width="3.7690%" height="15" fill="rgb(230,46,43)" fg:x="37001" fg:w="1473"/><text x="94.9253%" y="431.50">std:..</text></g><g><title>core::mem::drop (27 samples, 0.07%)</title><rect x="98.4520%" y="453" width="0.0691%" height="15" fill="rgb(233,65,53)" fg:x="38477" fg:w="27"/><text x="98.7020%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;zssp::zeta::MutableState&lt;benchmark::TestApplication&gt;&gt;&gt; (27 samples, 0.07%)</title><rect x="98.4520%" y="437" width="0.0691%" height="15" fill="rgb(221,121,27)" fg:x="38477" fg:w="27"/><text x="98.7020%" y="447.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.07%)</title><rect x="98.4520%" y="421" width="0.0691%" height="15" fill="rgb(247,70,47)" fg:x="38477" fg:w="27"/><text x="98.7020%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (27 samples, 0.07%)</title><rect x="98.4520%" y="405" width="0.0691%" height="15" fill="rgb(228,85,35)" fg:x="38477" fg:w="27"/><text x="98.7020%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (27 samples, 0.07%)</title><rect x="98.4520%" y="389" width="0.0691%" height="15" fill="rgb(209,50,18)" fg:x="38477" fg:w="27"/><text x="98.7020%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.07%)</title><rect x="98.4520%" y="373" width="0.0691%" height="15" fill="rgb(250,19,35)" fg:x="38477" fg:w="27"/><text x="98.7020%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.02%)</title><rect x="98.5211%" y="453" width="0.0179%" height="15" fill="rgb(253,107,29)" fg:x="38504" fg:w="7"/><text x="98.7711%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="98.5211%" y="437" width="0.0179%" height="15" fill="rgb(252,179,29)" fg:x="38504" fg:w="7"/><text x="98.7711%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (35 samples, 0.09%)</title><rect x="98.5492%" y="421" width="0.0896%" height="15" fill="rgb(238,194,6)" fg:x="38515" fg:w="35"/><text x="98.7992%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (35 samples, 0.09%)</title><rect x="98.5492%" y="405" width="0.0896%" height="15" fill="rgb(238,164,29)" fg:x="38515" fg:w="35"/><text x="98.7992%" y="415.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (36 samples, 0.09%)</title><rect x="98.5492%" y="453" width="0.0921%" height="15" fill="rgb(224,25,9)" fg:x="38515" fg:w="36"/><text x="98.7992%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (36 samples, 0.09%)</title><rect x="98.5492%" y="437" width="0.0921%" height="15" fill="rgb(244,153,23)" fg:x="38515" fg:w="36"/><text x="98.7992%" y="447.50"></text></g><g><title>benchmark::bob_main (18,132 samples, 46.39%)</title><rect x="52.2773%" y="501" width="46.3948%" height="15" fill="rgb(212,203,14)" fg:x="20431" fg:w="18132"/><text x="52.5273%" y="511.50">benchmark::bob_main</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::send (8,692 samples, 22.24%)</title><rect x="76.4316%" y="485" width="22.2404%" height="15" fill="rgb(220,164,20)" fg:x="29871" fg:w="8692"/><text x="76.6816%" y="495.50">zssp::zssp::Context&lt;Crypto&gt;::send</text></g><g><title>zssp::zeta::send_payload (8,691 samples, 22.24%)</title><rect x="76.4342%" y="469" width="22.2379%" height="15" fill="rgb(222,203,48)" fg:x="29872" fg:w="8691"/><text x="76.6842%" y="479.50">zssp::zeta::send_payload</text></g><g><title>zssp::zeta::get_counter (12 samples, 0.03%)</title><rect x="98.6413%" y="453" width="0.0307%" height="15" fill="rgb(215,159,22)" fg:x="38551" fg:w="12"/><text x="98.8913%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (11 samples, 0.03%)</title><rect x="98.6439%" y="437" width="0.0281%" height="15" fill="rgb(216,183,47)" fg:x="38552" fg:w="11"/><text x="98.8939%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.03%)</title><rect x="98.6439%" y="421" width="0.0281%" height="15" fill="rgb(229,195,25)" fg:x="38552" fg:w="11"/><text x="98.8939%" y="431.50"></text></g><g><title>cfree (19 samples, 0.05%)</title><rect x="98.6720%" y="501" width="0.0486%" height="15" fill="rgb(224,132,51)" fg:x="38563" fg:w="19"/><text x="98.9220%" y="511.50"></text></g><g><title>clock_gettime (12 samples, 0.03%)</title><rect x="98.7206%" y="501" width="0.0307%" height="15" fill="rgb(240,63,7)" fg:x="38582" fg:w="12"/><text x="98.9706%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.05%)</title><rect x="98.7513%" y="501" width="0.0512%" height="15" fill="rgb(249,182,41)" fg:x="38594" fg:w="20"/><text x="99.0013%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.03%)</title><rect x="98.7718%" y="485" width="0.0307%" height="15" fill="rgb(243,47,26)" fg:x="38602" fg:w="12"/><text x="99.0218%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::fragged::Fragged&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="98.8025%" y="501" width="0.0102%" height="15" fill="rgb(233,48,2)" fg:x="38614" fg:w="4"/><text x="99.0525%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (7 samples, 0.02%)</title><rect x="98.8128%" y="501" width="0.0179%" height="15" fill="rgb(244,165,34)" fg:x="38618" fg:w="7"/><text x="99.0628%" y="511.50"></text></g><g><title>pthread_rwlock_rdlock (21 samples, 0.05%)</title><rect x="98.8383%" y="501" width="0.0537%" height="15" fill="rgb(207,89,7)" fg:x="38628" fg:w="21"/><text x="99.0883%" y="511.50"></text></g><g><title>pthread_rwlock_unlock (15 samples, 0.04%)</title><rect x="98.8921%" y="501" width="0.0384%" height="15" fill="rgb(244,117,36)" fg:x="38649" fg:w="15"/><text x="99.1421%" y="511.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv_timeout (12 samples, 0.03%)</title><rect x="98.9305%" y="501" width="0.0307%" height="15" fill="rgb(226,144,34)" fg:x="38664" fg:w="12"/><text x="99.1805%" y="511.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (15 samples, 0.04%)</title><rect x="98.9612%" y="501" width="0.0384%" height="15" fill="rgb(213,23,19)" fg:x="38676" fg:w="15"/><text x="99.2112%" y="511.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (7 samples, 0.02%)</title><rect x="99.0354%" y="485" width="0.0179%" height="15" fill="rgb(217,75,12)" fg:x="38705" fg:w="7"/><text x="99.2854%" y="495.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (24 samples, 0.06%)</title><rect x="98.9995%" y="501" width="0.0614%" height="15" fill="rgb(224,159,17)" fg:x="38691" fg:w="24"/><text x="99.2495%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (11 samples, 0.03%)</title><rect x="99.0609%" y="501" width="0.0281%" height="15" fill="rgb(217,118,1)" fg:x="38715" fg:w="11"/><text x="99.3109%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (12 samples, 0.03%)</title><rect x="99.0891%" y="501" width="0.0307%" height="15" fill="rgb(232,180,48)" fg:x="38726" fg:w="12"/><text x="99.3391%" y="511.50"></text></g><g><title>std::sync::mpmc::utils::Backoff::new (9 samples, 0.02%)</title><rect x="99.1198%" y="501" width="0.0230%" height="15" fill="rgb(230,27,33)" fg:x="38738" fg:w="9"/><text x="99.3698%" y="511.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (19 samples, 0.05%)</title><rect x="99.1428%" y="501" width="0.0486%" height="15" fill="rgb(205,31,21)" fg:x="38747" fg:w="19"/><text x="99.3928%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.01%)</title><rect x="99.1812%" y="485" width="0.0102%" height="15" fill="rgb(253,59,4)" fg:x="38762" fg:w="4"/><text x="99.4312%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="99.1812%" y="469" width="0.0102%" height="15" fill="rgb(224,201,9)" fg:x="38762" fg:w="4"/><text x="99.4312%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.02%)</title><rect x="99.1914%" y="501" width="0.0154%" height="15" fill="rgb(229,206,30)" fg:x="38766" fg:w="6"/><text x="99.4414%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (6 samples, 0.02%)</title><rect x="99.2094%" y="501" width="0.0154%" height="15" fill="rgb(212,67,47)" fg:x="38773" fg:w="6"/><text x="99.4594%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (15 samples, 0.04%)</title><rect x="99.2247%" y="501" width="0.0384%" height="15" fill="rgb(211,96,50)" fg:x="38779" fg:w="15"/><text x="99.4747%" y="511.50"></text></g><g><title>std::time::SystemTime::checked_add (5 samples, 0.01%)</title><rect x="99.2631%" y="501" width="0.0128%" height="15" fill="rgb(252,114,18)" fg:x="38794" fg:w="5"/><text x="99.5131%" y="511.50"></text></g><g><title>zssp::fragged::Fragged&lt;Fragment,_&gt;::assemble (21 samples, 0.05%)</title><rect x="99.2810%" y="501" width="0.0537%" height="15" fill="rgb(223,58,37)" fg:x="38801" fg:w="21"/><text x="99.5310%" y="511.50"></text></g><g><title>zssp::zeta::from_nonce (5 samples, 0.01%)</title><rect x="99.3347%" y="501" width="0.0128%" height="15" fill="rgb(237,70,4)" fg:x="38822" fg:w="5"/><text x="99.5847%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.04%)</title><rect x="99.4038%" y="405" width="0.0358%" height="15" fill="rgb(244,85,46)" fg:x="38849" fg:w="14"/><text x="99.6538%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.04%)</title><rect x="99.4038%" y="389" width="0.0358%" height="15" fill="rgb(223,39,52)" fg:x="38849" fg:w="14"/><text x="99.6538%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.04%)</title><rect x="99.4038%" y="373" width="0.0358%" height="15" fill="rgb(218,200,14)" fg:x="38849" fg:w="14"/><text x="99.6538%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.04%)</title><rect x="99.4038%" y="357" width="0.0358%" height="15" fill="rgb(208,171,16)" fg:x="38849" fg:w="14"/><text x="99.6538%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.04%)</title><rect x="99.4038%" y="341" width="0.0358%" height="15" fill="rgb(234,200,18)" fg:x="38849" fg:w="14"/><text x="99.6538%" y="351.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.04%)</title><rect x="99.4038%" y="325" width="0.0358%" height="15" fill="rgb(228,45,11)" fg:x="38849" fg:w="14"/><text x="99.6538%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (20 samples, 0.05%)</title><rect x="99.4038%" y="469" width="0.0512%" height="15" fill="rgb(237,182,11)" fg:x="38849" fg:w="20"/><text x="99.6538%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.05%)</title><rect x="99.4038%" y="453" width="0.0512%" height="15" fill="rgb(241,175,49)" fg:x="38849" fg:w="20"/><text x="99.6538%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.05%)</title><rect x="99.4038%" y="437" width="0.0512%" height="15" fill="rgb(247,38,35)" fg:x="38849" fg:w="20"/><text x="99.6538%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.05%)</title><rect x="99.4038%" y="421" width="0.0512%" height="15" fill="rgb(228,39,49)" fg:x="38849" fg:w="20"/><text x="99.6538%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.02%)</title><rect x="99.4396%" y="405" width="0.0154%" height="15" fill="rgb(226,101,26)" fg:x="38863" fg:w="6"/><text x="99.6896%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="99.4396%" y="389" width="0.0154%" height="15" fill="rgb(206,141,19)" fg:x="38863" fg:w="6"/><text x="99.6896%" y="399.50"></text></g><g><title>zssp::zeta::send_payload (50 samples, 0.13%)</title><rect x="99.3501%" y="501" width="0.1279%" height="15" fill="rgb(211,200,13)" fg:x="38828" fg:w="50"/><text x="99.6001%" y="511.50"></text></g><g><title>benchmark::bob_main::_{{closure}} (29 samples, 0.07%)</title><rect x="99.4038%" y="485" width="0.0742%" height="15" fill="rgb(241,121,6)" fg:x="38849" fg:w="29"/><text x="99.6538%" y="495.50"></text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::send (9 samples, 0.02%)</title><rect x="99.4550%" y="469" width="0.0230%" height="15" fill="rgb(234,221,29)" fg:x="38869" fg:w="9"/><text x="99.7050%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt; (7 samples, 0.02%)</title><rect x="99.5906%" y="485" width="0.0179%" height="15" fill="rgb(229,136,5)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="495.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="99.5906%" y="469" width="0.0179%" height="15" fill="rgb(238,36,11)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="479.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (7 samples, 0.02%)</title><rect x="99.5906%" y="453" width="0.0179%" height="15" fill="rgb(251,55,41)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="463.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (7 samples, 0.02%)</title><rect x="99.5906%" y="437" width="0.0179%" height="15" fill="rgb(242,34,40)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="447.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (7 samples, 0.02%)</title><rect x="99.5906%" y="421" width="0.0179%" height="15" fill="rgb(215,42,17)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (7 samples, 0.02%)</title><rect x="99.5906%" y="405" width="0.0179%" height="15" fill="rgb(207,44,46)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.02%)</title><rect x="99.5906%" y="389" width="0.0179%" height="15" fill="rgb(211,206,28)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.02%)</title><rect x="99.5906%" y="373" width="0.0179%" height="15" fill="rgb(237,167,16)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="99.5906%" y="357" width="0.0179%" height="15" fill="rgb(233,66,6)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="99.5906%" y="341" width="0.0179%" height="15" fill="rgb(246,123,29)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="99.5906%" y="325" width="0.0179%" height="15" fill="rgb(209,62,40)" fg:x="38922" fg:w="7"/><text x="99.8406%" y="335.50"></text></g><g><title>cfree (5 samples, 0.01%)</title><rect x="99.5957%" y="309" width="0.0128%" height="15" fill="rgb(218,4,25)" fg:x="38924" fg:w="5"/><text x="99.8457%" y="319.50"></text></g><g><title>__lll_lock_wake_private (5 samples, 0.01%)</title><rect x="99.5957%" y="293" width="0.0128%" height="15" fill="rgb(253,91,49)" fg:x="38924" fg:w="5"/><text x="99.8457%" y="303.50"></text></g><g><title>__entry_text_start (5 samples, 0.01%)</title><rect x="99.5957%" y="277" width="0.0128%" height="15" fill="rgb(228,155,29)" fg:x="38924" fg:w="5"/><text x="99.8457%" y="287.50"></text></g><g><title>getrandom::imp::getrandom_inner (5 samples, 0.01%)</title><rect x="99.6085%" y="485" width="0.0128%" height="15" fill="rgb(243,57,37)" fg:x="38929" fg:w="5"/><text x="99.8585%" y="495.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (70 samples, 0.18%)</title><rect x="99.4780%" y="501" width="0.1791%" height="15" fill="rgb(244,167,17)" fg:x="38878" fg:w="70"/><text x="99.7280%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (13 samples, 0.03%)</title><rect x="99.6239%" y="485" width="0.0333%" height="15" fill="rgb(207,181,38)" fg:x="38935" fg:w="13"/><text x="99.8739%" y="495.50"></text></g><g><title>[unknown] (37,550 samples, 96.08%)</title><rect x="3.5873%" y="517" width="96.0800%" height="15" fill="rgb(211,8,23)" fg:x="1402" fg:w="37550"/><text x="3.8373%" y="527.50">[unknown]</text></g><g><title>zssp::zssp::parse_fragment_header (4 samples, 0.01%)</title><rect x="99.6571%" y="501" width="0.0102%" height="15" fill="rgb(235,11,44)" fg:x="38948" fg:w="4"/><text x="99.9071%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (31 samples, 0.08%)</title><rect x="99.6674%" y="501" width="0.0793%" height="15" fill="rgb(248,18,52)" fg:x="38952" fg:w="31"/><text x="99.9174%" y="511.50"></text></g><g><title>__bss_start (36 samples, 0.09%)</title><rect x="99.6674%" y="517" width="0.0921%" height="15" fill="rgb(208,4,7)" fg:x="38952" fg:w="36"/><text x="99.9174%" y="527.50"></text></g><g><title>[libcrypto.so.3] (5 samples, 0.01%)</title><rect x="99.7467%" y="501" width="0.0128%" height="15" fill="rgb(240,17,39)" fg:x="38983" fg:w="5"/><text x="99.9967%" y="511.50"></text></g><g><title>_raw_spin_unlock (4 samples, 0.01%)</title><rect x="99.7799%" y="293" width="0.0102%" height="15" fill="rgb(207,170,3)" fg:x="38996" fg:w="4"/><text x="100.0299%" y="303.50"></text></g><g><title>preempt_schedule_thunk (4 samples, 0.01%)</title><rect x="99.7799%" y="277" width="0.0102%" height="15" fill="rgb(236,100,52)" fg:x="38996" fg:w="4"/><text x="100.0299%" y="287.50"></text></g><g><title>preempt_schedule (4 samples, 0.01%)</title><rect x="99.7799%" y="261" width="0.0102%" height="15" fill="rgb(246,78,51)" fg:x="38996" fg:w="4"/><text x="100.0299%" y="271.50"></text></g><g><title>__schedule (4 samples, 0.01%)</title><rect x="99.7799%" y="245" width="0.0102%" height="15" fill="rgb(211,17,15)" fg:x="38996" fg:w="4"/><text x="100.0299%" y="255.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.01%)</title><rect x="99.7799%" y="229" width="0.0102%" height="15" fill="rgb(209,59,46)" fg:x="38996" fg:w="4"/><text x="100.0299%" y="239.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="99.7799%" y="213" width="0.0102%" height="15" fill="rgb(210,92,25)" fg:x="38996" fg:w="4"/><text x="100.0299%" y="223.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.01%)</title><rect x="99.7799%" y="197" width="0.0102%" height="15" fill="rgb(238,174,52)" fg:x="38996" fg:w="4"/><text x="100.0299%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="99.7697%" y="517" width="0.0230%" height="15" fill="rgb(230,73,7)" fg:x="38992" fg:w="9"/><text x="100.0197%" y="527.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="99.7748%" y="501" width="0.0179%" height="15" fill="rgb(243,124,40)" fg:x="38994" fg:w="7"/><text x="100.0248%" y="511.50"></text></g><g><title>__x64_sys_exit_group (6 samples, 0.02%)</title><rect x="99.7774%" y="485" width="0.0154%" height="15" fill="rgb(244,170,11)" fg:x="38995" fg:w="6"/><text x="100.0274%" y="495.50"></text></g><g><title>do_group_exit (6 samples, 0.02%)</title><rect x="99.7774%" y="469" width="0.0154%" height="15" fill="rgb(207,114,54)" fg:x="38995" fg:w="6"/><text x="100.0274%" y="479.50"></text></g><g><title>do_exit (6 samples, 0.02%)</title><rect x="99.7774%" y="453" width="0.0154%" height="15" fill="rgb(205,42,20)" fg:x="38995" fg:w="6"/><text x="100.0274%" y="463.50"></text></g><g><title>exit_mm (6 samples, 0.02%)</title><rect x="99.7774%" y="437" width="0.0154%" height="15" fill="rgb(230,30,28)" fg:x="38995" fg:w="6"/><text x="100.0274%" y="447.50"></text></g><g><title>mmput (6 samples, 0.02%)</title><rect x="99.7774%" y="421" width="0.0154%" height="15" fill="rgb(205,73,54)" fg:x="38995" fg:w="6"/><text x="100.0274%" y="431.50"></text></g><g><title>__mmput (6 samples, 0.02%)</title><rect x="99.7774%" y="405" width="0.0154%" height="15" fill="rgb(254,227,23)" fg:x="38995" fg:w="6"/><text x="100.0274%" y="415.50"></text></g><g><title>exit_mmap (6 samples, 0.02%)</title><rect x="99.7774%" y="389" width="0.0154%" height="15" fill="rgb(228,202,34)" fg:x="38995" fg:w="6"/><text x="100.0274%" y="399.50"></text></g><g><title>unmap_vmas (5 samples, 0.01%)</title><rect x="99.7799%" y="373" width="0.0128%" height="15" fill="rgb(222,225,37)" fg:x="38996" fg:w="5"/><text x="100.0299%" y="383.50"></text></g><g><title>unmap_single_vma (5 samples, 0.01%)</title><rect x="99.7799%" y="357" width="0.0128%" height="15" fill="rgb(221,14,54)" fg:x="38996" fg:w="5"/><text x="100.0299%" y="367.50"></text></g><g><title>unmap_page_range (5 samples, 0.01%)</title><rect x="99.7799%" y="341" width="0.0128%" height="15" fill="rgb(254,102,2)" fg:x="38996" fg:w="5"/><text x="100.0299%" y="351.50"></text></g><g><title>zap_pmd_range.isra.0 (5 samples, 0.01%)</title><rect x="99.7799%" y="325" width="0.0128%" height="15" fill="rgb(232,104,17)" fg:x="38996" fg:w="5"/><text x="100.0299%" y="335.50"></text></g><g><title>zap_pte_range (5 samples, 0.01%)</title><rect x="99.7799%" y="309" width="0.0128%" height="15" fill="rgb(250,220,14)" fg:x="38996" fg:w="5"/><text x="100.0299%" y="319.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (15 samples, 0.04%)</title><rect x="99.7927%" y="517" width="0.0384%" height="15" fill="rgb(241,158,9)" fg:x="39001" fg:w="15"/><text x="100.0427%" y="527.50"></text></g><g><title>ret_from_fork (10 samples, 0.03%)</title><rect x="99.8311%" y="517" width="0.0256%" height="15" fill="rgb(246,9,43)" fg:x="39016" fg:w="10"/><text x="100.0811%" y="527.50"></text></g><g><title>schedule_tail (10 samples, 0.03%)</title><rect x="99.8311%" y="501" width="0.0256%" height="15" fill="rgb(206,73,33)" fg:x="39016" fg:w="10"/><text x="100.0811%" y="511.50"></text></g><g><title>finish_task_switch.isra.0 (10 samples, 0.03%)</title><rect x="99.8311%" y="485" width="0.0256%" height="15" fill="rgb(222,79,8)" fg:x="39016" fg:w="10"/><text x="100.0811%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.03%)</title><rect x="99.8311%" y="469" width="0.0256%" height="15" fill="rgb(234,8,54)" fg:x="39016" fg:w="10"/><text x="100.0811%" y="479.50"></text></g><g><title>perf_ctx_enable (10 samples, 0.03%)</title><rect x="99.8311%" y="453" width="0.0256%" height="15" fill="rgb(209,134,38)" fg:x="39016" fg:w="10"/><text x="100.0811%" y="463.50"></text></g><g><title>syscall_return_via_sysret (9 samples, 0.02%)</title><rect x="99.8593%" y="517" width="0.0230%" height="15" fill="rgb(230,127,29)" fg:x="39027" fg:w="9"/><text x="100.1093%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt; (5 samples, 0.01%)</title><rect x="99.9693%" y="501" width="0.0128%" height="15" fill="rgb(242,44,41)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="511.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="99.9693%" y="485" width="0.0128%" height="15" fill="rgb(222,56,43)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="495.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (5 samples, 0.01%)</title><rect x="99.9693%" y="469" width="0.0128%" height="15" fill="rgb(238,39,47)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="479.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (5 samples, 0.01%)</title><rect x="99.9693%" y="453" width="0.0128%" height="15" fill="rgb(226,79,43)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="463.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (5 samples, 0.01%)</title><rect x="99.9693%" y="437" width="0.0128%" height="15" fill="rgb(242,105,53)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (5 samples, 0.01%)</title><rect x="99.9693%" y="421" width="0.0128%" height="15" fill="rgb(251,132,46)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="99.9693%" y="405" width="0.0128%" height="15" fill="rgb(231,77,14)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="99.9693%" y="389" width="0.0128%" height="15" fill="rgb(240,135,9)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="99.9693%" y="373" width="0.0128%" height="15" fill="rgb(248,109,14)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="99.9693%" y="357" width="0.0128%" height="15" fill="rgb(227,146,52)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="99.9693%" y="341" width="0.0128%" height="15" fill="rgb(232,54,3)" fg:x="39070" fg:w="5"/><text x="100.2193%" y="351.50"></text></g><g><title>benchmark (39,077 samples, 99.99%)</title><rect x="0.0000%" y="533" width="99.9872%" height="15" fill="rgb(229,201,43)" fg:x="0" fg:w="39077"/><text x="0.2500%" y="543.50">benchmark</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (41 samples, 0.10%)</title><rect x="99.8823%" y="517" width="0.1049%" height="15" fill="rgb(252,161,33)" fg:x="39036" fg:w="41"/><text x="100.1323%" y="527.50"></text></g><g><title>perf_event_exec (4 samples, 0.01%)</title><rect x="99.9872%" y="357" width="0.0102%" height="15" fill="rgb(226,146,40)" fg:x="39077" fg:w="4"/><text x="100.2372%" y="367.50"></text></g><g><title>perf_event_enable_on_exec (4 samples, 0.01%)</title><rect x="99.9872%" y="341" width="0.0102%" height="15" fill="rgb(219,47,25)" fg:x="39077" fg:w="4"/><text x="100.2372%" y="351.50"></text></g><g><title>ctx_resched (4 samples, 0.01%)</title><rect x="99.9872%" y="325" width="0.0102%" height="15" fill="rgb(250,135,13)" fg:x="39077" fg:w="4"/><text x="100.2372%" y="335.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.01%)</title><rect x="99.9872%" y="309" width="0.0102%" height="15" fill="rgb(219,229,18)" fg:x="39077" fg:w="4"/><text x="100.2372%" y="319.50"></text></g><g><title>all (39,082 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(217,152,27)" fg:x="0" fg:w="39082"/><text x="0.2500%" y="559.50"></text></g><g><title>perf-exec (5 samples, 0.01%)</title><rect x="99.9872%" y="533" width="0.0128%" height="15" fill="rgb(225,71,47)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="99.9872%" y="517" width="0.0128%" height="15" fill="rgb(220,139,14)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="527.50"></text></g><g><title>do_syscall_64 (5 samples, 0.01%)</title><rect x="99.9872%" y="501" width="0.0128%" height="15" fill="rgb(247,54,32)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="511.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.01%)</title><rect x="99.9872%" y="485" width="0.0128%" height="15" fill="rgb(252,131,39)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="495.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.01%)</title><rect x="99.9872%" y="469" width="0.0128%" height="15" fill="rgb(210,108,39)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="479.50"></text></g><g><title>bprm_execve (5 samples, 0.01%)</title><rect x="99.9872%" y="453" width="0.0128%" height="15" fill="rgb(205,23,29)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="463.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.01%)</title><rect x="99.9872%" y="437" width="0.0128%" height="15" fill="rgb(246,139,46)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="447.50"></text></g><g><title>exec_binprm (5 samples, 0.01%)</title><rect x="99.9872%" y="421" width="0.0128%" height="15" fill="rgb(250,81,26)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="431.50"></text></g><g><title>search_binary_handler (5 samples, 0.01%)</title><rect x="99.9872%" y="405" width="0.0128%" height="15" fill="rgb(214,104,7)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="415.50"></text></g><g><title>load_elf_binary (5 samples, 0.01%)</title><rect x="99.9872%" y="389" width="0.0128%" height="15" fill="rgb(233,189,8)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="399.50"></text></g><g><title>begin_new_exec (5 samples, 0.01%)</title><rect x="99.9872%" y="373" width="0.0128%" height="15" fill="rgb(228,141,17)" fg:x="39077" fg:w="5"/><text x="100.2372%" y="383.50"></text></g></svg></svg>