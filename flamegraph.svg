<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="38833"><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (13 samples, 0.03%)</title><rect x="0.0129%" y="501" width="0.0335%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="13"/><text x="0.2629%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (7 samples, 0.02%)</title><rect x="0.0283%" y="485" width="0.0180%" height="15" fill="rgb(217,0,24)" fg:x="11" fg:w="7"/><text x="0.2783%" y="495.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLEnc as zssp::crypto::aes::Aes256Enc&gt;::encrypt_in_place (28 samples, 0.07%)</title><rect x="0.0464%" y="501" width="0.0721%" height="15" fill="rgb(221,193,54)" fg:x="18" fg:w="28"/><text x="0.2964%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (4 samples, 0.01%)</title><rect x="0.1082%" y="485" width="0.0103%" height="15" fill="rgb(248,212,6)" fg:x="42" fg:w="4"/><text x="0.3582%" y="495.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::decrypt_in_place (68 samples, 0.18%)</title><rect x="0.1185%" y="501" width="0.1751%" height="15" fill="rgb(208,68,35)" fg:x="46" fg:w="68"/><text x="0.3685%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (4 samples, 0.01%)</title><rect x="0.2936%" y="485" width="0.0103%" height="15" fill="rgb(232,128,0)" fg:x="114" fg:w="4"/><text x="0.5436%" y="495.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::finish (6 samples, 0.02%)</title><rect x="0.2936%" y="501" width="0.0155%" height="15" fill="rgb(207,160,47)" fg:x="114" fg:w="6"/><text x="0.5436%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::encrypt (102 samples, 0.26%)</title><rect x="0.3090%" y="501" width="0.2627%" height="15" fill="rgb(228,23,34)" fg:x="120" fg:w="102"/><text x="0.5590%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_dec (4 samples, 0.01%)</title><rect x="0.5768%" y="501" width="0.0103%" height="15" fill="rgb(218,30,26)" fg:x="224" fg:w="4"/><text x="0.8268%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_enc (5 samples, 0.01%)</title><rect x="0.5871%" y="501" width="0.0129%" height="15" fill="rgb(220,122,19)" fg:x="228" fg:w="5"/><text x="0.8371%" y="511.50"></text></g><g><title>CRYPTO_gcm128_decrypt (8 samples, 0.02%)</title><rect x="0.6000%" y="501" width="0.0206%" height="15" fill="rgb(250,228,42)" fg:x="233" fg:w="8"/><text x="0.8500%" y="511.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (22 samples, 0.06%)</title><rect x="0.6206%" y="501" width="0.0567%" height="15" fill="rgb(240,193,28)" fg:x="241" fg:w="22"/><text x="0.8706%" y="511.50"></text></g><g><title>CRYPTO_gcm128_encrypt (17 samples, 0.04%)</title><rect x="0.6773%" y="501" width="0.0438%" height="15" fill="rgb(216,20,37)" fg:x="263" fg:w="17"/><text x="0.9273%" y="511.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (15 samples, 0.04%)</title><rect x="0.7210%" y="501" width="0.0386%" height="15" fill="rgb(206,188,39)" fg:x="280" fg:w="15"/><text x="0.9710%" y="511.50"></text></g><g><title>CRYPTO_gcm128_finish (7 samples, 0.02%)</title><rect x="0.7597%" y="501" width="0.0180%" height="15" fill="rgb(217,207,13)" fg:x="295" fg:w="7"/><text x="1.0097%" y="511.50"></text></g><g><title>CRYPTO_gcm128_tag (4 samples, 0.01%)</title><rect x="0.7777%" y="501" width="0.0103%" height="15" fill="rgb(231,73,38)" fg:x="302" fg:w="4"/><text x="1.0277%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (9 samples, 0.02%)</title><rect x="0.7880%" y="501" width="0.0232%" height="15" fill="rgb(225,20,46)" fg:x="306" fg:w="9"/><text x="1.0380%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (14 samples, 0.04%)</title><rect x="0.8163%" y="501" width="0.0361%" height="15" fill="rgb(210,31,41)" fg:x="317" fg:w="14"/><text x="1.0663%" y="511.50"></text></g><g><title>EVP_CIPHER_get_block_size (12 samples, 0.03%)</title><rect x="0.8601%" y="501" width="0.0309%" height="15" fill="rgb(221,200,47)" fg:x="334" fg:w="12"/><text x="1.1101%" y="511.50"></text></g><g><title>EVP_CipherInit_ex (9 samples, 0.02%)</title><rect x="0.9064%" y="501" width="0.0232%" height="15" fill="rgb(226,26,5)" fg:x="352" fg:w="9"/><text x="1.1564%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (13 samples, 0.03%)</title><rect x="0.9296%" y="501" width="0.0335%" height="15" fill="rgb(249,33,26)" fg:x="361" fg:w="13"/><text x="1.1796%" y="511.50"></text></g><g><title>EVP_EncryptFinal_ex (5 samples, 0.01%)</title><rect x="0.9631%" y="501" width="0.0129%" height="15" fill="rgb(235,183,28)" fg:x="374" fg:w="5"/><text x="1.2131%" y="511.50"></text></g><g><title>OSSL_PARAM_locate (103 samples, 0.27%)</title><rect x="0.9914%" y="501" width="0.2652%" height="15" fill="rgb(221,5,38)" fg:x="385" fg:w="103"/><text x="1.2414%" y="511.50"></text></g><g><title>[benchmark] (6 samples, 0.02%)</title><rect x="1.2695%" y="501" width="0.0155%" height="15" fill="rgb(247,18,42)" fg:x="493" fg:w="6"/><text x="1.5195%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (6 samples, 0.02%)</title><rect x="1.2695%" y="485" width="0.0155%" height="15" fill="rgb(241,131,45)" fg:x="493" fg:w="6"/><text x="1.5195%" y="495.50"></text></g><g><title>[libc.so.6] (82 samples, 0.21%)</title><rect x="1.2850%" y="501" width="0.2112%" height="15" fill="rgb(249,31,29)" fg:x="499" fg:w="82"/><text x="1.5350%" y="511.50"></text></g><g><title>[libcrypto.so.3] (124 samples, 0.32%)</title><rect x="1.4962%" y="501" width="0.3193%" height="15" fill="rgb(225,111,53)" fg:x="581" fg:w="124"/><text x="1.7462%" y="511.50"></text></g><g><title>__lll_lock_wake_private (4 samples, 0.01%)</title><rect x="1.8206%" y="501" width="0.0103%" height="15" fill="rgb(238,160,17)" fg:x="707" fg:w="4"/><text x="2.0706%" y="511.50"></text></g><g><title>malloc (13 samples, 0.03%)</title><rect x="1.8464%" y="501" width="0.0335%" height="15" fill="rgb(214,148,48)" fg:x="717" fg:w="13"/><text x="2.0964%" y="511.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (5 samples, 0.01%)</title><rect x="1.8850%" y="501" width="0.0129%" height="15" fill="rgb(232,36,49)" fg:x="732" fg:w="5"/><text x="2.1350%" y="511.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (8 samples, 0.02%)</title><rect x="1.9597%" y="485" width="0.0206%" height="15" fill="rgb(209,103,24)" fg:x="761" fg:w="8"/><text x="2.2097%" y="495.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_send (14 samples, 0.04%)</title><rect x="1.9803%" y="485" width="0.0361%" height="15" fill="rgb(229,88,8)" fg:x="769" fg:w="14"/><text x="2.2303%" y="495.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (53 samples, 0.14%)</title><rect x="1.9056%" y="501" width="0.1365%" height="15" fill="rgb(213,181,19)" fg:x="740" fg:w="53"/><text x="2.1556%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::write (10 samples, 0.03%)</title><rect x="2.0163%" y="485" width="0.0258%" height="15" fill="rgb(254,191,54)" fg:x="783" fg:w="10"/><text x="2.2663%" y="495.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (8 samples, 0.02%)</title><rect x="2.0421%" y="501" width="0.0206%" height="15" fill="rgb(241,83,37)" fg:x="793" fg:w="8"/><text x="2.2921%" y="511.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="2.0910%" y="485" width="0.0129%" height="15" fill="rgb(233,36,39)" fg:x="812" fg:w="5"/><text x="2.3410%" y="495.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::try_recv (24 samples, 0.06%)</title><rect x="2.0627%" y="501" width="0.0618%" height="15" fill="rgb(226,3,54)" fg:x="801" fg:w="24"/><text x="2.3127%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::read (8 samples, 0.02%)</title><rect x="2.1039%" y="485" width="0.0206%" height="15" fill="rgb(245,192,40)" fg:x="817" fg:w="8"/><text x="2.3539%" y="495.50"></text></g><g><title>std::sync::mpmc::utils::Backoff::new (9 samples, 0.02%)</title><rect x="2.1245%" y="501" width="0.0232%" height="15" fill="rgb(238,167,29)" fg:x="825" fg:w="9"/><text x="2.3745%" y="511.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (13 samples, 0.03%)</title><rect x="2.1477%" y="501" width="0.0335%" height="15" fill="rgb(232,182,51)" fg:x="834" fg:w="13"/><text x="2.3977%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (8 samples, 0.02%)</title><rect x="2.1605%" y="485" width="0.0206%" height="15" fill="rgb(231,60,39)" fg:x="839" fg:w="8"/><text x="2.4105%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="2.1605%" y="469" width="0.0206%" height="15" fill="rgb(208,69,12)" fg:x="839" fg:w="8"/><text x="2.4105%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.02%)</title><rect x="2.1811%" y="501" width="0.0180%" height="15" fill="rgb(235,93,37)" fg:x="847" fg:w="7"/><text x="2.4311%" y="511.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4 samples, 0.01%)</title><rect x="2.2429%" y="485" width="0.0103%" height="15" fill="rgb(213,116,39)" fg:x="871" fg:w="4"/><text x="2.4929%" y="495.50"></text></g><g><title>std::time::Instant::duration_since (4 samples, 0.01%)</title><rect x="2.2429%" y="469" width="0.0103%" height="15" fill="rgb(222,207,29)" fg:x="871" fg:w="4"/><text x="2.4929%" y="479.50"></text></g><g><title>std::time::Instant::checked_duration_since (4 samples, 0.01%)</title><rect x="2.2429%" y="453" width="0.0103%" height="15" fill="rgb(206,96,30)" fg:x="871" fg:w="4"/><text x="2.4929%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (4 samples, 0.01%)</title><rect x="2.2429%" y="437" width="0.0103%" height="15" fill="rgb(218,138,4)" fg:x="871" fg:w="4"/><text x="2.4929%" y="447.50"></text></g><g><title>std::time::Instant::elapsed (21 samples, 0.05%)</title><rect x="2.2017%" y="501" width="0.0541%" height="15" fill="rgb(250,191,14)" fg:x="855" fg:w="21"/><text x="2.4517%" y="511.50"></text></g><g><title>syscall (12 samples, 0.03%)</title><rect x="2.2558%" y="501" width="0.0309%" height="15" fill="rgb(239,60,40)" fg:x="876" fg:w="12"/><text x="2.5058%" y="511.50"></text></g><g><title>__entry_text_start (10 samples, 0.03%)</title><rect x="2.2610%" y="485" width="0.0258%" height="15" fill="rgb(206,27,48)" fg:x="878" fg:w="10"/><text x="2.5110%" y="495.50"></text></g><g><title>[anon] (912 samples, 2.35%)</title><rect x="0.0052%" y="517" width="2.3485%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="912"/><text x="0.2552%" y="527.50">[..</text></g><g><title>zssp::zeta::receive_payload_in_place (23 samples, 0.06%)</title><rect x="2.2944%" y="501" width="0.0592%" height="15" fill="rgb(250,213,24)" fg:x="891" fg:w="23"/><text x="2.5444%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (5 samples, 0.01%)</title><rect x="2.3408%" y="485" width="0.0129%" height="15" fill="rgb(247,123,22)" fg:x="909" fg:w="5"/><text x="2.5908%" y="495.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;u8,_&gt; as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="2.3408%" y="469" width="0.0129%" height="15" fill="rgb(231,138,38)" fg:x="909" fg:w="5"/><text x="2.5908%" y="479.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::try_extend_from_slice (5 samples, 0.01%)</title><rect x="2.3408%" y="453" width="0.0129%" height="15" fill="rgb(231,145,46)" fg:x="909" fg:w="5"/><text x="2.5908%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="2.3408%" y="437" width="0.0129%" height="15" fill="rgb(251,118,11)" fg:x="909" fg:w="5"/><text x="2.5908%" y="447.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="2.3537%" y="501" width="0.0155%" height="15" fill="rgb(217,147,25)" fg:x="914" fg:w="6"/><text x="2.6037%" y="511.50"></text></g><g><title>__rust_probestack (5 samples, 0.01%)</title><rect x="2.3691%" y="501" width="0.0129%" height="15" fill="rgb(247,81,37)" fg:x="920" fg:w="5"/><text x="2.6191%" y="511.50"></text></g><g><title>[benchmark] (38 samples, 0.10%)</title><rect x="2.3537%" y="517" width="0.0979%" height="15" fill="rgb(209,12,38)" fg:x="914" fg:w="38"/><text x="2.6037%" y="527.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (22 samples, 0.06%)</title><rect x="2.3949%" y="501" width="0.0567%" height="15" fill="rgb(227,1,9)" fg:x="930" fg:w="22"/><text x="2.6449%" y="511.50"></text></g><g><title>CRYPTO_gcm128_finish (11 samples, 0.03%)</title><rect x="2.4824%" y="501" width="0.0283%" height="15" fill="rgb(248,47,43)" fg:x="964" fg:w="11"/><text x="2.7324%" y="511.50"></text></g><g><title>[libcrypto.so.3] (93 samples, 0.24%)</title><rect x="2.5185%" y="501" width="0.2395%" height="15" fill="rgb(221,10,30)" fg:x="978" fg:w="93"/><text x="2.7685%" y="511.50"></text></g><g><title>std::sync::mpmc::utils::Backoff::new (5 samples, 0.01%)</title><rect x="2.7580%" y="501" width="0.0129%" height="15" fill="rgb(210,229,1)" fg:x="1071" fg:w="5"/><text x="3.0080%" y="511.50"></text></g><g><title>[libcrypto.so.3] (123 samples, 0.32%)</title><rect x="2.4567%" y="517" width="0.3167%" height="15" fill="rgb(222,148,37)" fg:x="954" fg:w="123"/><text x="2.7067%" y="527.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::hash::Hash&gt;::hash (20 samples, 0.05%)</title><rect x="2.7734%" y="501" width="0.0515%" height="15" fill="rgb(234,67,33)" fg:x="1077" fg:w="20"/><text x="3.0234%" y="511.50"></text></g><g><title>&lt;std::sync::mpmc::zero::ZeroToken as core::default::Default&gt;::default (7 samples, 0.02%)</title><rect x="2.8249%" y="501" width="0.0180%" height="15" fill="rgb(247,98,35)" fg:x="1097" fg:w="7"/><text x="3.0749%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (17 samples, 0.04%)</title><rect x="2.8429%" y="501" width="0.0438%" height="15" fill="rgb(247,138,52)" fg:x="1104" fg:w="17"/><text x="3.0929%" y="511.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::decrypt_in_place (14 samples, 0.04%)</title><rect x="2.8867%" y="501" width="0.0361%" height="15" fill="rgb(213,79,30)" fg:x="1121" fg:w="14"/><text x="3.1367%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (14 samples, 0.04%)</title><rect x="2.8867%" y="485" width="0.0361%" height="15" fill="rgb(246,177,23)" fg:x="1121" fg:w="14"/><text x="3.1367%" y="495.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::encrypt (5 samples, 0.01%)</title><rect x="2.9253%" y="501" width="0.0129%" height="15" fill="rgb(230,62,27)" fg:x="1136" fg:w="5"/><text x="3.1753%" y="511.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (5 samples, 0.01%)</title><rect x="2.9253%" y="485" width="0.0129%" height="15" fill="rgb(216,154,8)" fg:x="1136" fg:w="5"/><text x="3.1753%" y="495.50"></text></g><g><title>CRYPTO_gcm128_decrypt (6 samples, 0.02%)</title><rect x="2.9408%" y="501" width="0.0155%" height="15" fill="rgb(244,35,45)" fg:x="1142" fg:w="6"/><text x="3.1908%" y="511.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (25 samples, 0.06%)</title><rect x="2.9562%" y="501" width="0.0644%" height="15" fill="rgb(251,115,12)" fg:x="1148" fg:w="25"/><text x="3.2062%" y="511.50"></text></g><g><title>CRYPTO_gcm128_encrypt (18 samples, 0.05%)</title><rect x="3.0206%" y="501" width="0.0464%" height="15" fill="rgb(240,54,50)" fg:x="1173" fg:w="18"/><text x="3.2706%" y="511.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (33 samples, 0.08%)</title><rect x="3.0670%" y="501" width="0.0850%" height="15" fill="rgb(233,84,52)" fg:x="1191" fg:w="33"/><text x="3.3170%" y="511.50"></text></g><g><title>CRYPTO_gcm128_finish (4 samples, 0.01%)</title><rect x="3.1520%" y="501" width="0.0103%" height="15" fill="rgb(207,117,47)" fg:x="1224" fg:w="4"/><text x="3.4020%" y="511.50"></text></g><g><title>CRYPTO_gcm128_setiv (4 samples, 0.01%)</title><rect x="3.1623%" y="501" width="0.0103%" height="15" fill="rgb(249,43,39)" fg:x="1228" fg:w="4"/><text x="3.4123%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (16 samples, 0.04%)</title><rect x="3.1829%" y="501" width="0.0412%" height="15" fill="rgb(209,38,44)" fg:x="1236" fg:w="16"/><text x="3.4329%" y="511.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (11 samples, 0.03%)</title><rect x="3.2241%" y="501" width="0.0283%" height="15" fill="rgb(236,212,23)" fg:x="1252" fg:w="11"/><text x="3.4741%" y="511.50"></text></g><g><title>EVP_CIPHER_get_block_size (4 samples, 0.01%)</title><rect x="3.2550%" y="501" width="0.0103%" height="15" fill="rgb(242,79,21)" fg:x="1264" fg:w="4"/><text x="3.5050%" y="511.50"></text></g><g><title>EVP_CipherInit_ex (4 samples, 0.01%)</title><rect x="3.2653%" y="501" width="0.0103%" height="15" fill="rgb(211,96,35)" fg:x="1268" fg:w="4"/><text x="3.5153%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (46 samples, 0.12%)</title><rect x="3.2781%" y="501" width="0.1185%" height="15" fill="rgb(253,215,40)" fg:x="1273" fg:w="46"/><text x="3.5281%" y="511.50"></text></g><g><title>EVP_EncryptUpdate (45 samples, 0.12%)</title><rect x="3.3966%" y="501" width="0.1159%" height="15" fill="rgb(211,81,21)" fg:x="1319" fg:w="45"/><text x="3.6466%" y="511.50"></text></g><g><title>OSSL_PARAM_locate (33 samples, 0.08%)</title><rect x="3.5125%" y="501" width="0.0850%" height="15" fill="rgb(208,190,38)" fg:x="1364" fg:w="33"/><text x="3.7625%" y="511.50"></text></g><g><title>[[vdso]] (16 samples, 0.04%)</title><rect x="3.6026%" y="501" width="0.0412%" height="15" fill="rgb(235,213,38)" fg:x="1399" fg:w="16"/><text x="3.8526%" y="511.50"></text></g><g><title>[benchmark] (9 samples, 0.02%)</title><rect x="3.6438%" y="501" width="0.0232%" height="15" fill="rgb(237,122,38)" fg:x="1415" fg:w="9"/><text x="3.8938%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (9 samples, 0.02%)</title><rect x="3.6438%" y="485" width="0.0232%" height="15" fill="rgb(244,218,35)" fg:x="1415" fg:w="9"/><text x="3.8938%" y="495.50"></text></g><g><title>[libc.so.6] (73 samples, 0.19%)</title><rect x="3.6670%" y="501" width="0.1880%" height="15" fill="rgb(240,68,47)" fg:x="1424" fg:w="73"/><text x="3.9170%" y="511.50"></text></g><g><title>[libcrypto.so.3] (329 samples, 0.85%)</title><rect x="3.8550%" y="501" width="0.8472%" height="15" fill="rgb(210,16,53)" fg:x="1497" fg:w="329"/><text x="4.1050%" y="511.50"></text></g><g><title>__bss_start (20 samples, 0.05%)</title><rect x="4.7022%" y="501" width="0.0515%" height="15" fill="rgb(235,124,12)" fg:x="1826" fg:w="20"/><text x="4.9522%" y="511.50"></text></g><g><title>[libcrypto.so.3] (20 samples, 0.05%)</title><rect x="4.7022%" y="485" width="0.0515%" height="15" fill="rgb(224,169,11)" fg:x="1826" fg:w="20"/><text x="4.9522%" y="495.50"></text></g><g><title>__lll_lock_wait_private (4 samples, 0.01%)</title><rect x="4.7537%" y="501" width="0.0103%" height="15" fill="rgb(250,166,2)" fg:x="1846" fg:w="4"/><text x="5.0037%" y="511.50"></text></g><g><title>__entry_text_start (35 samples, 0.09%)</title><rect x="5.1142%" y="309" width="0.0901%" height="15" fill="rgb(242,216,29)" fg:x="1986" fg:w="35"/><text x="5.3642%" y="319.50"></text></g><g><title>crng_make_state (5 samples, 0.01%)</title><rect x="5.2636%" y="261" width="0.0129%" height="15" fill="rgb(230,116,27)" fg:x="2044" fg:w="5"/><text x="5.5136%" y="271.50"></text></g><g><title>_copy_to_iter (38 samples, 0.10%)</title><rect x="5.3769%" y="245" width="0.0979%" height="15" fill="rgb(228,99,48)" fg:x="2088" fg:w="38"/><text x="5.6269%" y="255.50"></text></g><g><title>copyout (28 samples, 0.07%)</title><rect x="5.4026%" y="229" width="0.0721%" height="15" fill="rgb(253,11,6)" fg:x="2098" fg:w="28"/><text x="5.6526%" y="239.50"></text></g><g><title>copyout (5 samples, 0.01%)</title><rect x="5.4747%" y="245" width="0.0129%" height="15" fill="rgb(247,143,39)" fg:x="2126" fg:w="5"/><text x="5.7247%" y="255.50"></text></g><g><title>__memcpy (14 samples, 0.04%)</title><rect x="5.5571%" y="229" width="0.0361%" height="15" fill="rgb(236,97,10)" fg:x="2158" fg:w="14"/><text x="5.8071%" y="239.50"></text></g><g><title>chacha_block_generic (267 samples, 0.69%)</title><rect x="5.6859%" y="213" width="0.6876%" height="15" fill="rgb(233,208,19)" fg:x="2208" fg:w="267"/><text x="5.9359%" y="223.50"></text></g><g><title>chacha_permute (242 samples, 0.62%)</title><rect x="5.7503%" y="197" width="0.6232%" height="15" fill="rgb(216,164,2)" fg:x="2233" fg:w="242"/><text x="6.0003%" y="207.50"></text></g><g><title>__x64_sys_getrandom (440 samples, 1.13%)</title><rect x="5.2455%" y="277" width="1.1331%" height="15" fill="rgb(220,129,5)" fg:x="2037" fg:w="440"/><text x="5.4955%" y="287.50"></text></g><g><title>get_random_bytes_user (428 samples, 1.10%)</title><rect x="5.2764%" y="261" width="1.1022%" height="15" fill="rgb(242,17,10)" fg:x="2049" fg:w="428"/><text x="5.5264%" y="271.50"></text></g><g><title>crng_make_state (343 samples, 0.88%)</title><rect x="5.4953%" y="245" width="0.8833%" height="15" fill="rgb(242,107,0)" fg:x="2134" fg:w="343"/><text x="5.7453%" y="255.50"></text></g><g><title>crng_fast_key_erasure (302 samples, 0.78%)</title><rect x="5.6009%" y="229" width="0.7777%" height="15" fill="rgb(251,28,31)" fg:x="2175" fg:w="302"/><text x="5.8509%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (19 samples, 0.05%)</title><rect x="6.4069%" y="261" width="0.0489%" height="15" fill="rgb(233,223,10)" fg:x="2488" fg:w="19"/><text x="6.6569%" y="271.50"></text></g><g><title>do_syscall_64 (474 samples, 1.22%)</title><rect x="5.2430%" y="293" width="1.2206%" height="15" fill="rgb(215,21,27)" fg:x="2036" fg:w="474"/><text x="5.4930%" y="303.50"></text></g><g><title>syscall_exit_to_user_mode (24 samples, 0.06%)</title><rect x="6.4018%" y="277" width="0.0618%" height="15" fill="rgb(232,23,21)" fg:x="2486" fg:w="24"/><text x="6.6518%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (494 samples, 1.27%)</title><rect x="5.2095%" y="309" width="1.2721%" height="15" fill="rgb(244,5,23)" fg:x="2023" fg:w="494"/><text x="5.4595%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.01%)</title><rect x="6.4713%" y="293" width="0.0103%" height="15" fill="rgb(226,81,46)" fg:x="2513" fg:w="4"/><text x="6.7213%" y="303.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::next_u64 (593 samples, 1.53%)</title><rect x="4.9777%" y="485" width="1.5271%" height="15" fill="rgb(247,70,30)" fg:x="1933" fg:w="593"/><text x="5.2277%" y="495.50"></text></g><g><title>rand_core::impls::next_u64_via_fill (593 samples, 1.53%)</title><rect x="4.9777%" y="469" width="1.5271%" height="15" fill="rgb(212,68,19)" fg:x="1933" fg:w="593"/><text x="5.2277%" y="479.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::fill_bytes (593 samples, 1.53%)</title><rect x="4.9777%" y="453" width="1.5271%" height="15" fill="rgb(240,187,13)" fg:x="1933" fg:w="593"/><text x="5.2277%" y="463.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (587 samples, 1.51%)</title><rect x="4.9932%" y="437" width="1.5116%" height="15" fill="rgb(223,113,26)" fg:x="1939" fg:w="587"/><text x="5.2432%" y="447.50"></text></g><g><title>getrandom::getrandom (587 samples, 1.51%)</title><rect x="4.9932%" y="421" width="1.5116%" height="15" fill="rgb(206,192,2)" fg:x="1939" fg:w="587"/><text x="5.2432%" y="431.50"></text></g><g><title>getrandom::getrandom_uninit (587 samples, 1.51%)</title><rect x="4.9932%" y="405" width="1.5116%" height="15" fill="rgb(241,108,4)" fg:x="1939" fg:w="587"/><text x="5.2432%" y="415.50"></text></g><g><title>getrandom::imp::getrandom_inner (586 samples, 1.51%)</title><rect x="4.9958%" y="389" width="1.5090%" height="15" fill="rgb(247,173,49)" fg:x="1940" fg:w="586"/><text x="5.2458%" y="399.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (583 samples, 1.50%)</title><rect x="5.0035%" y="373" width="1.5013%" height="15" fill="rgb(224,114,35)" fg:x="1943" fg:w="583"/><text x="5.2535%" y="383.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (577 samples, 1.49%)</title><rect x="5.0189%" y="357" width="1.4858%" height="15" fill="rgb(245,159,27)" fg:x="1949" fg:w="577"/><text x="5.2689%" y="367.50"></text></g><g><title>getrandom::imp::getrandom (577 samples, 1.49%)</title><rect x="5.0189%" y="341" width="1.4858%" height="15" fill="rgb(245,172,44)" fg:x="1949" fg:w="577"/><text x="5.2689%" y="351.50"></text></g><g><title>syscall (575 samples, 1.48%)</title><rect x="5.0241%" y="325" width="1.4807%" height="15" fill="rgb(236,23,11)" fg:x="1951" fg:w="575"/><text x="5.2741%" y="335.50"></text></g><g><title>syscall_return_via_sysret (9 samples, 0.02%)</title><rect x="6.4816%" y="309" width="0.0232%" height="15" fill="rgb(205,117,38)" fg:x="2517" fg:w="9"/><text x="6.7316%" y="319.50"></text></g><g><title>[libc.so.6] (20 samples, 0.05%)</title><rect x="6.5048%" y="485" width="0.0515%" height="15" fill="rgb(237,72,25)" fg:x="2526" fg:w="20"/><text x="6.7548%" y="495.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (7 samples, 0.02%)</title><rect x="6.5563%" y="485" width="0.0180%" height="15" fill="rgb(244,70,9)" fg:x="2546" fg:w="7"/><text x="6.8063%" y="495.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (7 samples, 0.02%)</title><rect x="6.5563%" y="469" width="0.0180%" height="15" fill="rgb(217,125,39)" fg:x="2546" fg:w="7"/><text x="6.8063%" y="479.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (7 samples, 0.02%)</title><rect x="6.5563%" y="453" width="0.0180%" height="15" fill="rgb(235,36,10)" fg:x="2546" fg:w="7"/><text x="6.8063%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt; (12 samples, 0.03%)</title><rect x="6.5872%" y="485" width="0.0309%" height="15" fill="rgb(251,123,47)" fg:x="2558" fg:w="12"/><text x="6.8372%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="6.5872%" y="469" width="0.0309%" height="15" fill="rgb(221,13,13)" fg:x="2558" fg:w="12"/><text x="6.8372%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.03%)</title><rect x="6.5872%" y="453" width="0.0309%" height="15" fill="rgb(238,131,9)" fg:x="2558" fg:w="12"/><text x="6.8372%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.03%)</title><rect x="6.5872%" y="437" width="0.0309%" height="15" fill="rgb(211,50,8)" fg:x="2558" fg:w="12"/><text x="6.8372%" y="447.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="6.6902%" y="437" width="0.0129%" height="15" fill="rgb(245,182,24)" fg:x="2598" fg:w="5"/><text x="6.9402%" y="447.50"></text></g><g><title>_ZN3std4sync4mpmc5array16Channel$LT$T$GT$10start_recv17h7800ca29c64cb868E.llvm.12455019271255371362 (9 samples, 0.02%)</title><rect x="6.7031%" y="437" width="0.0232%" height="15" fill="rgb(242,14,37)" fg:x="2603" fg:w="9"/><text x="6.9531%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (20 samples, 0.05%)</title><rect x="6.7340%" y="421" width="0.0515%" height="15" fill="rgb(246,228,12)" fg:x="2615" fg:w="20"/><text x="6.9840%" y="431.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::read (25 samples, 0.06%)</title><rect x="6.7340%" y="437" width="0.0644%" height="15" fill="rgb(213,55,15)" fg:x="2615" fg:w="25"/><text x="6.9840%" y="447.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (5 samples, 0.01%)</title><rect x="6.7855%" y="421" width="0.0129%" height="15" fill="rgb(209,9,3)" fg:x="2635" fg:w="5"/><text x="7.0355%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (44 samples, 0.11%)</title><rect x="6.8936%" y="421" width="0.1133%" height="15" fill="rgb(230,59,30)" fg:x="2677" fg:w="44"/><text x="7.1436%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (44 samples, 0.11%)</title><rect x="6.8936%" y="405" width="0.1133%" height="15" fill="rgb(209,121,21)" fg:x="2677" fg:w="44"/><text x="7.1436%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (177 samples, 0.46%)</title><rect x="7.0069%" y="421" width="0.4558%" height="15" fill="rgb(220,109,13)" fg:x="2721" fg:w="177"/><text x="7.2569%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (177 samples, 0.46%)</title><rect x="7.0069%" y="405" width="0.4558%" height="15" fill="rgb(232,18,1)" fg:x="2721" fg:w="177"/><text x="7.2569%" y="415.50"></text></g><g><title>core::sync::atomic::fence (10 samples, 0.03%)</title><rect x="7.4627%" y="421" width="0.0258%" height="15" fill="rgb(215,41,42)" fg:x="2898" fg:w="10"/><text x="7.7127%" y="431.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (337 samples, 0.87%)</title><rect x="6.6258%" y="485" width="0.8678%" height="15" fill="rgb(224,123,36)" fg:x="2573" fg:w="337"/><text x="6.8758%" y="495.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (337 samples, 0.87%)</title><rect x="6.6258%" y="469" width="0.8678%" height="15" fill="rgb(240,125,3)" fg:x="2573" fg:w="337"/><text x="6.8758%" y="479.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::try_recv (326 samples, 0.84%)</title><rect x="6.6541%" y="453" width="0.8395%" height="15" fill="rgb(205,98,50)" fg:x="2584" fg:w="326"/><text x="6.9041%" y="463.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (270 samples, 0.70%)</title><rect x="6.7983%" y="437" width="0.6953%" height="15" fill="rgb(205,185,37)" fg:x="2640" fg:w="270"/><text x="7.0483%" y="447.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (8 samples, 0.02%)</title><rect x="7.4936%" y="469" width="0.0206%" height="15" fill="rgb(238,207,15)" fg:x="2910" fg:w="8"/><text x="7.7436%" y="479.50"></text></g><g><title>std::time::Instant::duration_since (8 samples, 0.02%)</title><rect x="7.4936%" y="453" width="0.0206%" height="15" fill="rgb(213,199,42)" fg:x="2910" fg:w="8"/><text x="7.7436%" y="463.50"></text></g><g><title>std::time::Instant::checked_duration_since (8 samples, 0.02%)</title><rect x="7.4936%" y="437" width="0.0206%" height="15" fill="rgb(235,201,11)" fg:x="2910" fg:w="8"/><text x="7.7436%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (8 samples, 0.02%)</title><rect x="7.4936%" y="421" width="0.0206%" height="15" fill="rgb(207,46,11)" fg:x="2910" fg:w="8"/><text x="7.7436%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (8 samples, 0.02%)</title><rect x="7.4936%" y="405" width="0.0206%" height="15" fill="rgb(241,35,35)" fg:x="2910" fg:w="8"/><text x="7.7436%" y="415.50"></text></g><g><title>[[vdso]] (33 samples, 0.08%)</title><rect x="7.5194%" y="405" width="0.0850%" height="15" fill="rgb(243,32,47)" fg:x="2920" fg:w="33"/><text x="7.7694%" y="415.50"></text></g><g><title>[[vdso]] (19 samples, 0.05%)</title><rect x="7.5554%" y="389" width="0.0489%" height="15" fill="rgb(247,202,23)" fg:x="2934" fg:w="19"/><text x="7.8054%" y="399.50"></text></g><g><title>std::time::Instant::elapsed (44 samples, 0.11%)</title><rect x="7.4936%" y="485" width="0.1133%" height="15" fill="rgb(219,102,11)" fg:x="2910" fg:w="44"/><text x="7.7436%" y="495.50"></text></g><g><title>std::time::Instant::now (36 samples, 0.09%)</title><rect x="7.5142%" y="469" width="0.0927%" height="15" fill="rgb(243,110,44)" fg:x="2918" fg:w="36"/><text x="7.7642%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (36 samples, 0.09%)</title><rect x="7.5142%" y="453" width="0.0927%" height="15" fill="rgb(222,74,54)" fg:x="2918" fg:w="36"/><text x="7.7642%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (35 samples, 0.09%)</title><rect x="7.5168%" y="437" width="0.0901%" height="15" fill="rgb(216,99,12)" fg:x="2919" fg:w="35"/><text x="7.7668%" y="447.50"></text></g><g><title>clock_gettime (35 samples, 0.09%)</title><rect x="7.5168%" y="421" width="0.0901%" height="15" fill="rgb(226,22,26)" fg:x="2919" fg:w="35"/><text x="7.7668%" y="431.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (401 samples, 1.03%)</title><rect x="7.8361%" y="469" width="1.0326%" height="15" fill="rgb(217,163,10)" fg:x="3043" fg:w="401"/><text x="8.0861%" y="479.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (401 samples, 1.03%)</title><rect x="7.8361%" y="453" width="1.0326%" height="15" fill="rgb(213,25,53)" fg:x="3043" fg:w="401"/><text x="8.0861%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (401 samples, 1.03%)</title><rect x="7.8361%" y="437" width="1.0326%" height="15" fill="rgb(252,105,26)" fg:x="3043" fg:w="401"/><text x="8.0861%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="8.8687%" y="469" width="0.0103%" height="15" fill="rgb(220,39,43)" fg:x="3444" fg:w="4"/><text x="9.1187%" y="479.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (5 samples, 0.01%)</title><rect x="8.8971%" y="421" width="0.0129%" height="15" fill="rgb(229,68,48)" fg:x="3455" fg:w="5"/><text x="9.1471%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (71 samples, 0.18%)</title><rect x="8.8971%" y="453" width="0.1828%" height="15" fill="rgb(252,8,32)" fg:x="3455" fg:w="71"/><text x="9.1471%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.18%)</title><rect x="8.8971%" y="437" width="0.1828%" height="15" fill="rgb(223,20,43)" fg:x="3455" fg:w="71"/><text x="9.1471%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (64 samples, 0.16%)</title><rect x="8.9151%" y="421" width="0.1648%" height="15" fill="rgb(229,81,49)" fg:x="3462" fg:w="64"/><text x="9.1651%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (60 samples, 0.15%)</title><rect x="8.9254%" y="405" width="0.1545%" height="15" fill="rgb(236,28,36)" fg:x="3466" fg:w="60"/><text x="9.1754%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (60 samples, 0.15%)</title><rect x="8.9254%" y="389" width="0.1545%" height="15" fill="rgb(249,185,26)" fg:x="3466" fg:w="60"/><text x="9.1754%" y="399.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="9.0799%" y="437" width="0.0129%" height="15" fill="rgb(249,174,33)" fg:x="3526" fg:w="5"/><text x="9.3299%" y="447.50"></text></g><g><title>std::sync::poison::Flag::guard (5 samples, 0.01%)</title><rect x="9.0799%" y="421" width="0.0129%" height="15" fill="rgb(233,201,37)" fg:x="3526" fg:w="5"/><text x="9.3299%" y="431.50"></text></g><g><title>std::thread::panicking (5 samples, 0.01%)</title><rect x="9.0799%" y="405" width="0.0129%" height="15" fill="rgb(221,78,26)" fg:x="3526" fg:w="5"/><text x="9.3299%" y="415.50"></text></g><g><title>std::panicking::panicking (5 samples, 0.01%)</title><rect x="9.0799%" y="389" width="0.0129%" height="15" fill="rgb(250,127,30)" fg:x="3526" fg:w="5"/><text x="9.3299%" y="399.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (5 samples, 0.01%)</title><rect x="9.0799%" y="373" width="0.0129%" height="15" fill="rgb(230,49,44)" fg:x="3526" fg:w="5"/><text x="9.3299%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (77 samples, 0.20%)</title><rect x="9.0799%" y="453" width="0.1983%" height="15" fill="rgb(229,67,23)" fg:x="3526" fg:w="77"/><text x="9.3299%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (72 samples, 0.19%)</title><rect x="9.0928%" y="437" width="0.1854%" height="15" fill="rgb(249,83,47)" fg:x="3531" fg:w="72"/><text x="9.3428%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (70 samples, 0.18%)</title><rect x="9.0979%" y="421" width="0.1803%" height="15" fill="rgb(215,43,3)" fg:x="3533" fg:w="70"/><text x="9.3479%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (70 samples, 0.18%)</title><rect x="9.0979%" y="405" width="0.1803%" height="15" fill="rgb(238,154,13)" fg:x="3533" fg:w="70"/><text x="9.3479%" y="415.50"></text></g><g><title>EVP_CIPHER_CTX_get_block_size (5 samples, 0.01%)</title><rect x="9.3657%" y="421" width="0.0129%" height="15" fill="rgb(219,56,2)" fg:x="3637" fg:w="5"/><text x="9.6157%" y="431.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (394 samples, 1.01%)</title><rect x="8.8893%" y="469" width="1.0146%" height="15" fill="rgb(233,0,4)" fg:x="3452" fg:w="394"/><text x="9.1393%" y="479.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (243 samples, 0.63%)</title><rect x="9.2782%" y="453" width="0.6258%" height="15" fill="rgb(235,30,7)" fg:x="3603" fg:w="243"/><text x="9.5282%" y="463.50"></text></g><g><title>EVP_DecryptUpdate (242 samples, 0.62%)</title><rect x="9.2808%" y="437" width="0.6232%" height="15" fill="rgb(250,79,13)" fg:x="3604" fg:w="242"/><text x="9.5308%" y="447.50"></text></g><g><title>[libcrypto.so.3] (204 samples, 0.53%)</title><rect x="9.3786%" y="421" width="0.5253%" height="15" fill="rgb(211,146,34)" fg:x="3642" fg:w="204"/><text x="9.6286%" y="431.50"></text></g><g><title>[libcrypto.so.3] (152 samples, 0.39%)</title><rect x="9.5125%" y="405" width="0.3914%" height="15" fill="rgb(228,22,38)" fg:x="3694" fg:w="152"/><text x="9.7625%" y="415.50"></text></g><g><title>[libcrypto.so.3] (144 samples, 0.37%)</title><rect x="9.5331%" y="389" width="0.3708%" height="15" fill="rgb(235,168,5)" fg:x="3702" fg:w="144"/><text x="9.7831%" y="399.50"></text></g><g><title>__rust_probestack (9 samples, 0.02%)</title><rect x="9.9039%" y="469" width="0.0232%" height="15" fill="rgb(221,155,16)" fg:x="3846" fg:w="9"/><text x="10.1539%" y="479.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.01%)</title><rect x="9.9323%" y="469" width="0.0103%" height="15" fill="rgb(215,215,53)" fg:x="3857" fg:w="4"/><text x="10.1823%" y="479.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (4 samples, 0.01%)</title><rect x="9.9323%" y="453" width="0.0103%" height="15" fill="rgb(223,4,10)" fg:x="3857" fg:w="4"/><text x="10.1823%" y="463.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="9.9503%" y="293" width="0.0129%" height="15" fill="rgb(234,103,6)" fg:x="3864" fg:w="5"/><text x="10.2003%" y="303.50"></text></g><g><title>core::num::nonzero::NonZeroU32::new (13 samples, 0.03%)</title><rect x="9.9426%" y="469" width="0.0335%" height="15" fill="rgb(227,97,0)" fg:x="3861" fg:w="13"/><text x="10.1926%" y="479.50"></text></g><g><title>asm_sysvec_reschedule_ipi (10 samples, 0.03%)</title><rect x="9.9503%" y="453" width="0.0258%" height="15" fill="rgb(234,150,53)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="463.50"></text></g><g><title>sysvec_reschedule_ipi (10 samples, 0.03%)</title><rect x="9.9503%" y="437" width="0.0258%" height="15" fill="rgb(228,201,54)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="447.50"></text></g><g><title>irqentry_exit (10 samples, 0.03%)</title><rect x="9.9503%" y="421" width="0.0258%" height="15" fill="rgb(222,22,37)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="431.50"></text></g><g><title>irqentry_exit_to_user_mode (10 samples, 0.03%)</title><rect x="9.9503%" y="405" width="0.0258%" height="15" fill="rgb(237,53,32)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="415.50"></text></g><g><title>exit_to_user_mode_prepare (10 samples, 0.03%)</title><rect x="9.9503%" y="389" width="0.0258%" height="15" fill="rgb(233,25,53)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="399.50"></text></g><g><title>exit_to_user_mode_loop (10 samples, 0.03%)</title><rect x="9.9503%" y="373" width="0.0258%" height="15" fill="rgb(210,40,34)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="383.50"></text></g><g><title>schedule (10 samples, 0.03%)</title><rect x="9.9503%" y="357" width="0.0258%" height="15" fill="rgb(241,220,44)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="367.50"></text></g><g><title>__schedule (10 samples, 0.03%)</title><rect x="9.9503%" y="341" width="0.0258%" height="15" fill="rgb(235,28,35)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="351.50"></text></g><g><title>finish_task_switch.isra.0 (10 samples, 0.03%)</title><rect x="9.9503%" y="325" width="0.0258%" height="15" fill="rgb(210,56,17)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.03%)</title><rect x="9.9503%" y="309" width="0.0258%" height="15" fill="rgb(224,130,29)" fg:x="3864" fg:w="10"/><text x="10.2003%" y="319.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="9.9632%" y="293" width="0.0129%" height="15" fill="rgb(235,212,8)" fg:x="3869" fg:w="5"/><text x="10.2132%" y="303.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade::_{{closure}} (9 samples, 0.02%)</title><rect x="9.9941%" y="405" width="0.0232%" height="15" fill="rgb(223,33,50)" fg:x="3881" fg:w="9"/><text x="10.2441%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (61 samples, 0.16%)</title><rect x="10.0173%" y="405" width="0.1571%" height="15" fill="rgb(219,149,13)" fg:x="3890" fg:w="61"/><text x="10.2673%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (61 samples, 0.16%)</title><rect x="10.0173%" y="389" width="0.1571%" height="15" fill="rgb(250,156,29)" fg:x="3890" fg:w="61"/><text x="10.2673%" y="399.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (81 samples, 0.21%)</title><rect x="9.9761%" y="437" width="0.2086%" height="15" fill="rgb(216,193,19)" fg:x="3874" fg:w="81"/><text x="10.2261%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (78 samples, 0.20%)</title><rect x="9.9838%" y="421" width="0.2009%" height="15" fill="rgb(216,135,14)" fg:x="3877" fg:w="78"/><text x="10.2338%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.01%)</title><rect x="10.1743%" y="405" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="3951" fg:w="4"/><text x="10.4243%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="10.1743%" y="389" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="3951" fg:w="4"/><text x="10.4243%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (82 samples, 0.21%)</title><rect x="9.9761%" y="469" width="0.2112%" height="15" fill="rgb(231,13,6)" fg:x="3874" fg:w="82"/><text x="10.2261%" y="479.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive::_{{closure}} (82 samples, 0.21%)</title><rect x="9.9761%" y="453" width="0.2112%" height="15" fill="rgb(207,181,40)" fg:x="3874" fg:w="82"/><text x="10.2261%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt; (55 samples, 0.14%)</title><rect x="10.1872%" y="469" width="0.1416%" height="15" fill="rgb(254,173,49)" fg:x="3956" fg:w="55"/><text x="10.4372%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.14%)</title><rect x="10.1872%" y="453" width="0.1416%" height="15" fill="rgb(221,1,38)" fg:x="3956" fg:w="55"/><text x="10.4372%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (53 samples, 0.14%)</title><rect x="10.1924%" y="437" width="0.1365%" height="15" fill="rgb(206,124,46)" fg:x="3958" fg:w="53"/><text x="10.4424%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (53 samples, 0.14%)</title><rect x="10.1924%" y="421" width="0.1365%" height="15" fill="rgb(249,21,11)" fg:x="3958" fg:w="53"/><text x="10.4424%" y="431.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.01%)</title><rect x="10.3494%" y="293" width="0.0103%" height="15" fill="rgb(222,201,40)" fg:x="4019" fg:w="4"/><text x="10.5994%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.01%)</title><rect x="10.3494%" y="277" width="0.0103%" height="15" fill="rgb(235,61,29)" fg:x="4019" fg:w="4"/><text x="10.5994%" y="287.50"></text></g><g><title>__rust_dealloc (5 samples, 0.01%)</title><rect x="10.3597%" y="293" width="0.0129%" height="15" fill="rgb(219,207,3)" fg:x="4023" fg:w="5"/><text x="10.6097%" y="303.50"></text></g><g><title>[libc.so.6] (48 samples, 0.12%)</title><rect x="11.5134%" y="261" width="0.1236%" height="15" fill="rgb(222,56,46)" fg:x="4471" fg:w="48"/><text x="11.7634%" y="271.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="11.6241%" y="245" width="0.0129%" height="15" fill="rgb(239,76,54)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="255.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="11.6241%" y="229" width="0.0129%" height="15" fill="rgb(231,124,27)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="239.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="11.6241%" y="213" width="0.0129%" height="15" fill="rgb(249,195,6)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="223.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="11.6241%" y="197" width="0.0129%" height="15" fill="rgb(237,174,47)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="207.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="11.6241%" y="181" width="0.0129%" height="15" fill="rgb(206,201,31)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="191.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="11.6241%" y="165" width="0.0129%" height="15" fill="rgb(231,57,52)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="175.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="11.6241%" y="149" width="0.0129%" height="15" fill="rgb(248,177,22)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="159.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="11.6241%" y="133" width="0.0129%" height="15" fill="rgb(215,211,37)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="143.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="11.6241%" y="117" width="0.0129%" height="15" fill="rgb(241,128,51)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="11.6241%" y="101" width="0.0129%" height="15" fill="rgb(227,165,31)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="111.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="11.6241%" y="85" width="0.0129%" height="15" fill="rgb(228,167,24)" fg:x="4514" fg:w="5"/><text x="11.8741%" y="95.50"></text></g><g><title>__entry_text_start (14 samples, 0.04%)</title><rect x="11.7503%" y="245" width="0.0361%" height="15" fill="rgb(228,143,12)" fg:x="4563" fg:w="14"/><text x="12.0003%" y="255.50"></text></g><g><title>futex_unqueue (10 samples, 0.03%)</title><rect x="11.8662%" y="165" width="0.0258%" height="15" fill="rgb(249,149,8)" fg:x="4608" fg:w="10"/><text x="12.1162%" y="175.50"></text></g><g><title>update_curr (11 samples, 0.03%)</title><rect x="12.0104%" y="69" width="0.0283%" height="15" fill="rgb(243,35,44)" fg:x="4664" fg:w="11"/><text x="12.2604%" y="79.50"></text></g><g><title>cpuacct_charge (5 samples, 0.01%)</title><rect x="12.0259%" y="53" width="0.0129%" height="15" fill="rgb(246,89,9)" fg:x="4670" fg:w="5"/><text x="12.2759%" y="63.50"></text></g><g><title>update_load_avg (8 samples, 0.02%)</title><rect x="12.0387%" y="69" width="0.0206%" height="15" fill="rgb(233,213,13)" fg:x="4675" fg:w="8"/><text x="12.2887%" y="79.50"></text></g><g><title>dequeue_entity (28 samples, 0.07%)</title><rect x="11.9898%" y="85" width="0.0721%" height="15" fill="rgb(233,141,41)" fg:x="4656" fg:w="28"/><text x="12.2398%" y="95.50"></text></g><g><title>dequeue_task (37 samples, 0.10%)</title><rect x="11.9744%" y="117" width="0.0953%" height="15" fill="rgb(239,167,4)" fg:x="4650" fg:w="37"/><text x="12.2244%" y="127.50"></text></g><g><title>dequeue_task_fair (36 samples, 0.09%)</title><rect x="11.9769%" y="101" width="0.0927%" height="15" fill="rgb(209,217,16)" fg:x="4651" fg:w="36"/><text x="12.2269%" y="111.50"></text></g><g><title>__perf_event_task_sched_in (8 samples, 0.02%)</title><rect x="12.0722%" y="101" width="0.0206%" height="15" fill="rgb(219,88,35)" fg:x="4688" fg:w="8"/><text x="12.3222%" y="111.50"></text></g><g><title>perf_ctx_enable (8 samples, 0.02%)</title><rect x="12.0722%" y="85" width="0.0206%" height="15" fill="rgb(220,193,23)" fg:x="4688" fg:w="8"/><text x="12.3222%" y="95.50"></text></g><g><title>finish_task_switch.isra.0 (18 samples, 0.05%)</title><rect x="12.0696%" y="117" width="0.0464%" height="15" fill="rgb(230,90,52)" fg:x="4687" fg:w="18"/><text x="12.3196%" y="127.50"></text></g><g><title>raw_spin_rq_unlock (9 samples, 0.02%)</title><rect x="12.0928%" y="101" width="0.0232%" height="15" fill="rgb(252,106,19)" fg:x="4696" fg:w="9"/><text x="12.3428%" y="111.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.01%)</title><rect x="12.1237%" y="101" width="0.0103%" height="15" fill="rgb(206,74,20)" fg:x="4708" fg:w="4"/><text x="12.3737%" y="111.50"></text></g><g><title>newidle_balance (4 samples, 0.01%)</title><rect x="12.1237%" y="85" width="0.0103%" height="15" fill="rgb(230,138,44)" fg:x="4708" fg:w="4"/><text x="12.3737%" y="95.50"></text></g><g><title>pick_next_task (11 samples, 0.03%)</title><rect x="12.1160%" y="117" width="0.0283%" height="15" fill="rgb(235,182,43)" fg:x="4705" fg:w="11"/><text x="12.3660%" y="127.50"></text></g><g><title>prepare_task_switch (14 samples, 0.04%)</title><rect x="12.1469%" y="117" width="0.0361%" height="15" fill="rgb(242,16,51)" fg:x="4717" fg:w="14"/><text x="12.3969%" y="127.50"></text></g><g><title>__perf_event_task_sched_out (5 samples, 0.01%)</title><rect x="12.1701%" y="101" width="0.0129%" height="15" fill="rgb(248,9,4)" fg:x="4726" fg:w="5"/><text x="12.4201%" y="111.50"></text></g><g><title>psi_group_change (26 samples, 0.07%)</title><rect x="12.2216%" y="101" width="0.0670%" height="15" fill="rgb(210,31,22)" fg:x="4746" fg:w="26"/><text x="12.4716%" y="111.50"></text></g><g><title>psi_task_switch (44 samples, 0.11%)</title><rect x="12.1881%" y="117" width="0.1133%" height="15" fill="rgb(239,54,39)" fg:x="4733" fg:w="44"/><text x="12.4381%" y="127.50"></text></g><g><title>__schedule (149 samples, 0.38%)</title><rect x="11.9280%" y="133" width="0.3837%" height="15" fill="rgb(230,99,41)" fg:x="4632" fg:w="149"/><text x="12.1780%" y="143.50"></text></g><g><title>futex_wait_queue (165 samples, 0.42%)</title><rect x="11.8919%" y="165" width="0.4249%" height="15" fill="rgb(253,106,12)" fg:x="4618" fg:w="165"/><text x="12.1419%" y="175.50"></text></g><g><title>schedule (159 samples, 0.41%)</title><rect x="11.9074%" y="149" width="0.4094%" height="15" fill="rgb(213,46,41)" fg:x="4624" fg:w="159"/><text x="12.1574%" y="159.50"></text></g><g><title>__get_user_nocheck_4 (16 samples, 0.04%)</title><rect x="12.3297%" y="149" width="0.0412%" height="15" fill="rgb(215,133,35)" fg:x="4788" fg:w="16"/><text x="12.5797%" y="159.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="12.3709%" y="149" width="0.0129%" height="15" fill="rgb(213,28,5)" fg:x="4804" fg:w="5"/><text x="12.6209%" y="159.50"></text></g><g><title>futex_q_lock (4 samples, 0.01%)</title><rect x="12.3915%" y="149" width="0.0103%" height="15" fill="rgb(215,77,49)" fg:x="4812" fg:w="4"/><text x="12.6415%" y="159.50"></text></g><g><title>futex_q_unlock (7 samples, 0.02%)</title><rect x="12.4018%" y="149" width="0.0180%" height="15" fill="rgb(248,100,22)" fg:x="4816" fg:w="7"/><text x="12.6518%" y="159.50"></text></g><g><title>futex_wait_setup (41 samples, 0.11%)</title><rect x="12.3168%" y="165" width="0.1056%" height="15" fill="rgb(208,67,9)" fg:x="4783" fg:w="41"/><text x="12.5668%" y="175.50"></text></g><g><title>futex_wait (230 samples, 0.59%)</title><rect x="11.8353%" y="181" width="0.5923%" height="15" fill="rgb(219,133,21)" fg:x="4596" fg:w="230"/><text x="12.0853%" y="191.50"></text></g><g><title>do_futex (236 samples, 0.61%)</title><rect x="11.8224%" y="197" width="0.6077%" height="15" fill="rgb(246,46,29)" fg:x="4591" fg:w="236"/><text x="12.0724%" y="207.50"></text></g><g><title>__x64_sys_futex (247 samples, 0.64%)</title><rect x="11.7967%" y="213" width="0.6361%" height="15" fill="rgb(246,185,52)" fg:x="4581" fg:w="247"/><text x="12.0467%" y="223.50"></text></g><g><title>__rseq_handle_notify_resume (7 samples, 0.02%)</title><rect x="12.4817%" y="165" width="0.0180%" height="15" fill="rgb(252,136,11)" fg:x="4847" fg:w="7"/><text x="12.7317%" y="175.50"></text></g><g><title>exit_to_user_mode_loop (21 samples, 0.05%)</title><rect x="12.4559%" y="181" width="0.0541%" height="15" fill="rgb(219,138,53)" fg:x="4837" fg:w="21"/><text x="12.7059%" y="191.50"></text></g><g><title>exit_to_user_mode_prepare (27 samples, 0.07%)</title><rect x="12.4456%" y="197" width="0.0695%" height="15" fill="rgb(211,51,23)" fg:x="4833" fg:w="27"/><text x="12.6956%" y="207.50"></text></g><g><title>do_syscall_64 (283 samples, 0.73%)</title><rect x="11.7941%" y="229" width="0.7288%" height="15" fill="rgb(247,221,28)" fg:x="4580" fg:w="283"/><text x="12.0441%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (31 samples, 0.08%)</title><rect x="12.4430%" y="213" width="0.0798%" height="15" fill="rgb(251,222,45)" fg:x="4832" fg:w="31"/><text x="12.6930%" y="223.50"></text></g><g><title>[libc.so.6] (785 samples, 2.02%)</title><rect x="10.5065%" y="277" width="2.0215%" height="15" fill="rgb(217,162,53)" fg:x="4080" fg:w="785"/><text x="10.7565%" y="287.50">[..</text></g><g><title>__lll_lock_wait_private (346 samples, 0.89%)</title><rect x="11.6370%" y="261" width="0.8910%" height="15" fill="rgb(229,93,14)" fg:x="4519" fg:w="346"/><text x="11.8870%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (288 samples, 0.74%)</title><rect x="11.7864%" y="245" width="0.7416%" height="15" fill="rgb(209,67,49)" fg:x="4577" fg:w="288"/><text x="12.0364%" y="255.50"></text></g><g><title>__entry_text_start (13 samples, 0.03%)</title><rect x="12.5383%" y="261" width="0.0335%" height="15" fill="rgb(213,87,29)" fg:x="4869" fg:w="13"/><text x="12.7883%" y="271.50"></text></g><g><title>futex_hash (7 samples, 0.02%)</title><rect x="12.6104%" y="197" width="0.0180%" height="15" fill="rgb(205,151,52)" fg:x="4897" fg:w="7"/><text x="12.8604%" y="207.50"></text></g><g><title>_raw_spin_lock (25 samples, 0.06%)</title><rect x="12.6902%" y="181" width="0.0644%" height="15" fill="rgb(253,215,39)" fg:x="4928" fg:w="25"/><text x="12.9402%" y="191.50"></text></g><g><title>native_queued_spin_lock_slowpath (25 samples, 0.06%)</title><rect x="12.6902%" y="165" width="0.0644%" height="15" fill="rgb(221,220,41)" fg:x="4928" fg:w="25"/><text x="12.9402%" y="175.50"></text></g><g><title>do_futex (66 samples, 0.17%)</title><rect x="12.5975%" y="213" width="0.1700%" height="15" fill="rgb(218,133,21)" fg:x="4892" fg:w="66"/><text x="12.8475%" y="223.50"></text></g><g><title>futex_wake (54 samples, 0.14%)</title><rect x="12.6284%" y="197" width="0.1391%" height="15" fill="rgb(221,193,43)" fg:x="4904" fg:w="54"/><text x="12.8784%" y="207.50"></text></g><g><title>__x64_sys_futex (72 samples, 0.19%)</title><rect x="12.5872%" y="229" width="0.1854%" height="15" fill="rgb(240,128,52)" fg:x="4888" fg:w="72"/><text x="12.8372%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (10 samples, 0.03%)</title><rect x="12.7829%" y="213" width="0.0258%" height="15" fill="rgb(253,114,12)" fg:x="4964" fg:w="10"/><text x="13.0329%" y="223.50"></text></g><g><title>do_syscall_64 (90 samples, 0.23%)</title><rect x="12.5847%" y="245" width="0.2318%" height="15" fill="rgb(215,223,47)" fg:x="4887" fg:w="90"/><text x="12.8347%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.04%)</title><rect x="12.7752%" y="229" width="0.0412%" height="15" fill="rgb(248,225,23)" fg:x="4961" fg:w="16"/><text x="13.0252%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (98 samples, 0.25%)</title><rect x="12.5744%" y="261" width="0.2524%" height="15" fill="rgb(250,108,0)" fg:x="4883" fg:w="98"/><text x="12.8244%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (965 samples, 2.48%)</title><rect x="10.3494%" y="309" width="2.4850%" height="15" fill="rgb(228,208,7)" fg:x="4019" fg:w="965"/><text x="10.5994%" y="319.50">al..</text></g><g><title>cfree (956 samples, 2.46%)</title><rect x="10.3726%" y="293" width="2.4618%" height="15" fill="rgb(244,45,10)" fg:x="4028" fg:w="956"/><text x="10.6226%" y="303.50">cf..</text></g><g><title>__lll_lock_wake_private (119 samples, 0.31%)</title><rect x="12.5280%" y="277" width="0.3064%" height="15" fill="rgb(207,125,25)" fg:x="4865" fg:w="119"/><text x="12.7780%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (970 samples, 2.50%)</title><rect x="10.3494%" y="325" width="2.4979%" height="15" fill="rgb(210,195,18)" fg:x="4019" fg:w="970"/><text x="10.5994%" y="335.50">&lt;a..</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (5 samples, 0.01%)</title><rect x="12.8344%" y="309" width="0.0129%" height="15" fill="rgb(249,80,12)" fg:x="4984" fg:w="5"/><text x="13.0844%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt; (986 samples, 2.54%)</title><rect x="10.3288%" y="469" width="2.5391%" height="15" fill="rgb(221,65,9)" fg:x="4011" fg:w="986"/><text x="10.5788%" y="479.50">co..</text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (986 samples, 2.54%)</title><rect x="10.3288%" y="453" width="2.5391%" height="15" fill="rgb(235,49,36)" fg:x="4011" fg:w="986"/><text x="10.5788%" y="463.50">&lt;a..</text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (986 samples, 2.54%)</title><rect x="10.3288%" y="437" width="2.5391%" height="15" fill="rgb(225,32,20)" fg:x="4011" fg:w="986"/><text x="10.5788%" y="447.50">ar..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (986 samples, 2.54%)</title><rect x="10.3288%" y="421" width="2.5391%" height="15" fill="rgb(215,141,46)" fg:x="4011" fg:w="986"/><text x="10.5788%" y="431.50">ar..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (986 samples, 2.54%)</title><rect x="10.3288%" y="405" width="2.5391%" height="15" fill="rgb(250,160,47)" fg:x="4011" fg:w="986"/><text x="10.5788%" y="415.50">ar..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (984 samples, 2.53%)</title><rect x="10.3340%" y="389" width="2.5339%" height="15" fill="rgb(216,222,40)" fg:x="4013" fg:w="984"/><text x="10.5840%" y="399.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (981 samples, 2.53%)</title><rect x="10.3417%" y="373" width="2.5262%" height="15" fill="rgb(234,217,39)" fg:x="4016" fg:w="981"/><text x="10.5917%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (981 samples, 2.53%)</title><rect x="10.3417%" y="357" width="2.5262%" height="15" fill="rgb(207,178,40)" fg:x="4016" fg:w="981"/><text x="10.5917%" y="367.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (981 samples, 2.53%)</title><rect x="10.3417%" y="341" width="2.5262%" height="15" fill="rgb(221,136,13)" fg:x="4016" fg:w="981"/><text x="10.5917%" y="351.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.02%)</title><rect x="12.8473%" y="325" width="0.0206%" height="15" fill="rgb(249,199,10)" fg:x="4989" fg:w="8"/><text x="13.0973%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.02%)</title><rect x="12.8525%" y="309" width="0.0155%" height="15" fill="rgb(249,222,13)" fg:x="4991" fg:w="6"/><text x="13.1025%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.02%)</title><rect x="12.8525%" y="293" width="0.0155%" height="15" fill="rgb(244,185,38)" fg:x="4991" fg:w="6"/><text x="13.1025%" y="303.50"></text></g><g><title>std::sync::poison::Flag::done (10 samples, 0.03%)</title><rect x="12.8679%" y="437" width="0.0258%" height="15" fill="rgb(236,202,9)" fg:x="4997" fg:w="10"/><text x="13.1179%" y="447.50"></text></g><g><title>std::thread::panicking (10 samples, 0.03%)</title><rect x="12.8679%" y="421" width="0.0258%" height="15" fill="rgb(250,229,37)" fg:x="4997" fg:w="10"/><text x="13.1179%" y="431.50"></text></g><g><title>std::panicking::panicking (10 samples, 0.03%)</title><rect x="12.8679%" y="405" width="0.0258%" height="15" fill="rgb(206,174,23)" fg:x="4997" fg:w="10"/><text x="13.1179%" y="415.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (10 samples, 0.03%)</title><rect x="12.8679%" y="389" width="0.0258%" height="15" fill="rgb(211,33,43)" fg:x="4997" fg:w="10"/><text x="13.1179%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%)</title><rect x="12.8705%" y="373" width="0.0232%" height="15" fill="rgb(245,58,50)" fg:x="4998" fg:w="9"/><text x="13.1205%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="12.8705%" y="357" width="0.0232%" height="15" fill="rgb(244,68,36)" fg:x="4998" fg:w="9"/><text x="13.1205%" y="367.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.20%)</title><rect x="12.8679%" y="453" width="0.2009%" height="15" fill="rgb(232,229,15)" fg:x="4997" fg:w="78"/><text x="13.1179%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (68 samples, 0.18%)</title><rect x="12.8937%" y="437" width="0.1751%" height="15" fill="rgb(254,30,23)" fg:x="5007" fg:w="68"/><text x="13.1437%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (66 samples, 0.17%)</title><rect x="12.8988%" y="421" width="0.1700%" height="15" fill="rgb(235,160,14)" fg:x="5009" fg:w="66"/><text x="13.1488%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (66 samples, 0.17%)</title><rect x="12.8988%" y="405" width="0.1700%" height="15" fill="rgb(212,155,44)" fg:x="5009" fg:w="66"/><text x="13.1488%" y="415.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="13.0688%" y="453" width="0.0129%" height="15" fill="rgb(226,2,50)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="463.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="13.0688%" y="437" width="0.0129%" height="15" fill="rgb(234,177,6)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="447.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="13.0688%" y="421" width="0.0129%" height="15" fill="rgb(217,24,9)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="431.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="13.0688%" y="405" width="0.0129%" height="15" fill="rgb(220,13,46)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="415.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="13.0688%" y="389" width="0.0129%" height="15" fill="rgb(239,221,27)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="399.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="13.0688%" y="373" width="0.0129%" height="15" fill="rgb(222,198,25)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="383.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="13.0688%" y="357" width="0.0129%" height="15" fill="rgb(211,99,13)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="367.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="13.0688%" y="341" width="0.0129%" height="15" fill="rgb(232,111,31)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="351.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="13.0688%" y="325" width="0.0129%" height="15" fill="rgb(245,82,37)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="13.0688%" y="309" width="0.0129%" height="15" fill="rgb(227,149,46)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="319.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="13.0688%" y="293" width="0.0129%" height="15" fill="rgb(218,36,50)" fg:x="5075" fg:w="5"/><text x="13.3188%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::fragged::Fragged&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt;&gt; (88 samples, 0.23%)</title><rect x="12.8679%" y="469" width="0.2266%" height="15" fill="rgb(226,80,48)" fg:x="4997" fg:w="88"/><text x="13.1179%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::fragged::Fragged&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="13.0817%" y="453" width="0.0129%" height="15" fill="rgb(238,224,15)" fg:x="5080" fg:w="5"/><text x="13.3317%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;core::num::nonzero::NonZeroU32,alloc::sync::Weak&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt;&gt;&gt; (85 samples, 0.22%)</title><rect x="13.0945%" y="469" width="0.2189%" height="15" fill="rgb(241,136,10)" fg:x="5085" fg:w="85"/><text x="13.3445%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.22%)</title><rect x="13.0945%" y="453" width="0.2189%" height="15" fill="rgb(208,32,45)" fg:x="5085" fg:w="85"/><text x="13.3445%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (85 samples, 0.22%)</title><rect x="13.0945%" y="437" width="0.2189%" height="15" fill="rgb(207,135,9)" fg:x="5085" fg:w="85"/><text x="13.3445%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (76 samples, 0.20%)</title><rect x="13.1177%" y="421" width="0.1957%" height="15" fill="rgb(206,86,44)" fg:x="5094" fg:w="76"/><text x="13.3677%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (76 samples, 0.20%)</title><rect x="13.1177%" y="405" width="0.1957%" height="15" fill="rgb(245,177,15)" fg:x="5094" fg:w="76"/><text x="13.3677%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;zssp::zeta::MutableState&lt;benchmark::TestApplication&gt;&gt;&gt; (66 samples, 0.17%)</title><rect x="13.3134%" y="469" width="0.1700%" height="15" fill="rgb(206,64,50)" fg:x="5170" fg:w="66"/><text x="13.5634%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.17%)</title><rect x="13.3134%" y="453" width="0.1700%" height="15" fill="rgb(234,36,40)" fg:x="5170" fg:w="66"/><text x="13.5634%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (66 samples, 0.17%)</title><rect x="13.3134%" y="437" width="0.1700%" height="15" fill="rgb(213,64,8)" fg:x="5170" fg:w="66"/><text x="13.5634%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (57 samples, 0.15%)</title><rect x="13.3366%" y="421" width="0.1468%" height="15" fill="rgb(210,75,36)" fg:x="5179" fg:w="57"/><text x="13.5866%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (57 samples, 0.15%)</title><rect x="13.3366%" y="405" width="0.1468%" height="15" fill="rgb(229,88,21)" fg:x="5179" fg:w="57"/><text x="13.5866%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="13.5529%" y="325" width="0.0103%" height="15" fill="rgb(252,204,47)" fg:x="5263" fg:w="4"/><text x="13.8029%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.05%)</title><rect x="13.5220%" y="341" width="0.0515%" height="15" fill="rgb(208,77,27)" fg:x="5251" fg:w="20"/><text x="13.7720%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="13.5632%" y="325" width="0.0103%" height="15" fill="rgb(221,76,26)" fg:x="5267" fg:w="4"/><text x="13.8132%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.02%)</title><rect x="13.6018%" y="325" width="0.0180%" height="15" fill="rgb(225,139,18)" fg:x="5282" fg:w="7"/><text x="13.8518%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (62 samples, 0.16%)</title><rect x="13.4963%" y="389" width="0.1597%" height="15" fill="rgb(230,137,11)" fg:x="5241" fg:w="62"/><text x="13.7463%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (62 samples, 0.16%)</title><rect x="13.4963%" y="373" width="0.1597%" height="15" fill="rgb(212,28,1)" fg:x="5241" fg:w="62"/><text x="13.7463%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (62 samples, 0.16%)</title><rect x="13.4963%" y="357" width="0.1597%" height="15" fill="rgb(248,164,17)" fg:x="5241" fg:w="62"/><text x="13.7463%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (32 samples, 0.08%)</title><rect x="13.5735%" y="341" width="0.0824%" height="15" fill="rgb(222,171,42)" fg:x="5271" fg:w="32"/><text x="13.8235%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.04%)</title><rect x="13.6199%" y="325" width="0.0361%" height="15" fill="rgb(243,84,45)" fg:x="5289" fg:w="14"/><text x="13.8699%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (17 samples, 0.04%)</title><rect x="13.6559%" y="389" width="0.0438%" height="15" fill="rgb(252,49,23)" fg:x="5303" fg:w="17"/><text x="13.9059%" y="399.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8 samples, 0.02%)</title><rect x="13.6791%" y="373" width="0.0206%" height="15" fill="rgb(215,19,7)" fg:x="5312" fg:w="8"/><text x="13.9291%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.02%)</title><rect x="13.6791%" y="357" width="0.0206%" height="15" fill="rgb(238,81,41)" fg:x="5312" fg:w="8"/><text x="13.9291%" y="367.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.02%)</title><rect x="13.6791%" y="341" width="0.0206%" height="15" fill="rgb(210,199,37)" fg:x="5312" fg:w="8"/><text x="13.9291%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (104 samples, 0.27%)</title><rect x="13.4911%" y="421" width="0.2678%" height="15" fill="rgb(244,192,49)" fg:x="5239" fg:w="104"/><text x="13.7411%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (104 samples, 0.27%)</title><rect x="13.4911%" y="405" width="0.2678%" height="15" fill="rgb(226,211,11)" fg:x="5239" fg:w="104"/><text x="13.7411%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (23 samples, 0.06%)</title><rect x="13.6997%" y="389" width="0.0592%" height="15" fill="rgb(236,162,54)" fg:x="5320" fg:w="23"/><text x="13.9497%" y="399.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::hash::Hash&gt;::hash (23 samples, 0.06%)</title><rect x="13.6997%" y="373" width="0.0592%" height="15" fill="rgb(220,229,9)" fg:x="5320" fg:w="23"/><text x="13.9497%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (23 samples, 0.06%)</title><rect x="13.6997%" y="357" width="0.0592%" height="15" fill="rgb(250,87,22)" fg:x="5320" fg:w="23"/><text x="13.9497%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u32 (23 samples, 0.06%)</title><rect x="13.6997%" y="341" width="0.0592%" height="15" fill="rgb(239,43,17)" fg:x="5320" fg:w="23"/><text x="13.9497%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.06%)</title><rect x="13.6997%" y="325" width="0.0592%" height="15" fill="rgb(231,177,25)" fg:x="5320" fg:w="23"/><text x="13.9497%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (23 samples, 0.06%)</title><rect x="13.6997%" y="309" width="0.0592%" height="15" fill="rgb(219,179,1)" fg:x="5320" fg:w="23"/><text x="13.9497%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.06%)</title><rect x="13.6997%" y="293" width="0.0592%" height="15" fill="rgb(238,219,53)" fg:x="5320" fg:w="23"/><text x="13.9497%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (15 samples, 0.04%)</title><rect x="13.7203%" y="277" width="0.0386%" height="15" fill="rgb(232,167,36)" fg:x="5328" fg:w="15"/><text x="13.9703%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (5 samples, 0.01%)</title><rect x="13.7847%" y="373" width="0.0129%" height="15" fill="rgb(244,19,51)" fg:x="5353" fg:w="5"/><text x="14.0347%" y="383.50"></text></g><g><title>hashbrown::raw::h2 (8 samples, 0.02%)</title><rect x="13.7975%" y="373" width="0.0206%" height="15" fill="rgb(224,6,22)" fg:x="5358" fg:w="8"/><text x="14.0475%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (29 samples, 0.07%)</title><rect x="13.8181%" y="373" width="0.0747%" height="15" fill="rgb(224,145,5)" fg:x="5366" fg:w="29"/><text x="14.0681%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (29 samples, 0.07%)</title><rect x="13.8181%" y="357" width="0.0747%" height="15" fill="rgb(234,130,49)" fg:x="5366" fg:w="29"/><text x="14.0681%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.07%)</title><rect x="13.8181%" y="341" width="0.0747%" height="15" fill="rgb(254,6,2)" fg:x="5366" fg:w="29"/><text x="14.0681%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (163 samples, 0.42%)</title><rect x="13.4911%" y="437" width="0.4197%" height="15" fill="rgb(208,96,46)" fg:x="5239" fg:w="163"/><text x="13.7411%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (59 samples, 0.15%)</title><rect x="13.7589%" y="421" width="0.1519%" height="15" fill="rgb(239,3,39)" fg:x="5343" fg:w="59"/><text x="14.0089%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (59 samples, 0.15%)</title><rect x="13.7589%" y="405" width="0.1519%" height="15" fill="rgb(233,210,1)" fg:x="5343" fg:w="59"/><text x="14.0089%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (59 samples, 0.15%)</title><rect x="13.7589%" y="389" width="0.1519%" height="15" fill="rgb(244,137,37)" fg:x="5343" fg:w="59"/><text x="14.0089%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="13.8928%" y="373" width="0.0180%" height="15" fill="rgb(240,136,2)" fg:x="5395" fg:w="7"/><text x="14.1428%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.02%)</title><rect x="13.8928%" y="357" width="0.0180%" height="15" fill="rgb(239,18,37)" fg:x="5395" fg:w="7"/><text x="14.1428%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (164 samples, 0.42%)</title><rect x="13.4911%" y="469" width="0.4223%" height="15" fill="rgb(218,185,22)" fg:x="5239" fg:w="164"/><text x="13.7411%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (164 samples, 0.42%)</title><rect x="13.4911%" y="453" width="0.4223%" height="15" fill="rgb(225,218,4)" fg:x="5239" fg:w="164"/><text x="13.7411%" y="463.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="13.9315%" y="437" width="0.0129%" height="15" fill="rgb(230,182,32)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="447.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="13.9315%" y="421" width="0.0129%" height="15" fill="rgb(242,56,43)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="431.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="13.9315%" y="405" width="0.0129%" height="15" fill="rgb(233,99,24)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="415.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="13.9315%" y="389" width="0.0129%" height="15" fill="rgb(234,209,42)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="399.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="13.9315%" y="373" width="0.0129%" height="15" fill="rgb(227,7,12)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="383.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="13.9315%" y="357" width="0.0129%" height="15" fill="rgb(245,203,43)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="367.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="13.9315%" y="341" width="0.0129%" height="15" fill="rgb(238,205,33)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="351.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="13.9315%" y="325" width="0.0129%" height="15" fill="rgb(231,56,7)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="335.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="13.9315%" y="309" width="0.0129%" height="15" fill="rgb(244,186,29)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="319.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="13.9315%" y="293" width="0.0129%" height="15" fill="rgb(234,111,31)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="303.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="13.9315%" y="277" width="0.0129%" height="15" fill="rgb(241,149,10)" fg:x="5410" fg:w="5"/><text x="14.1815%" y="287.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42 samples, 0.11%)</title><rect x="13.9134%" y="469" width="0.1082%" height="15" fill="rgb(249,206,44)" fg:x="5403" fg:w="42"/><text x="14.1634%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (38 samples, 0.10%)</title><rect x="13.9237%" y="453" width="0.0979%" height="15" fill="rgb(251,153,30)" fg:x="5407" fg:w="38"/><text x="14.1737%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (30 samples, 0.08%)</title><rect x="13.9443%" y="437" width="0.0773%" height="15" fill="rgb(239,152,38)" fg:x="5415" fg:w="30"/><text x="14.1943%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.08%)</title><rect x="13.9443%" y="421" width="0.0773%" height="15" fill="rgb(249,139,47)" fg:x="5415" fg:w="30"/><text x="14.1943%" y="431.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="14.0654%" y="437" width="0.0129%" height="15" fill="rgb(244,64,35)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="447.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="14.0654%" y="421" width="0.0129%" height="15" fill="rgb(216,46,15)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="431.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="14.0654%" y="405" width="0.0129%" height="15" fill="rgb(250,74,19)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="415.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="14.0654%" y="389" width="0.0129%" height="15" fill="rgb(249,42,33)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="399.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="14.0654%" y="373" width="0.0129%" height="15" fill="rgb(242,149,17)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="383.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="14.0654%" y="357" width="0.0129%" height="15" fill="rgb(244,29,21)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="367.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="14.0654%" y="341" width="0.0129%" height="15" fill="rgb(220,130,37)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="351.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="14.0654%" y="325" width="0.0129%" height="15" fill="rgb(211,67,2)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="335.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="14.0654%" y="309" width="0.0129%" height="15" fill="rgb(235,68,52)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="319.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="14.0654%" y="293" width="0.0129%" height="15" fill="rgb(246,142,3)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="303.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="14.0654%" y="277" width="0.0129%" height="15" fill="rgb(241,25,7)" fg:x="5462" fg:w="5"/><text x="14.3154%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (128 samples, 0.33%)</title><rect x="14.0782%" y="437" width="0.3296%" height="15" fill="rgb(242,119,39)" fg:x="5467" fg:w="128"/><text x="14.3282%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (128 samples, 0.33%)</title><rect x="14.0782%" y="421" width="0.3296%" height="15" fill="rgb(241,98,45)" fg:x="5467" fg:w="128"/><text x="14.3282%" y="431.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (162 samples, 0.42%)</title><rect x="14.0216%" y="469" width="0.4172%" height="15" fill="rgb(254,28,30)" fg:x="5445" fg:w="162"/><text x="14.2716%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (162 samples, 0.42%)</title><rect x="14.0216%" y="453" width="0.4172%" height="15" fill="rgb(241,142,54)" fg:x="5445" fg:w="162"/><text x="14.2716%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (12 samples, 0.03%)</title><rect x="14.4078%" y="437" width="0.0309%" height="15" fill="rgb(222,85,15)" fg:x="5595" fg:w="12"/><text x="14.6578%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.01%)</title><rect x="14.4413%" y="453" width="0.0129%" height="15" fill="rgb(210,85,47)" fg:x="5608" fg:w="5"/><text x="14.6913%" y="463.50"></text></g><g><title>zssp::antireplay::Window&lt;_,_&gt;::check (13 samples, 0.03%)</title><rect x="14.4388%" y="469" width="0.0335%" height="15" fill="rgb(224,206,25)" fg:x="5607" fg:w="13"/><text x="14.6888%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (7 samples, 0.02%)</title><rect x="14.4542%" y="453" width="0.0180%" height="15" fill="rgb(243,201,19)" fg:x="5613" fg:w="7"/><text x="14.7042%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.02%)</title><rect x="14.4542%" y="437" width="0.0180%" height="15" fill="rgb(236,59,4)" fg:x="5613" fg:w="7"/><text x="14.7042%" y="447.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (20 samples, 0.05%)</title><rect x="14.5933%" y="453" width="0.0515%" height="15" fill="rgb(254,179,45)" fg:x="5667" fg:w="20"/><text x="14.8433%" y="463.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (20 samples, 0.05%)</title><rect x="14.5933%" y="437" width="0.0515%" height="15" fill="rgb(226,14,10)" fg:x="5667" fg:w="20"/><text x="14.8433%" y="447.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (20 samples, 0.05%)</title><rect x="14.5933%" y="421" width="0.0515%" height="15" fill="rgb(244,27,41)" fg:x="5667" fg:w="20"/><text x="14.8433%" y="431.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (13 samples, 0.03%)</title><rect x="14.6113%" y="405" width="0.0335%" height="15" fill="rgb(235,35,32)" fg:x="5674" fg:w="13"/><text x="14.8613%" y="415.50"></text></g><g><title>core::ptr::write (12 samples, 0.03%)</title><rect x="14.6139%" y="389" width="0.0309%" height="15" fill="rgb(218,68,31)" fg:x="5675" fg:w="12"/><text x="14.8639%" y="399.50"></text></g><g><title>core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::ne (5 samples, 0.01%)</title><rect x="14.6448%" y="453" width="0.0129%" height="15" fill="rgb(207,120,37)" fg:x="5687" fg:w="5"/><text x="14.8948%" y="463.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_ne (5 samples, 0.01%)</title><rect x="14.6448%" y="437" width="0.0129%" height="15" fill="rgb(227,98,0)" fg:x="5687" fg:w="5"/><text x="14.8948%" y="447.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (5 samples, 0.01%)</title><rect x="14.6448%" y="421" width="0.0129%" height="15" fill="rgb(207,7,3)" fg:x="5687" fg:w="5"/><text x="14.8948%" y="431.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (7 samples, 0.02%)</title><rect x="14.6628%" y="453" width="0.0180%" height="15" fill="rgb(206,98,19)" fg:x="5694" fg:w="7"/><text x="14.9128%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (7 samples, 0.02%)</title><rect x="14.6628%" y="437" width="0.0180%" height="15" fill="rgb(217,5,26)" fg:x="5694" fg:w="7"/><text x="14.9128%" y="447.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="14.6628%" y="421" width="0.0180%" height="15" fill="rgb(235,190,38)" fg:x="5694" fg:w="7"/><text x="14.9128%" y="431.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (7 samples, 0.02%)</title><rect x="14.6628%" y="405" width="0.0180%" height="15" fill="rgb(247,86,24)" fg:x="5694" fg:w="7"/><text x="14.9128%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_shl (6 samples, 0.02%)</title><rect x="14.6885%" y="453" width="0.0155%" height="15" fill="rgb(205,101,16)" fg:x="5704" fg:w="6"/><text x="14.9385%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shl (6 samples, 0.02%)</title><rect x="14.6885%" y="437" width="0.0155%" height="15" fill="rgb(246,168,33)" fg:x="5704" fg:w="6"/><text x="14.9385%" y="447.50"></text></g><g><title>zssp::fragged::Fragged&lt;Fragment,_&gt;::assemble (98 samples, 0.25%)</title><rect x="14.4722%" y="469" width="0.2524%" height="15" fill="rgb(231,114,1)" fg:x="5620" fg:w="98"/><text x="14.7222%" y="479.50"></text></g><g><title>zssp::fragged::Fragged&lt;Fragment,_&gt;::drop_in_place (5 samples, 0.01%)</title><rect x="14.7117%" y="453" width="0.0129%" height="15" fill="rgb(207,184,53)" fg:x="5713" fg:w="5"/><text x="14.9617%" y="463.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (26 samples, 0.07%)</title><rect x="14.7246%" y="453" width="0.0670%" height="15" fill="rgb(224,95,51)" fg:x="5718" fg:w="26"/><text x="14.9746%" y="463.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (26 samples, 0.07%)</title><rect x="14.7246%" y="437" width="0.0670%" height="15" fill="rgb(212,188,45)" fg:x="5718" fg:w="26"/><text x="14.9746%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (26 samples, 0.07%)</title><rect x="14.7246%" y="421" width="0.0670%" height="15" fill="rgb(223,154,38)" fg:x="5718" fg:w="26"/><text x="14.9746%" y="431.50"></text></g><g><title>zssp::zeta::from_nonce (32 samples, 0.08%)</title><rect x="14.7246%" y="469" width="0.0824%" height="15" fill="rgb(251,22,52)" fg:x="5718" fg:w="32"/><text x="14.9746%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be_bytes (6 samples, 0.02%)</title><rect x="14.7915%" y="453" width="0.0155%" height="15" fill="rgb(229,209,22)" fg:x="5744" fg:w="6"/><text x="15.0415%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be (6 samples, 0.02%)</title><rect x="14.7915%" y="437" width="0.0155%" height="15" fill="rgb(234,138,34)" fg:x="5744" fg:w="6"/><text x="15.0415%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (6 samples, 0.02%)</title><rect x="14.7915%" y="421" width="0.0155%" height="15" fill="rgb(212,95,11)" fg:x="5744" fg:w="6"/><text x="15.0415%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::convert::AsMut&lt;[T]&gt;&gt;::as_mut (4 samples, 0.01%)</title><rect x="14.8405%" y="453" width="0.0103%" height="15" fill="rgb(240,179,47)" fg:x="5763" fg:w="4"/><text x="15.0905%" y="463.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.18%)</title><rect x="14.8585%" y="453" width="0.1777%" height="15" fill="rgb(240,163,11)" fg:x="5770" fg:w="69"/><text x="15.1085%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (69 samples, 0.18%)</title><rect x="14.8585%" y="437" width="0.1777%" height="15" fill="rgb(236,37,12)" fg:x="5770" fg:w="69"/><text x="15.1085%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (68 samples, 0.18%)</title><rect x="14.8611%" y="421" width="0.1751%" height="15" fill="rgb(232,164,16)" fg:x="5771" fg:w="68"/><text x="15.1111%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (68 samples, 0.18%)</title><rect x="14.8611%" y="405" width="0.1751%" height="15" fill="rgb(244,205,15)" fg:x="5771" fg:w="68"/><text x="15.1111%" y="415.50"></text></g><g><title>CRYPTO_gcm128_decrypt (249 samples, 0.64%)</title><rect x="15.4508%" y="357" width="0.6412%" height="15" fill="rgb(223,117,47)" fg:x="6000" fg:w="249"/><text x="15.7008%" y="367.50"></text></g><g><title>[libcrypto.so.3] (120 samples, 0.31%)</title><rect x="15.7830%" y="341" width="0.3090%" height="15" fill="rgb(244,107,35)" fg:x="6129" fg:w="120"/><text x="16.0330%" y="351.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="16.0791%" y="325" width="0.0129%" height="15" fill="rgb(205,140,8)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="335.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="16.0791%" y="309" width="0.0129%" height="15" fill="rgb(228,84,46)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="319.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="16.0791%" y="293" width="0.0129%" height="15" fill="rgb(254,188,9)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="16.0791%" y="277" width="0.0129%" height="15" fill="rgb(206,112,54)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="16.0791%" y="261" width="0.0129%" height="15" fill="rgb(216,84,49)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="16.0791%" y="245" width="0.0129%" height="15" fill="rgb(214,194,35)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="255.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="16.0791%" y="229" width="0.0129%" height="15" fill="rgb(249,28,3)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="239.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="16.0791%" y="213" width="0.0129%" height="15" fill="rgb(222,56,52)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="16.0791%" y="197" width="0.0129%" height="15" fill="rgb(245,217,50)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="16.0791%" y="181" width="0.0129%" height="15" fill="rgb(213,201,24)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="191.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="16.0791%" y="165" width="0.0129%" height="15" fill="rgb(248,116,28)" fg:x="6244" fg:w="5"/><text x="16.3291%" y="175.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (478 samples, 1.23%)</title><rect x="16.0920%" y="357" width="1.2309%" height="15" fill="rgb(219,72,43)" fg:x="6249" fg:w="478"/><text x="16.3420%" y="367.50"></text></g><g><title>[libcrypto.so.3] (360 samples, 0.93%)</title><rect x="16.3958%" y="341" width="0.9270%" height="15" fill="rgb(209,138,14)" fg:x="6367" fg:w="360"/><text x="16.6458%" y="351.50"></text></g><g><title>[libcrypto.so.3] (22 samples, 0.06%)</title><rect x="17.2662%" y="325" width="0.0567%" height="15" fill="rgb(222,18,33)" fg:x="6705" fg:w="22"/><text x="17.5162%" y="335.50"></text></g><g><title>CRYPTO_gcm128_setiv (23 samples, 0.06%)</title><rect x="17.3229%" y="357" width="0.0592%" height="15" fill="rgb(213,199,7)" fg:x="6727" fg:w="23"/><text x="17.5729%" y="367.50"></text></g><g><title>[libcrypto.so.3] (20 samples, 0.05%)</title><rect x="17.3306%" y="341" width="0.0515%" height="15" fill="rgb(250,110,10)" fg:x="6730" fg:w="20"/><text x="17.5806%" y="351.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::decrypt_in_place (4,848 samples, 12.48%)</title><rect x="15.0362%" y="453" width="12.4842%" height="15" fill="rgb(248,123,6)" fg:x="5839" fg:w="4848"/><text x="15.2862%" y="463.50">&lt;zssp::crypto_impl:..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (4,846 samples, 12.48%)</title><rect x="15.0413%" y="437" width="12.4791%" height="15" fill="rgb(206,91,31)" fg:x="5841" fg:w="4846"/><text x="15.2913%" y="447.50">zssp::crypto_impl::..</text></g><g><title>EVP_DecryptUpdate (4,846 samples, 12.48%)</title><rect x="15.0413%" y="421" width="12.4791%" height="15" fill="rgb(211,154,13)" fg:x="5841" fg:w="4846"/><text x="15.2913%" y="431.50">EVP_DecryptUpdate</text></g><g><title>[libcrypto.so.3] (4,745 samples, 12.22%)</title><rect x="15.3014%" y="405" width="12.2190%" height="15" fill="rgb(225,148,7)" fg:x="5942" fg:w="4745"/><text x="15.5514%" y="415.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (4,741 samples, 12.21%)</title><rect x="15.3117%" y="389" width="12.2087%" height="15" fill="rgb(220,160,43)" fg:x="5946" fg:w="4741"/><text x="15.5617%" y="399.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (4,719 samples, 12.15%)</title><rect x="15.3684%" y="373" width="12.1520%" height="15" fill="rgb(213,52,39)" fg:x="5968" fg:w="4719"/><text x="15.6184%" y="383.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (3,937 samples, 10.14%)</title><rect x="17.3821%" y="357" width="10.1383%" height="15" fill="rgb(243,137,7)" fg:x="6750" fg:w="3937"/><text x="17.6321%" y="367.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (3,769 samples, 9.71%)</title><rect x="17.8147%" y="341" width="9.7057%" height="15" fill="rgb(230,79,13)" fg:x="6918" fg:w="3769"/><text x="18.0647%" y="351.50">[libcrypto.so...</text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="27.5050%" y="325" width="0.0155%" height="15" fill="rgb(247,105,23)" fg:x="10681" fg:w="6"/><text x="27.7550%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="27.5050%" y="309" width="0.0155%" height="15" fill="rgb(223,179,41)" fg:x="10681" fg:w="6"/><text x="27.7550%" y="319.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="27.5075%" y="293" width="0.0129%" height="15" fill="rgb(218,9,34)" fg:x="10682" fg:w="5"/><text x="27.7575%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="27.5075%" y="277" width="0.0129%" height="15" fill="rgb(222,106,8)" fg:x="10682" fg:w="5"/><text x="27.7575%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="27.5075%" y="261" width="0.0129%" height="15" fill="rgb(211,220,0)" fg:x="10682" fg:w="5"/><text x="27.7575%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="27.5075%" y="245" width="0.0129%" height="15" fill="rgb(229,52,16)" fg:x="10682" fg:w="5"/><text x="27.7575%" y="255.50"></text></g><g><title>schedule (4 samples, 0.01%)</title><rect x="27.5101%" y="229" width="0.0103%" height="15" fill="rgb(212,155,18)" fg:x="10683" fg:w="4"/><text x="27.7601%" y="239.50"></text></g><g><title>__schedule (4 samples, 0.01%)</title><rect x="27.5101%" y="213" width="0.0103%" height="15" fill="rgb(242,21,14)" fg:x="10683" fg:w="4"/><text x="27.7601%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.01%)</title><rect x="27.5101%" y="197" width="0.0103%" height="15" fill="rgb(222,19,48)" fg:x="10683" fg:w="4"/><text x="27.7601%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="27.5101%" y="181" width="0.0103%" height="15" fill="rgb(232,45,27)" fg:x="10683" fg:w="4"/><text x="27.7601%" y="191.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.01%)</title><rect x="27.5101%" y="165" width="0.0103%" height="15" fill="rgb(249,103,42)" fg:x="10683" fg:w="4"/><text x="27.7601%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec&gt; (13 samples, 0.03%)</title><rect x="27.5281%" y="437" width="0.0335%" height="15" fill="rgb(246,81,33)" fg:x="10690" fg:w="13"/><text x="27.7781%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (13 samples, 0.03%)</title><rect x="27.5281%" y="421" width="0.0335%" height="15" fill="rgb(252,33,42)" fg:x="10690" fg:w="13"/><text x="27.7781%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="27.5281%" y="405" width="0.0335%" height="15" fill="rgb(209,212,41)" fg:x="10690" fg:w="13"/><text x="27.7781%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (12 samples, 0.03%)</title><rect x="27.5307%" y="389" width="0.0309%" height="15" fill="rgb(207,154,6)" fg:x="10691" fg:w="12"/><text x="27.7807%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (12 samples, 0.03%)</title><rect x="27.5307%" y="373" width="0.0309%" height="15" fill="rgb(223,64,47)" fg:x="10691" fg:w="12"/><text x="27.7807%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.03%)</title><rect x="27.5307%" y="357" width="0.0309%" height="15" fill="rgb(211,161,38)" fg:x="10691" fg:w="12"/><text x="27.7807%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="27.6363%" y="341" width="0.0155%" height="15" fill="rgb(219,138,40)" fg:x="10732" fg:w="6"/><text x="27.8863%" y="351.50"></text></g><g><title>[libcrypto.so.3] (20 samples, 0.05%)</title><rect x="27.6517%" y="341" width="0.0515%" height="15" fill="rgb(241,228,46)" fg:x="10738" fg:w="20"/><text x="27.9017%" y="351.50"></text></g><g><title>CRYPTO_gcm128_finish (40 samples, 0.10%)</title><rect x="27.6028%" y="357" width="0.1030%" height="15" fill="rgb(223,209,38)" fg:x="10719" fg:w="40"/><text x="27.8528%" y="367.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (59 samples, 0.15%)</title><rect x="27.5616%" y="437" width="0.1519%" height="15" fill="rgb(236,164,45)" fg:x="10703" fg:w="59"/><text x="27.8116%" y="447.50"></text></g><g><title>EVP_DecryptFinal_ex (59 samples, 0.15%)</title><rect x="27.5616%" y="421" width="0.1519%" height="15" fill="rgb(231,15,5)" fg:x="10703" fg:w="59"/><text x="27.8116%" y="431.50"></text></g><g><title>[libcrypto.so.3] (50 samples, 0.13%)</title><rect x="27.5848%" y="405" width="0.1288%" height="15" fill="rgb(252,35,15)" fg:x="10712" fg:w="50"/><text x="27.8348%" y="415.50"></text></g><g><title>[libcrypto.so.3] (50 samples, 0.13%)</title><rect x="27.5848%" y="389" width="0.1288%" height="15" fill="rgb(248,181,18)" fg:x="10712" fg:w="50"/><text x="27.8348%" y="399.50"></text></g><g><title>[libcrypto.so.3] (46 samples, 0.12%)</title><rect x="27.5951%" y="373" width="0.1185%" height="15" fill="rgb(233,39,42)" fg:x="10716" fg:w="46"/><text x="27.8451%" y="383.50"></text></g><g><title>OSSL_PARAM_get_octet_string (5 samples, 0.01%)</title><rect x="27.8088%" y="389" width="0.0129%" height="15" fill="rgb(238,110,33)" fg:x="10799" fg:w="5"/><text x="28.0588%" y="399.50"></text></g><g><title>[libcrypto.so.3] (4 samples, 0.01%)</title><rect x="27.8114%" y="373" width="0.0103%" height="15" fill="rgb(233,195,10)" fg:x="10800" fg:w="4"/><text x="28.0614%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (27 samples, 0.07%)</title><rect x="27.8217%" y="389" width="0.0695%" height="15" fill="rgb(254,105,3)" fg:x="10804" fg:w="27"/><text x="28.0717%" y="399.50"></text></g><g><title>[libc.so.6] (16 samples, 0.04%)</title><rect x="27.8500%" y="373" width="0.0412%" height="15" fill="rgb(221,225,9)" fg:x="10815" fg:w="16"/><text x="28.1000%" y="383.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::finish (145 samples, 0.37%)</title><rect x="27.5204%" y="453" width="0.3734%" height="15" fill="rgb(224,227,45)" fg:x="10687" fg:w="145"/><text x="27.7704%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::set_tag (70 samples, 0.18%)</title><rect x="27.7135%" y="437" width="0.1803%" height="15" fill="rgb(229,198,43)" fg:x="10762" fg:w="70"/><text x="27.9635%" y="447.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (70 samples, 0.18%)</title><rect x="27.7135%" y="421" width="0.1803%" height="15" fill="rgb(206,209,35)" fg:x="10762" fg:w="70"/><text x="27.9635%" y="431.50"></text></g><g><title>[libcrypto.so.3] (40 samples, 0.10%)</title><rect x="27.7908%" y="405" width="0.1030%" height="15" fill="rgb(245,195,53)" fg:x="10792" fg:w="40"/><text x="28.0408%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.05%)</title><rect x="27.8964%" y="437" width="0.0464%" height="15" fill="rgb(240,92,26)" fg:x="10833" fg:w="18"/><text x="28.1464%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (18 samples, 0.05%)</title><rect x="27.8964%" y="421" width="0.0464%" height="15" fill="rgb(207,40,23)" fg:x="10833" fg:w="18"/><text x="28.1464%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (17 samples, 0.04%)</title><rect x="27.8990%" y="405" width="0.0438%" height="15" fill="rgb(223,111,35)" fg:x="10834" fg:w="17"/><text x="28.1490%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.04%)</title><rect x="27.8990%" y="389" width="0.0438%" height="15" fill="rgb(229,147,28)" fg:x="10834" fg:w="17"/><text x="28.1490%" y="399.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="28.1951%" y="341" width="0.0361%" height="15" fill="rgb(211,29,28)" fg:x="10949" fg:w="14"/><text x="28.4451%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (37 samples, 0.10%)</title><rect x="28.1487%" y="357" width="0.0953%" height="15" fill="rgb(228,72,33)" fg:x="10931" fg:w="37"/><text x="28.3987%" y="367.50"></text></g><g><title>strcmp@plt (5 samples, 0.01%)</title><rect x="28.2311%" y="341" width="0.0129%" height="15" fill="rgb(205,214,31)" fg:x="10963" fg:w="5"/><text x="28.4811%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (70 samples, 0.18%)</title><rect x="28.0715%" y="389" width="0.1803%" height="15" fill="rgb(224,111,15)" fg:x="10901" fg:w="70"/><text x="28.3215%" y="399.50"></text></g><g><title>[libcrypto.so.3] (47 samples, 0.12%)</title><rect x="28.1307%" y="373" width="0.1210%" height="15" fill="rgb(253,21,26)" fg:x="10924" fg:w="47"/><text x="28.3807%" y="383.50"></text></g><g><title>[libc.so.6] (22 samples, 0.06%)</title><rect x="28.4063%" y="341" width="0.0567%" height="15" fill="rgb(245,139,43)" fg:x="11031" fg:w="22"/><text x="28.6563%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (50 samples, 0.13%)</title><rect x="28.3470%" y="357" width="0.1288%" height="15" fill="rgb(252,170,7)" fg:x="11008" fg:w="50"/><text x="28.5970%" y="367.50"></text></g><g><title>strcmp@plt (5 samples, 0.01%)</title><rect x="28.4629%" y="341" width="0.0129%" height="15" fill="rgb(231,118,14)" fg:x="11053" fg:w="5"/><text x="28.7129%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (92 samples, 0.24%)</title><rect x="28.2517%" y="389" width="0.2369%" height="15" fill="rgb(238,83,0)" fg:x="10971" fg:w="92"/><text x="28.5017%" y="399.50"></text></g><g><title>[libcrypto.so.3] (72 samples, 0.19%)</title><rect x="28.3032%" y="373" width="0.1854%" height="15" fill="rgb(221,39,39)" fg:x="10991" fg:w="72"/><text x="28.5532%" y="383.50"></text></g><g><title>OSSL_PARAM_locate_const (5 samples, 0.01%)</title><rect x="28.4758%" y="357" width="0.0129%" height="15" fill="rgb(222,119,46)" fg:x="11058" fg:w="5"/><text x="28.7258%" y="367.50"></text></g><g><title>EVP_CIPHER_free (13 samples, 0.03%)</title><rect x="28.4887%" y="389" width="0.0335%" height="15" fill="rgb(222,165,49)" fg:x="11063" fg:w="13"/><text x="28.7387%" y="399.50"></text></g><g><title>EVP_CIPHER_up_ref (46 samples, 0.12%)</title><rect x="28.5221%" y="389" width="0.1185%" height="15" fill="rgb(219,113,52)" fg:x="11076" fg:w="46"/><text x="28.7721%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_dec (292 samples, 0.75%)</title><rect x="27.8938%" y="453" width="0.7519%" height="15" fill="rgb(214,7,15)" fg:x="10832" fg:w="292"/><text x="28.1438%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::cipher_init (273 samples, 0.70%)</title><rect x="27.9427%" y="437" width="0.7030%" height="15" fill="rgb(235,32,4)" fg:x="10851" fg:w="273"/><text x="28.1927%" y="447.50"></text></g><g><title>EVP_CipherInit_ex (272 samples, 0.70%)</title><rect x="27.9453%" y="421" width="0.7004%" height="15" fill="rgb(238,90,54)" fg:x="10852" fg:w="272"/><text x="28.1953%" y="431.50"></text></g><g><title>[libcrypto.so.3] (272 samples, 0.70%)</title><rect x="27.9453%" y="405" width="0.7004%" height="15" fill="rgb(213,208,19)" fg:x="10852" fg:w="272"/><text x="28.1953%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.02%)</title><rect x="28.6560%" y="437" width="0.0155%" height="15" fill="rgb(233,156,4)" fg:x="11128" fg:w="6"/><text x="28.9060%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.01%)</title><rect x="28.6612%" y="421" width="0.0103%" height="15" fill="rgb(207,194,5)" fg:x="11130" fg:w="4"/><text x="28.9112%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.01%)</title><rect x="28.6612%" y="405" width="0.0103%" height="15" fill="rgb(206,111,30)" fg:x="11130" fg:w="4"/><text x="28.9112%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.02%)</title><rect x="28.6560%" y="453" width="0.0180%" height="15" fill="rgb(243,70,54)" fg:x="11128" fg:w="7"/><text x="28.9060%" y="463.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::get_unchecked_ptr (6 samples, 0.02%)</title><rect x="28.6818%" y="405" width="0.0155%" height="15" fill="rgb(242,28,8)" fg:x="11138" fg:w="6"/><text x="28.9318%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.02%)</title><rect x="28.6818%" y="389" width="0.0155%" height="15" fill="rgb(219,106,18)" fg:x="11138" fg:w="6"/><text x="28.9318%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.02%)</title><rect x="28.6818%" y="373" width="0.0155%" height="15" fill="rgb(244,222,10)" fg:x="11138" fg:w="6"/><text x="28.9318%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (253 samples, 0.65%)</title><rect x="28.6741%" y="453" width="0.6515%" height="15" fill="rgb(236,179,52)" fg:x="11135" fg:w="253"/><text x="28.9241%" y="463.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;u8,_&gt; as std::io::Write&gt;::write (253 samples, 0.65%)</title><rect x="28.6741%" y="437" width="0.6515%" height="15" fill="rgb(213,23,39)" fg:x="11135" fg:w="253"/><text x="28.9241%" y="447.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::try_extend_from_slice (250 samples, 0.64%)</title><rect x="28.6818%" y="421" width="0.6438%" height="15" fill="rgb(238,48,10)" fg:x="11138" fg:w="250"/><text x="28.9318%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (244 samples, 0.63%)</title><rect x="28.6972%" y="405" width="0.6283%" height="15" fill="rgb(251,196,23)" fg:x="11144" fg:w="244"/><text x="28.9472%" y="415.50"></text></g><g><title>[libc.so.6] (242 samples, 0.62%)</title><rect x="28.7024%" y="389" width="0.6232%" height="15" fill="rgb(250,152,24)" fg:x="11146" fg:w="242"/><text x="28.9524%" y="399.50"></text></g><g><title>zssp::antireplay::Window&lt;_,_&gt;::update (15 samples, 0.04%)</title><rect x="29.3256%" y="453" width="0.0386%" height="15" fill="rgb(209,150,17)" fg:x="11388" fg:w="15"/><text x="29.5756%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_max (15 samples, 0.04%)</title><rect x="29.3256%" y="437" width="0.0386%" height="15" fill="rgb(234,202,34)" fg:x="11388" fg:w="15"/><text x="29.5756%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_umax (15 samples, 0.04%)</title><rect x="29.3256%" y="421" width="0.0386%" height="15" fill="rgb(253,148,53)" fg:x="11388" fg:w="15"/><text x="29.5756%" y="431.50"></text></g><g><title>zssp::zeta::receive_payload_in_place (5,655 samples, 14.56%)</title><rect x="14.8070%" y="469" width="14.5624%" height="15" fill="rgb(218,129,16)" fg:x="5750" fg:w="5655"/><text x="15.0570%" y="479.50">zssp::zeta::receive_pa..</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (8,525 samples, 21.95%)</title><rect x="7.6069%" y="485" width="21.9530%" height="15" fill="rgb(216,85,19)" fg:x="2954" fg:w="8525"/><text x="7.8569%" y="495.50">zssp::zssp::Context&lt;Crypto&gt;::receive</text></g><g><title>zssp::zssp::parse_fragment_header (74 samples, 0.19%)</title><rect x="29.3694%" y="469" width="0.1906%" height="15" fill="rgb(235,228,7)" fg:x="11405" fg:w="74"/><text x="29.6194%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (60 samples, 0.15%)</title><rect x="29.6166%" y="437" width="0.1545%" height="15" fill="rgb(245,175,0)" fg:x="11501" fg:w="60"/><text x="29.8666%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.15%)</title><rect x="29.6166%" y="421" width="0.1545%" height="15" fill="rgb(208,168,36)" fg:x="11501" fg:w="60"/><text x="29.8666%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (59 samples, 0.15%)</title><rect x="29.6191%" y="405" width="0.1519%" height="15" fill="rgb(246,171,24)" fg:x="11502" fg:w="59"/><text x="29.8691%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (54 samples, 0.14%)</title><rect x="29.6320%" y="389" width="0.1391%" height="15" fill="rgb(215,142,24)" fg:x="11507" fg:w="54"/><text x="29.8820%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (54 samples, 0.14%)</title><rect x="29.6320%" y="373" width="0.1391%" height="15" fill="rgb(250,187,7)" fg:x="11507" fg:w="54"/><text x="29.8820%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (79 samples, 0.20%)</title><rect x="29.7711%" y="437" width="0.2034%" height="15" fill="rgb(228,66,33)" fg:x="11561" fg:w="79"/><text x="30.0211%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (77 samples, 0.20%)</title><rect x="29.7762%" y="421" width="0.1983%" height="15" fill="rgb(234,215,21)" fg:x="11563" fg:w="77"/><text x="30.0262%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (74 samples, 0.19%)</title><rect x="29.7839%" y="405" width="0.1906%" height="15" fill="rgb(222,191,20)" fg:x="11566" fg:w="74"/><text x="30.0339%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (74 samples, 0.19%)</title><rect x="29.7839%" y="389" width="0.1906%" height="15" fill="rgb(245,79,54)" fg:x="11566" fg:w="74"/><text x="30.0339%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLEnc as zssp::crypto::aes::Aes256Enc&gt;::encrypt_in_place (325 samples, 0.84%)</title><rect x="29.6011%" y="453" width="0.8369%" height="15" fill="rgb(240,10,37)" fg:x="11495" fg:w="325"/><text x="29.8511%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (180 samples, 0.46%)</title><rect x="29.9745%" y="437" width="0.4635%" height="15" fill="rgb(214,192,32)" fg:x="11640" fg:w="180"/><text x="30.2245%" y="447.50"></text></g><g><title>EVP_EncryptUpdate (180 samples, 0.46%)</title><rect x="29.9745%" y="421" width="0.4635%" height="15" fill="rgb(209,36,54)" fg:x="11640" fg:w="180"/><text x="30.2245%" y="431.50"></text></g><g><title>[libcrypto.so.3] (154 samples, 0.40%)</title><rect x="30.0415%" y="405" width="0.3966%" height="15" fill="rgb(220,10,11)" fg:x="11666" fg:w="154"/><text x="30.2915%" y="415.50"></text></g><g><title>[libcrypto.so.3] (123 samples, 0.32%)</title><rect x="30.1213%" y="389" width="0.3167%" height="15" fill="rgb(221,106,17)" fg:x="11697" fg:w="123"/><text x="30.3713%" y="399.50"></text></g><g><title>[libcrypto.so.3] (115 samples, 0.30%)</title><rect x="30.1419%" y="373" width="0.2961%" height="15" fill="rgb(251,142,44)" fg:x="11705" fg:w="115"/><text x="30.3919%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="30.4380%" y="437" width="0.0129%" height="15" fill="rgb(238,13,15)" fg:x="11820" fg:w="5"/><text x="30.6880%" y="447.50"></text></g><g><title>CRYPTO_gcm128_encrypt (264 samples, 0.68%)</title><rect x="30.7419%" y="357" width="0.6798%" height="15" fill="rgb(208,107,27)" fg:x="11938" fg:w="264"/><text x="30.9919%" y="367.50"></text></g><g><title>[libcrypto.so.3] (144 samples, 0.37%)</title><rect x="31.0509%" y="341" width="0.3708%" height="15" fill="rgb(205,136,37)" fg:x="12058" fg:w="144"/><text x="31.3009%" y="351.50"></text></g><g><title>[libcrypto.so.3] (20 samples, 0.05%)</title><rect x="32.6475%" y="325" width="0.0515%" height="15" fill="rgb(250,205,27)" fg:x="12678" fg:w="20"/><text x="32.8975%" y="335.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (501 samples, 1.29%)</title><rect x="31.4217%" y="357" width="1.2901%" height="15" fill="rgb(210,80,43)" fg:x="12202" fg:w="501"/><text x="31.6717%" y="367.50"></text></g><g><title>[libcrypto.so.3] (349 samples, 0.90%)</title><rect x="31.8131%" y="341" width="0.8987%" height="15" fill="rgb(247,160,36)" fg:x="12354" fg:w="349"/><text x="32.0631%" y="351.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="32.6990%" y="325" width="0.0129%" height="15" fill="rgb(234,13,49)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="335.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="32.6990%" y="309" width="0.0129%" height="15" fill="rgb(234,122,0)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="319.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="32.6990%" y="293" width="0.0129%" height="15" fill="rgb(207,146,38)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="32.6990%" y="277" width="0.0129%" height="15" fill="rgb(207,177,25)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="32.6990%" y="261" width="0.0129%" height="15" fill="rgb(211,178,42)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="32.6990%" y="245" width="0.0129%" height="15" fill="rgb(230,69,54)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="255.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="32.6990%" y="229" width="0.0129%" height="15" fill="rgb(214,135,41)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="239.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="32.6990%" y="213" width="0.0129%" height="15" fill="rgb(237,67,25)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="32.6990%" y="197" width="0.0129%" height="15" fill="rgb(222,189,50)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="32.6990%" y="181" width="0.0129%" height="15" fill="rgb(245,148,34)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="191.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="32.6990%" y="165" width="0.0129%" height="15" fill="rgb(222,29,6)" fg:x="12698" fg:w="5"/><text x="32.9490%" y="175.50"></text></g><g><title>CRYPTO_gcm128_setiv (23 samples, 0.06%)</title><rect x="32.7119%" y="357" width="0.0592%" height="15" fill="rgb(221,189,43)" fg:x="12703" fg:w="23"/><text x="32.9619%" y="367.50"></text></g><g><title>[libcrypto.so.3] (20 samples, 0.05%)</title><rect x="32.7196%" y="341" width="0.0515%" height="15" fill="rgb(207,36,27)" fg:x="12706" fg:w="20"/><text x="32.9696%" y="351.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::encrypt (3,870 samples, 9.97%)</title><rect x="30.4380%" y="453" width="9.9658%" height="15" fill="rgb(217,90,24)" fg:x="11820" fg:w="3870"/><text x="30.6880%" y="463.50">&lt;zssp::crypto_..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (3,865 samples, 9.95%)</title><rect x="30.4509%" y="437" width="9.9529%" height="15" fill="rgb(224,66,35)" fg:x="11825" fg:w="3865"/><text x="30.7009%" y="447.50">zssp::crypto_i..</text></g><g><title>EVP_EncryptUpdate (3,859 samples, 9.94%)</title><rect x="30.4664%" y="421" width="9.9374%" height="15" fill="rgb(221,13,50)" fg:x="11831" fg:w="3859"/><text x="30.7164%" y="431.50">EVP_EncryptUpd..</text></g><g><title>[libcrypto.so.3] (3,809 samples, 9.81%)</title><rect x="30.5951%" y="405" width="9.8087%" height="15" fill="rgb(236,68,49)" fg:x="11881" fg:w="3809"/><text x="30.8451%" y="415.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3] (3,805 samples, 9.80%)</title><rect x="30.6054%" y="389" width="9.7984%" height="15" fill="rgb(229,146,28)" fg:x="11885" fg:w="3805"/><text x="30.8554%" y="399.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3] (3,789 samples, 9.76%)</title><rect x="30.6466%" y="373" width="9.7572%" height="15" fill="rgb(225,31,38)" fg:x="11901" fg:w="3789"/><text x="30.8966%" y="383.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3] (2,964 samples, 7.63%)</title><rect x="32.7711%" y="357" width="7.6327%" height="15" fill="rgb(250,208,3)" fg:x="12726" fg:w="2964"/><text x="33.0211%" y="367.50">[libcrypto..</text></g><g><title>[libcrypto.so.3] (2,713 samples, 6.99%)</title><rect x="33.4175%" y="341" width="6.9863%" height="15" fill="rgb(246,54,23)" fg:x="12977" fg:w="2713"/><text x="33.6675%" y="351.50">[libcrypt..</text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="40.3909%" y="325" width="0.0129%" height="15" fill="rgb(243,76,11)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="335.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="40.3909%" y="309" width="0.0129%" height="15" fill="rgb(245,21,50)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="319.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="40.3909%" y="293" width="0.0129%" height="15" fill="rgb(228,9,43)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="40.3909%" y="277" width="0.0129%" height="15" fill="rgb(208,100,47)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="40.3909%" y="261" width="0.0129%" height="15" fill="rgb(232,26,8)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="40.3909%" y="245" width="0.0129%" height="15" fill="rgb(216,166,38)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="255.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="40.3909%" y="229" width="0.0129%" height="15" fill="rgb(251,202,51)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="239.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="40.3909%" y="213" width="0.0129%" height="15" fill="rgb(254,216,34)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="40.3909%" y="197" width="0.0129%" height="15" fill="rgb(251,32,27)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="40.3909%" y="181" width="0.0129%" height="15" fill="rgb(208,127,28)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="191.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="40.3909%" y="165" width="0.0129%" height="15" fill="rgb(224,137,22)" fg:x="15685" fg:w="5"/><text x="40.6409%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc&gt; (7 samples, 0.02%)</title><rect x="40.4064%" y="437" width="0.0180%" height="15" fill="rgb(254,70,32)" fg:x="15691" fg:w="7"/><text x="40.6564%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (7 samples, 0.02%)</title><rect x="40.4064%" y="421" width="0.0180%" height="15" fill="rgb(229,75,37)" fg:x="15691" fg:w="7"/><text x="40.6564%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="40.4064%" y="405" width="0.0180%" height="15" fill="rgb(252,64,23)" fg:x="15691" fg:w="7"/><text x="40.6564%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (6 samples, 0.02%)</title><rect x="40.4089%" y="389" width="0.0155%" height="15" fill="rgb(232,162,48)" fg:x="15692" fg:w="6"/><text x="40.6589%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (6 samples, 0.02%)</title><rect x="40.4089%" y="373" width="0.0155%" height="15" fill="rgb(246,160,12)" fg:x="15692" fg:w="6"/><text x="40.6589%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.02%)</title><rect x="40.4089%" y="357" width="0.0155%" height="15" fill="rgb(247,166,0)" fg:x="15692" fg:w="6"/><text x="40.6589%" y="367.50"></text></g><g><title>[libcrypto.so.3] (31 samples, 0.08%)</title><rect x="40.5300%" y="325" width="0.0798%" height="15" fill="rgb(249,219,21)" fg:x="15739" fg:w="31"/><text x="40.7800%" y="335.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (75 samples, 0.19%)</title><rect x="40.4244%" y="437" width="0.1931%" height="15" fill="rgb(205,209,3)" fg:x="15698" fg:w="75"/><text x="40.6744%" y="447.50"></text></g><g><title>EVP_EncryptFinal_ex (75 samples, 0.19%)</title><rect x="40.4244%" y="421" width="0.1931%" height="15" fill="rgb(243,44,1)" fg:x="15698" fg:w="75"/><text x="40.6744%" y="431.50"></text></g><g><title>[libcrypto.so.3] (61 samples, 0.16%)</title><rect x="40.4604%" y="405" width="0.1571%" height="15" fill="rgb(206,159,16)" fg:x="15712" fg:w="61"/><text x="40.7104%" y="415.50"></text></g><g><title>[libcrypto.so.3] (59 samples, 0.15%)</title><rect x="40.4656%" y="389" width="0.1519%" height="15" fill="rgb(244,77,30)" fg:x="15714" fg:w="59"/><text x="40.7156%" y="399.50"></text></g><g><title>[libcrypto.so.3] (56 samples, 0.14%)</title><rect x="40.4733%" y="373" width="0.1442%" height="15" fill="rgb(218,69,12)" fg:x="15717" fg:w="56"/><text x="40.7233%" y="383.50"></text></g><g><title>CRYPTO_gcm128_tag (55 samples, 0.14%)</title><rect x="40.4759%" y="357" width="0.1416%" height="15" fill="rgb(212,87,7)" fg:x="15718" fg:w="55"/><text x="40.7259%" y="367.50"></text></g><g><title>CRYPTO_gcm128_finish (42 samples, 0.11%)</title><rect x="40.5094%" y="341" width="0.1082%" height="15" fill="rgb(245,114,25)" fg:x="15731" fg:w="42"/><text x="40.7594%" y="351.50"></text></g><g><title>[libc.so.6] (29 samples, 0.07%)</title><rect x="40.7694%" y="373" width="0.0747%" height="15" fill="rgb(210,61,42)" fg:x="15832" fg:w="29"/><text x="41.0194%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (60 samples, 0.15%)</title><rect x="40.6922%" y="389" width="0.1545%" height="15" fill="rgb(211,52,33)" fg:x="15802" fg:w="60"/><text x="40.9422%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::finish (177 samples, 0.46%)</title><rect x="40.4038%" y="453" width="0.4558%" height="15" fill="rgb(234,58,33)" fg:x="15690" fg:w="177"/><text x="40.6538%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::get_tag (94 samples, 0.24%)</title><rect x="40.6175%" y="437" width="0.2421%" height="15" fill="rgb(220,115,36)" fg:x="15773" fg:w="94"/><text x="40.8675%" y="447.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (94 samples, 0.24%)</title><rect x="40.6175%" y="421" width="0.2421%" height="15" fill="rgb(243,153,54)" fg:x="15773" fg:w="94"/><text x="40.8675%" y="431.50"></text></g><g><title>[libcrypto.so.3] (69 samples, 0.18%)</title><rect x="40.6819%" y="405" width="0.1777%" height="15" fill="rgb(251,47,18)" fg:x="15798" fg:w="69"/><text x="40.9319%" y="415.50"></text></g><g><title>OSSL_PARAM_set_octet_string (5 samples, 0.01%)</title><rect x="40.8467%" y="389" width="0.0129%" height="15" fill="rgb(242,102,42)" fg:x="15862" fg:w="5"/><text x="41.0967%" y="399.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="40.8467%" y="373" width="0.0129%" height="15" fill="rgb(234,31,38)" fg:x="15862" fg:w="5"/><text x="41.0967%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.04%)</title><rect x="40.8596%" y="437" width="0.0386%" height="15" fill="rgb(221,117,51)" fg:x="15867" fg:w="15"/><text x="41.1096%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (13 samples, 0.03%)</title><rect x="40.8647%" y="421" width="0.0335%" height="15" fill="rgb(212,20,18)" fg:x="15869" fg:w="13"/><text x="41.1147%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (11 samples, 0.03%)</title><rect x="40.8699%" y="405" width="0.0283%" height="15" fill="rgb(245,133,36)" fg:x="15871" fg:w="11"/><text x="41.1199%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.03%)</title><rect x="40.8699%" y="389" width="0.0283%" height="15" fill="rgb(212,6,19)" fg:x="15871" fg:w="11"/><text x="41.1199%" y="399.50"></text></g><g><title>[libc.so.6] (25 samples, 0.06%)</title><rect x="41.1016%" y="341" width="0.0644%" height="15" fill="rgb(218,1,36)" fg:x="15961" fg:w="25"/><text x="41.3516%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (76 samples, 0.20%)</title><rect x="40.9755%" y="389" width="0.1957%" height="15" fill="rgb(246,84,54)" fg:x="15912" fg:w="76"/><text x="41.2255%" y="399.50"></text></g><g><title>[libcrypto.so.3] (53 samples, 0.14%)</title><rect x="41.0347%" y="373" width="0.1365%" height="15" fill="rgb(242,110,6)" fg:x="15935" fg:w="53"/><text x="41.2847%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (46 samples, 0.12%)</title><rect x="41.0527%" y="357" width="0.1185%" height="15" fill="rgb(214,47,5)" fg:x="15942" fg:w="46"/><text x="41.3027%" y="367.50"></text></g><g><title>[libc.so.6] (37 samples, 0.10%)</title><rect x="41.2948%" y="341" width="0.0953%" height="15" fill="rgb(218,159,25)" fg:x="16036" fg:w="37"/><text x="41.5448%" y="351.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="41.3772%" y="325" width="0.0129%" height="15" fill="rgb(215,211,28)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="335.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="41.3772%" y="309" width="0.0129%" height="15" fill="rgb(238,59,32)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="319.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="41.3772%" y="293" width="0.0129%" height="15" fill="rgb(226,82,3)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="41.3772%" y="277" width="0.0129%" height="15" fill="rgb(240,164,32)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="41.3772%" y="261" width="0.0129%" height="15" fill="rgb(232,46,7)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="41.3772%" y="245" width="0.0129%" height="15" fill="rgb(229,129,53)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="255.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="41.3772%" y="229" width="0.0129%" height="15" fill="rgb(234,188,29)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="239.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="41.3772%" y="213" width="0.0129%" height="15" fill="rgb(246,141,4)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="41.3772%" y="197" width="0.0129%" height="15" fill="rgb(229,23,39)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="41.3772%" y="181" width="0.0129%" height="15" fill="rgb(206,12,3)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="191.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="41.3772%" y="165" width="0.0129%" height="15" fill="rgb(252,226,20)" fg:x="16068" fg:w="5"/><text x="41.6272%" y="175.50"></text></g><g><title>OSSL_PARAM_locate (49 samples, 0.13%)</title><rect x="41.2767%" y="357" width="0.1262%" height="15" fill="rgb(216,123,35)" fg:x="16029" fg:w="49"/><text x="41.5267%" y="367.50"></text></g><g><title>strcmp@plt (5 samples, 0.01%)</title><rect x="41.3901%" y="341" width="0.0129%" height="15" fill="rgb(212,68,40)" fg:x="16073" fg:w="5"/><text x="41.6401%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (95 samples, 0.24%)</title><rect x="41.1712%" y="389" width="0.2446%" height="15" fill="rgb(254,125,32)" fg:x="15988" fg:w="95"/><text x="41.4212%" y="399.50"></text></g><g><title>[libcrypto.so.3] (62 samples, 0.16%)</title><rect x="41.2561%" y="373" width="0.1597%" height="15" fill="rgb(253,97,22)" fg:x="16021" fg:w="62"/><text x="41.5061%" y="383.50"></text></g><g><title>OSSL_PARAM_locate_const (5 samples, 0.01%)</title><rect x="41.4029%" y="357" width="0.0129%" height="15" fill="rgb(241,101,14)" fg:x="16078" fg:w="5"/><text x="41.6529%" y="367.50"></text></g><g><title>EVP_CIPHER_free (14 samples, 0.04%)</title><rect x="41.4158%" y="389" width="0.0361%" height="15" fill="rgb(238,103,29)" fg:x="16083" fg:w="14"/><text x="41.6658%" y="399.50"></text></g><g><title>EVP_CIPHER_up_ref (28 samples, 0.07%)</title><rect x="41.4519%" y="389" width="0.0721%" height="15" fill="rgb(233,195,47)" fg:x="16097" fg:w="28"/><text x="41.7019%" y="399.50"></text></g><g><title>EVP_CipherInit_ex (245 samples, 0.63%)</title><rect x="40.8982%" y="421" width="0.6309%" height="15" fill="rgb(246,218,30)" fg:x="15882" fg:w="245"/><text x="41.1482%" y="431.50"></text></g><g><title>[libcrypto.so.3] (245 samples, 0.63%)</title><rect x="40.8982%" y="405" width="0.6309%" height="15" fill="rgb(219,145,47)" fg:x="15882" fg:w="245"/><text x="41.1482%" y="415.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_enc (262 samples, 0.67%)</title><rect x="40.8596%" y="453" width="0.6747%" height="15" fill="rgb(243,12,26)" fg:x="15867" fg:w="262"/><text x="41.1096%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::cipher_init (247 samples, 0.64%)</title><rect x="40.8982%" y="437" width="0.6361%" height="15" fill="rgb(214,87,16)" fg:x="15882" fg:w="247"/><text x="41.1482%" y="447.50"></text></g><g><title>__rdl_alloc (10 samples, 0.03%)</title><rect x="41.5420%" y="277" width="0.0258%" height="15" fill="rgb(208,99,42)" fg:x="16132" fg:w="10"/><text x="41.7920%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.03%)</title><rect x="41.5420%" y="261" width="0.0258%" height="15" fill="rgb(253,99,2)" fg:x="16132" fg:w="10"/><text x="41.7920%" y="271.50"></text></g><g><title>__rust_alloc (5 samples, 0.01%)</title><rect x="41.5677%" y="277" width="0.0129%" height="15" fill="rgb(220,168,23)" fg:x="16142" fg:w="5"/><text x="41.8177%" y="287.50"></text></g><g><title>[libc.so.6] (74 samples, 0.19%)</title><rect x="46.1489%" y="245" width="0.1906%" height="15" fill="rgb(242,38,24)" fg:x="17921" fg:w="74"/><text x="46.3989%" y="255.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.01%)</title><rect x="46.3266%" y="229" width="0.0129%" height="15" fill="rgb(225,182,9)" fg:x="17990" fg:w="5"/><text x="46.5766%" y="239.50"></text></g><g><title>exc_page_fault (5 samples, 0.01%)</title><rect x="46.3266%" y="213" width="0.0129%" height="15" fill="rgb(243,178,37)" fg:x="17990" fg:w="5"/><text x="46.5766%" y="223.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.01%)</title><rect x="46.3266%" y="197" width="0.0129%" height="15" fill="rgb(232,139,19)" fg:x="17990" fg:w="5"/><text x="46.5766%" y="207.50"></text></g><g><title>handle_mm_fault (5 samples, 0.01%)</title><rect x="46.3266%" y="181" width="0.0129%" height="15" fill="rgb(225,201,24)" fg:x="17990" fg:w="5"/><text x="46.5766%" y="191.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.01%)</title><rect x="46.3266%" y="165" width="0.0129%" height="15" fill="rgb(221,47,46)" fg:x="17990" fg:w="5"/><text x="46.5766%" y="175.50"></text></g><g><title>handle_pte_fault (5 samples, 0.01%)</title><rect x="46.3266%" y="149" width="0.0129%" height="15" fill="rgb(249,23,13)" fg:x="17990" fg:w="5"/><text x="46.5766%" y="159.50"></text></g><g><title>do_anonymous_page (5 samples, 0.01%)</title><rect x="46.3266%" y="133" width="0.0129%" height="15" fill="rgb(219,9,5)" fg:x="17990" fg:w="5"/><text x="46.5766%" y="143.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="46.3446%" y="85" width="0.0129%" height="15" fill="rgb(254,171,16)" fg:x="17997" fg:w="5"/><text x="46.5946%" y="95.50"></text></g><g><title>finish_task_switch.isra.0 (13 samples, 0.03%)</title><rect x="46.3446%" y="117" width="0.0335%" height="15" fill="rgb(230,171,20)" fg:x="17997" fg:w="13"/><text x="46.5946%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.03%)</title><rect x="46.3446%" y="101" width="0.0335%" height="15" fill="rgb(210,71,41)" fg:x="17997" fg:w="13"/><text x="46.5946%" y="111.50"></text></g><g><title>perf_pmu_nop_void (8 samples, 0.02%)</title><rect x="46.3575%" y="85" width="0.0206%" height="15" fill="rgb(206,173,20)" fg:x="18002" fg:w="8"/><text x="46.6075%" y="95.50"></text></g><g><title>[libc.so.6] (1,111 samples, 2.86%)</title><rect x="43.5197%" y="261" width="2.8610%" height="15" fill="rgb(233,88,34)" fg:x="16900" fg:w="1111"/><text x="43.7697%" y="271.50">[l..</text></g><g><title>asm_sysvec_reschedule_ipi (16 samples, 0.04%)</title><rect x="46.3395%" y="245" width="0.0412%" height="15" fill="rgb(223,209,46)" fg:x="17995" fg:w="16"/><text x="46.5895%" y="255.50"></text></g><g><title>sysvec_reschedule_ipi (16 samples, 0.04%)</title><rect x="46.3395%" y="229" width="0.0412%" height="15" fill="rgb(250,43,18)" fg:x="17995" fg:w="16"/><text x="46.5895%" y="239.50"></text></g><g><title>irqentry_exit (16 samples, 0.04%)</title><rect x="46.3395%" y="213" width="0.0412%" height="15" fill="rgb(208,13,10)" fg:x="17995" fg:w="16"/><text x="46.5895%" y="223.50"></text></g><g><title>irqentry_exit_to_user_mode (16 samples, 0.04%)</title><rect x="46.3395%" y="197" width="0.0412%" height="15" fill="rgb(212,200,36)" fg:x="17995" fg:w="16"/><text x="46.5895%" y="207.50"></text></g><g><title>exit_to_user_mode_prepare (16 samples, 0.04%)</title><rect x="46.3395%" y="181" width="0.0412%" height="15" fill="rgb(225,90,30)" fg:x="17995" fg:w="16"/><text x="46.5895%" y="191.50"></text></g><g><title>exit_to_user_mode_loop (16 samples, 0.04%)</title><rect x="46.3395%" y="165" width="0.0412%" height="15" fill="rgb(236,182,39)" fg:x="17995" fg:w="16"/><text x="46.5895%" y="175.50"></text></g><g><title>schedule (14 samples, 0.04%)</title><rect x="46.3446%" y="149" width="0.0361%" height="15" fill="rgb(212,144,35)" fg:x="17997" fg:w="14"/><text x="46.5946%" y="159.50"></text></g><g><title>__schedule (14 samples, 0.04%)</title><rect x="46.3446%" y="133" width="0.0361%" height="15" fill="rgb(228,63,44)" fg:x="17997" fg:w="14"/><text x="46.5946%" y="143.50"></text></g><g><title>__entry_text_start (10 samples, 0.03%)</title><rect x="46.4502%" y="245" width="0.0258%" height="15" fill="rgb(228,109,6)" fg:x="18038" fg:w="10"/><text x="46.7002%" y="255.50"></text></g><g><title>__get_user_nocheck_4 (9 samples, 0.02%)</title><rect x="46.5120%" y="149" width="0.0232%" height="15" fill="rgb(238,117,24)" fg:x="18062" fg:w="9"/><text x="46.7620%" y="159.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.02%)</title><rect x="46.5352%" y="149" width="0.0155%" height="15" fill="rgb(242,26,26)" fg:x="18071" fg:w="6"/><text x="46.7852%" y="159.50"></text></g><g><title>futex_q_lock (10 samples, 0.03%)</title><rect x="46.5583%" y="149" width="0.0258%" height="15" fill="rgb(221,92,48)" fg:x="18080" fg:w="10"/><text x="46.8083%" y="159.50"></text></g><g><title>futex_q_unlock (12 samples, 0.03%)</title><rect x="46.5841%" y="149" width="0.0309%" height="15" fill="rgb(209,209,32)" fg:x="18090" fg:w="12"/><text x="46.8341%" y="159.50"></text></g><g><title>futex_wait_setup (44 samples, 0.11%)</title><rect x="46.5120%" y="165" width="0.1133%" height="15" fill="rgb(221,70,22)" fg:x="18062" fg:w="44"/><text x="46.7620%" y="175.50"></text></g><g><title>get_futex_key (4 samples, 0.01%)</title><rect x="46.6150%" y="149" width="0.0103%" height="15" fill="rgb(248,145,5)" fg:x="18102" fg:w="4"/><text x="46.8650%" y="159.50"></text></g><g><title>futex_wait (52 samples, 0.13%)</title><rect x="46.4940%" y="181" width="0.1339%" height="15" fill="rgb(226,116,26)" fg:x="18055" fg:w="52"/><text x="46.7440%" y="191.50"></text></g><g><title>__x64_sys_futex (57 samples, 0.15%)</title><rect x="46.4837%" y="213" width="0.1468%" height="15" fill="rgb(244,5,17)" fg:x="18051" fg:w="57"/><text x="46.7337%" y="223.50"></text></g><g><title>do_futex (54 samples, 0.14%)</title><rect x="46.4914%" y="197" width="0.1391%" height="15" fill="rgb(252,159,33)" fg:x="18054" fg:w="54"/><text x="46.7414%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (62 samples, 0.16%)</title><rect x="46.4785%" y="245" width="0.1597%" height="15" fill="rgb(206,71,0)" fg:x="18049" fg:w="62"/><text x="46.7285%" y="255.50"></text></g><g><title>do_syscall_64 (60 samples, 0.15%)</title><rect x="46.4837%" y="229" width="0.1545%" height="15" fill="rgb(233,118,54)" fg:x="18051" fg:w="60"/><text x="46.7337%" y="239.50"></text></g><g><title>__lll_lock_wait_private (101 samples, 0.26%)</title><rect x="46.3807%" y="261" width="0.2601%" height="15" fill="rgb(234,83,48)" fg:x="18011" fg:w="101"/><text x="46.6307%" y="271.50"></text></g><g><title>__entry_text_start (7 samples, 0.02%)</title><rect x="46.6536%" y="245" width="0.0180%" height="15" fill="rgb(228,3,54)" fg:x="18117" fg:w="7"/><text x="46.9036%" y="255.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.02%)</title><rect x="46.7000%" y="181" width="0.0232%" height="15" fill="rgb(226,155,13)" fg:x="18135" fg:w="9"/><text x="46.9500%" y="191.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.03%)</title><rect x="46.8880%" y="165" width="0.0309%" height="15" fill="rgb(241,28,37)" fg:x="18208" fg:w="12"/><text x="47.1380%" y="175.50"></text></g><g><title>native_queued_spin_lock_slowpath (12 samples, 0.03%)</title><rect x="46.8880%" y="149" width="0.0309%" height="15" fill="rgb(233,93,10)" fg:x="18208" fg:w="12"/><text x="47.1380%" y="159.50"></text></g><g><title>futex_wake_mark (24 samples, 0.06%)</title><rect x="46.9189%" y="165" width="0.0618%" height="15" fill="rgb(225,113,19)" fg:x="18220" fg:w="24"/><text x="47.1689%" y="175.50"></text></g><g><title>__futex_unqueue (4 samples, 0.01%)</title><rect x="46.9704%" y="149" width="0.0103%" height="15" fill="rgb(241,2,18)" fg:x="18240" fg:w="4"/><text x="47.2204%" y="159.50"></text></g><g><title>__smp_call_single_queue (20 samples, 0.05%)</title><rect x="47.1223%" y="117" width="0.0515%" height="15" fill="rgb(228,207,21)" fg:x="18299" fg:w="20"/><text x="47.3723%" y="127.50"></text></g><g><title>native_send_call_func_single_ipi (17 samples, 0.04%)</title><rect x="47.1300%" y="101" width="0.0438%" height="15" fill="rgb(213,211,35)" fg:x="18302" fg:w="17"/><text x="47.3800%" y="111.50"></text></g><g><title>x2apic_send_IPI (17 samples, 0.04%)</title><rect x="47.1300%" y="85" width="0.0438%" height="15" fill="rgb(209,83,10)" fg:x="18302" fg:w="17"/><text x="47.3800%" y="95.50"></text></g><g><title>native_write_msr (15 samples, 0.04%)</title><rect x="47.1352%" y="69" width="0.0386%" height="15" fill="rgb(209,164,1)" fg:x="18304" fg:w="15"/><text x="47.3852%" y="79.50"></text></g><g><title>llist_add_batch (17 samples, 0.04%)</title><rect x="47.1764%" y="117" width="0.0438%" height="15" fill="rgb(213,184,43)" fg:x="18320" fg:w="17"/><text x="47.4264%" y="127.50"></text></g><g><title>try_to_wake_up (89 samples, 0.23%)</title><rect x="47.0013%" y="149" width="0.2292%" height="15" fill="rgb(231,61,34)" fg:x="18252" fg:w="89"/><text x="47.2513%" y="159.50"></text></g><g><title>ttwu_queue_wakelist (55 samples, 0.14%)</title><rect x="47.0888%" y="133" width="0.1416%" height="15" fill="rgb(235,75,3)" fg:x="18286" fg:w="55"/><text x="47.3388%" y="143.50"></text></g><g><title>futex_wake (196 samples, 0.50%)</title><rect x="46.7283%" y="181" width="0.5047%" height="15" fill="rgb(220,106,47)" fg:x="18146" fg:w="196"/><text x="46.9783%" y="191.50"></text></g><g><title>wake_up_q (96 samples, 0.25%)</title><rect x="46.9858%" y="165" width="0.2472%" height="15" fill="rgb(210,196,33)" fg:x="18246" fg:w="96"/><text x="47.2358%" y="175.50"></text></g><g><title>do_futex (210 samples, 0.54%)</title><rect x="46.6948%" y="197" width="0.5408%" height="15" fill="rgb(229,154,42)" fg:x="18133" fg:w="210"/><text x="46.9448%" y="207.50"></text></g><g><title>__x64_sys_futex (214 samples, 0.55%)</title><rect x="46.6897%" y="213" width="0.5511%" height="15" fill="rgb(228,114,26)" fg:x="18131" fg:w="214"/><text x="46.9397%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (224 samples, 0.58%)</title><rect x="46.6768%" y="245" width="0.5768%" height="15" fill="rgb(208,144,1)" fg:x="18126" fg:w="224"/><text x="46.9268%" y="255.50"></text></g><g><title>do_syscall_64 (222 samples, 0.57%)</title><rect x="46.6819%" y="229" width="0.5717%" height="15" fill="rgb(239,112,37)" fg:x="18128" fg:w="222"/><text x="46.9319%" y="239.50"></text></g><g><title>__lll_lock_wake_private (239 samples, 0.62%)</title><rect x="46.6407%" y="261" width="0.6155%" height="15" fill="rgb(210,96,50)" fg:x="18112" fg:w="239"/><text x="46.8907%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,224 samples, 5.73%)</title><rect x="41.5343%" y="373" width="5.7271%" height="15" fill="rgb(222,178,2)" fg:x="16129" fg:w="2224"/><text x="41.7843%" y="383.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,224 samples, 5.73%)</title><rect x="41.5343%" y="357" width="5.7271%" height="15" fill="rgb(226,74,18)" fg:x="16129" fg:w="2224"/><text x="41.7843%" y="367.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,224 samples, 5.73%)</title><rect x="41.5343%" y="341" width="5.7271%" height="15" fill="rgb(225,67,54)" fg:x="16129" fg:w="2224"/><text x="41.7843%" y="351.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,221 samples, 5.72%)</title><rect x="41.5420%" y="325" width="5.7194%" height="15" fill="rgb(251,92,32)" fg:x="16132" fg:w="2221"/><text x="41.7920%" y="335.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,221 samples, 5.72%)</title><rect x="41.5420%" y="309" width="5.7194%" height="15" fill="rgb(228,149,22)" fg:x="16132" fg:w="2221"/><text x="41.7920%" y="319.50">alloc::..</text></g><g><title>alloc::alloc::alloc (2,221 samples, 5.72%)</title><rect x="41.5420%" y="293" width="5.7194%" height="15" fill="rgb(243,54,13)" fg:x="16132" fg:w="2221"/><text x="41.7920%" y="303.50">alloc::..</text></g><g><title>malloc (2,206 samples, 5.68%)</title><rect x="41.5806%" y="277" width="5.6807%" height="15" fill="rgb(243,180,28)" fg:x="16147" fg:w="2206"/><text x="41.8306%" y="287.50">malloc</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,451 samples, 6.31%)</title><rect x="41.5343%" y="437" width="6.3116%" height="15" fill="rgb(208,167,24)" fg:x="16129" fg:w="2451"/><text x="41.7843%" y="447.50">alloc::s..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,451 samples, 6.31%)</title><rect x="41.5343%" y="421" width="6.3116%" height="15" fill="rgb(245,73,45)" fg:x="16129" fg:w="2451"/><text x="41.7843%" y="431.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (2,451 samples, 6.31%)</title><rect x="41.5343%" y="405" width="6.3116%" height="15" fill="rgb(237,203,48)" fg:x="16129" fg:w="2451"/><text x="41.7843%" y="415.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,451 samples, 6.31%)</title><rect x="41.5343%" y="389" width="6.3116%" height="15" fill="rgb(211,197,16)" fg:x="16129" fg:w="2451"/><text x="41.7843%" y="399.50">&lt;T as al..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (227 samples, 0.58%)</title><rect x="47.2613%" y="373" width="0.5846%" height="15" fill="rgb(243,99,51)" fg:x="18353" fg:w="227"/><text x="47.5113%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (227 samples, 0.58%)</title><rect x="47.2613%" y="357" width="0.5846%" height="15" fill="rgb(215,123,29)" fg:x="18353" fg:w="227"/><text x="47.5113%" y="367.50"></text></g><g><title>[libc.so.6] (222 samples, 0.57%)</title><rect x="47.2742%" y="341" width="0.5717%" height="15" fill="rgb(239,186,37)" fg:x="18358" fg:w="222"/><text x="47.5242%" y="351.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="51.3790%" y="389" width="0.0129%" height="15" fill="rgb(252,136,39)" fg:x="19952" fg:w="5"/><text x="51.6290%" y="399.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (4 samples, 0.01%)</title><rect x="51.3944%" y="389" width="0.0103%" height="15" fill="rgb(223,213,32)" fg:x="19958" fg:w="4"/><text x="51.6444%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (80 samples, 0.21%)</title><rect x="51.4717%" y="373" width="0.2060%" height="15" fill="rgb(233,115,5)" fg:x="19988" fg:w="80"/><text x="51.7217%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (80 samples, 0.21%)</title><rect x="51.4717%" y="357" width="0.2060%" height="15" fill="rgb(207,226,44)" fg:x="19988" fg:w="80"/><text x="51.7217%" y="367.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_send (113 samples, 0.29%)</title><rect x="51.4047%" y="389" width="0.2910%" height="15" fill="rgb(208,126,0)" fg:x="19962" fg:w="113"/><text x="51.6547%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.02%)</title><rect x="51.6777%" y="373" width="0.0180%" height="15" fill="rgb(244,66,21)" fg:x="20068" fg:w="7"/><text x="51.9277%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.02%)</title><rect x="51.6777%" y="357" width="0.0180%" height="15" fill="rgb(222,97,12)" fg:x="20068" fg:w="7"/><text x="51.9277%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (6 samples, 0.02%)</title><rect x="51.7447%" y="261" width="0.0155%" height="15" fill="rgb(219,213,19)" fg:x="20094" fg:w="6"/><text x="51.9947%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.02%)</title><rect x="51.7447%" y="245" width="0.0155%" height="15" fill="rgb(252,169,30)" fg:x="20094" fg:w="6"/><text x="51.9947%" y="255.50"></text></g><g><title>futex_wake_mark (7 samples, 0.02%)</title><rect x="51.8090%" y="149" width="0.0180%" height="15" fill="rgb(206,32,51)" fg:x="20119" fg:w="7"/><text x="52.0590%" y="159.50"></text></g><g><title>__smp_call_single_queue (6 samples, 0.02%)</title><rect x="51.8966%" y="101" width="0.0155%" height="15" fill="rgb(250,172,42)" fg:x="20153" fg:w="6"/><text x="52.1466%" y="111.50"></text></g><g><title>__x64_sys_futex (57 samples, 0.15%)</title><rect x="51.7730%" y="197" width="0.1468%" height="15" fill="rgb(209,34,43)" fg:x="20105" fg:w="57"/><text x="52.0230%" y="207.50"></text></g><g><title>do_futex (57 samples, 0.15%)</title><rect x="51.7730%" y="181" width="0.1468%" height="15" fill="rgb(223,11,35)" fg:x="20105" fg:w="57"/><text x="52.0230%" y="191.50"></text></g><g><title>futex_wake (55 samples, 0.14%)</title><rect x="51.7781%" y="165" width="0.1416%" height="15" fill="rgb(251,219,26)" fg:x="20107" fg:w="55"/><text x="52.0281%" y="175.50"></text></g><g><title>wake_up_q (36 samples, 0.09%)</title><rect x="51.8271%" y="149" width="0.0927%" height="15" fill="rgb(231,119,3)" fg:x="20126" fg:w="36"/><text x="52.0771%" y="159.50"></text></g><g><title>try_to_wake_up (35 samples, 0.09%)</title><rect x="51.8296%" y="133" width="0.0901%" height="15" fill="rgb(216,97,11)" fg:x="20127" fg:w="35"/><text x="52.0796%" y="143.50"></text></g><g><title>ttwu_queue_wakelist (14 samples, 0.04%)</title><rect x="51.8837%" y="117" width="0.0361%" height="15" fill="rgb(223,59,9)" fg:x="20148" fg:w="14"/><text x="52.1337%" y="127.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::write (91 samples, 0.23%)</title><rect x="51.6957%" y="389" width="0.2343%" height="15" fill="rgb(233,93,31)" fg:x="20075" fg:w="91"/><text x="51.9457%" y="399.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (85 samples, 0.22%)</title><rect x="51.7112%" y="373" width="0.2189%" height="15" fill="rgb(239,81,33)" fg:x="20081" fg:w="85"/><text x="51.9612%" y="383.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select (74 samples, 0.19%)</title><rect x="51.7395%" y="357" width="0.1906%" height="15" fill="rgb(213,120,34)" fg:x="20092" fg:w="74"/><text x="51.9895%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (74 samples, 0.19%)</title><rect x="51.7395%" y="341" width="0.1906%" height="15" fill="rgb(243,49,53)" fg:x="20092" fg:w="74"/><text x="51.9895%" y="351.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select::_{{closure}} (74 samples, 0.19%)</title><rect x="51.7395%" y="325" width="0.1906%" height="15" fill="rgb(247,216,33)" fg:x="20092" fg:w="74"/><text x="51.9895%" y="335.50"></text></g><g><title>std::sync::mpmc::context::Context::unpark (72 samples, 0.19%)</title><rect x="51.7447%" y="309" width="0.1854%" height="15" fill="rgb(226,26,14)" fg:x="20094" fg:w="72"/><text x="51.9947%" y="319.50"></text></g><g><title>std::thread::Thread::unpark (72 samples, 0.19%)</title><rect x="51.7447%" y="293" width="0.1854%" height="15" fill="rgb(215,49,53)" fg:x="20094" fg:w="72"/><text x="51.9947%" y="303.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::unpark (72 samples, 0.19%)</title><rect x="51.7447%" y="277" width="0.1854%" height="15" fill="rgb(245,162,40)" fg:x="20094" fg:w="72"/><text x="51.9947%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wake (66 samples, 0.17%)</title><rect x="51.7601%" y="261" width="0.1700%" height="15" fill="rgb(229,68,17)" fg:x="20100" fg:w="66"/><text x="52.0101%" y="271.50"></text></g><g><title>syscall (66 samples, 0.17%)</title><rect x="51.7601%" y="245" width="0.1700%" height="15" fill="rgb(213,182,10)" fg:x="20100" fg:w="66"/><text x="52.0101%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (61 samples, 0.16%)</title><rect x="51.7730%" y="229" width="0.1571%" height="15" fill="rgb(245,125,30)" fg:x="20105" fg:w="61"/><text x="52.0230%" y="239.50"></text></g><g><title>do_syscall_64 (61 samples, 0.16%)</title><rect x="51.7730%" y="213" width="0.1571%" height="15" fill="rgb(232,202,2)" fg:x="20105" fg:w="61"/><text x="52.0230%" y="223.50"></text></g><g><title>std::sync::mpmc::context::Context::wait_until (4 samples, 0.01%)</title><rect x="51.9301%" y="309" width="0.0103%" height="15" fill="rgb(237,140,51)" fg:x="20166" fg:w="4"/><text x="52.1801%" y="319.50"></text></g><g><title>std::thread::park (4 samples, 0.01%)</title><rect x="51.9301%" y="293" width="0.0103%" height="15" fill="rgb(236,157,25)" fg:x="20166" fg:w="4"/><text x="52.1801%" y="303.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (4 samples, 0.01%)</title><rect x="51.9301%" y="277" width="0.0103%" height="15" fill="rgb(219,209,0)" fg:x="20166" fg:w="4"/><text x="52.1801%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wait (4 samples, 0.01%)</title><rect x="51.9301%" y="261" width="0.0103%" height="15" fill="rgb(240,116,54)" fg:x="20166" fg:w="4"/><text x="52.1801%" y="271.50"></text></g><g><title>syscall (4 samples, 0.01%)</title><rect x="51.9301%" y="245" width="0.0103%" height="15" fill="rgb(216,10,36)" fg:x="20166" fg:w="4"/><text x="52.1801%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="51.9301%" y="229" width="0.0103%" height="15" fill="rgb(222,72,44)" fg:x="20166" fg:w="4"/><text x="52.1801%" y="239.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="51.9301%" y="213" width="0.0103%" height="15" fill="rgb(232,159,9)" fg:x="20166" fg:w="4"/><text x="52.1801%" y="223.50"></text></g><g><title>std::sync::mpmc::context::Context::with (5 samples, 0.01%)</title><rect x="51.9301%" y="389" width="0.0129%" height="15" fill="rgb(210,39,32)" fg:x="20166" fg:w="5"/><text x="52.1801%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="51.9301%" y="373" width="0.0129%" height="15" fill="rgb(216,194,45)" fg:x="20166" fg:w="5"/><text x="52.1801%" y="383.50"></text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (5 samples, 0.01%)</title><rect x="51.9301%" y="357" width="0.0129%" height="15" fill="rgb(218,18,35)" fg:x="20166" fg:w="5"/><text x="52.1801%" y="367.50"></text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (5 samples, 0.01%)</title><rect x="51.9301%" y="341" width="0.0129%" height="15" fill="rgb(207,83,51)" fg:x="20166" fg:w="5"/><text x="52.1801%" y="351.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send::_{{closure}} (5 samples, 0.01%)</title><rect x="51.9301%" y="325" width="0.0129%" height="15" fill="rgb(225,63,43)" fg:x="20166" fg:w="5"/><text x="52.1801%" y="335.50"></text></g><g><title>benchmark::bob_main::_{{closure}} (4,067 samples, 10.47%)</title><rect x="41.5343%" y="453" width="10.4731%" height="15" fill="rgb(207,57,36)" fg:x="16129" fg:w="4067"/><text x="41.7843%" y="463.50">benchmark::bob_..</text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::send (1,615 samples, 4.16%)</title><rect x="47.8485%" y="437" width="4.1588%" height="15" fill="rgb(216,99,33)" fg:x="18581" fg:w="1615"/><text x="48.0985%" y="447.50">std::..</text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (1,613 samples, 4.15%)</title><rect x="47.8536%" y="421" width="4.1537%" height="15" fill="rgb(225,42,16)" fg:x="18583" fg:w="1613"/><text x="48.1036%" y="431.50">std::..</text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (265 samples, 0.68%)</title><rect x="51.3249%" y="405" width="0.6824%" height="15" fill="rgb(220,201,45)" fg:x="19931" fg:w="265"/><text x="51.5749%" y="415.50"></text></g><g><title>std::sync::mpmc::utils::Backoff::spin_light (25 samples, 0.06%)</title><rect x="51.9429%" y="389" width="0.0644%" height="15" fill="rgb(225,33,4)" fg:x="20171" fg:w="25"/><text x="52.1929%" y="399.50"></text></g><g><title>core::hint::spin_loop (25 samples, 0.06%)</title><rect x="51.9429%" y="373" width="0.0644%" height="15" fill="rgb(224,33,50)" fg:x="20171" fg:w="25"/><text x="52.1929%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (25 samples, 0.06%)</title><rect x="51.9429%" y="357" width="0.0644%" height="15" fill="rgb(246,198,51)" fg:x="20171" fg:w="25"/><text x="52.1929%" y="367.50"></text></g><g><title>core::mem::drop (16 samples, 0.04%)</title><rect x="52.0150%" y="453" width="0.0412%" height="15" fill="rgb(205,22,4)" fg:x="20199" fg:w="16"/><text x="52.2650%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;zssp::zeta::MutableState&lt;benchmark::TestApplication&gt;&gt;&gt; (16 samples, 0.04%)</title><rect x="52.0150%" y="437" width="0.0412%" height="15" fill="rgb(206,3,8)" fg:x="20199" fg:w="16"/><text x="52.2650%" y="447.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.04%)</title><rect x="52.0150%" y="421" width="0.0412%" height="15" fill="rgb(251,23,15)" fg:x="20199" fg:w="16"/><text x="52.2650%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (16 samples, 0.04%)</title><rect x="52.0150%" y="405" width="0.0412%" height="15" fill="rgb(252,88,28)" fg:x="20199" fg:w="16"/><text x="52.2650%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (15 samples, 0.04%)</title><rect x="52.0176%" y="389" width="0.0386%" height="15" fill="rgb(212,127,14)" fg:x="20200" fg:w="15"/><text x="52.2676%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.04%)</title><rect x="52.0176%" y="373" width="0.0386%" height="15" fill="rgb(247,145,37)" fg:x="20200" fg:w="15"/><text x="52.2676%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.02%)</title><rect x="52.0562%" y="453" width="0.0155%" height="15" fill="rgb(209,117,53)" fg:x="20215" fg:w="6"/><text x="52.3062%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="52.0562%" y="437" width="0.0155%" height="15" fill="rgb(212,90,42)" fg:x="20215" fg:w="6"/><text x="52.3062%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.01%)</title><rect x="52.0768%" y="453" width="0.0103%" height="15" fill="rgb(218,164,37)" fg:x="20223" fg:w="4"/><text x="52.3268%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.01%)</title><rect x="52.0768%" y="437" width="0.0103%" height="15" fill="rgb(246,65,34)" fg:x="20223" fg:w="4"/><text x="52.3268%" y="447.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (23 samples, 0.06%)</title><rect x="52.0871%" y="453" width="0.0592%" height="15" fill="rgb(231,100,33)" fg:x="20227" fg:w="23"/><text x="52.3371%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (23 samples, 0.06%)</title><rect x="52.0871%" y="437" width="0.0592%" height="15" fill="rgb(228,126,14)" fg:x="20227" fg:w="23"/><text x="52.3371%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (21 samples, 0.05%)</title><rect x="52.0923%" y="421" width="0.0541%" height="15" fill="rgb(215,173,21)" fg:x="20229" fg:w="21"/><text x="52.3423%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.05%)</title><rect x="52.0923%" y="405" width="0.0541%" height="15" fill="rgb(210,6,40)" fg:x="20229" fg:w="21"/><text x="52.3423%" y="415.50"></text></g><g><title>benchmark::alice_main (18,418 samples, 47.43%)</title><rect x="4.7640%" y="501" width="47.4287%" height="15" fill="rgb(212,48,18)" fg:x="1850" fg:w="18418"/><text x="5.0140%" y="511.50">benchmark::alice_main</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::send (8,789 samples, 22.63%)</title><rect x="29.5599%" y="485" width="22.6328%" height="15" fill="rgb(230,214,11)" fg:x="11479" fg:w="8789"/><text x="29.8099%" y="495.50">zssp::zssp::Context&lt;Crypto&gt;::send</text></g><g><title>zssp::zeta::send_payload (8,789 samples, 22.63%)</title><rect x="29.5599%" y="469" width="22.6328%" height="15" fill="rgb(254,105,39)" fg:x="11479" fg:w="8789"/><text x="29.8099%" y="479.50">zssp::zeta::send_payload</text></g><g><title>zssp::zeta::get_counter (18 samples, 0.05%)</title><rect x="52.1464%" y="453" width="0.0464%" height="15" fill="rgb(245,158,5)" fg:x="20250" fg:w="18"/><text x="52.3964%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (16 samples, 0.04%)</title><rect x="52.1515%" y="437" width="0.0412%" height="15" fill="rgb(249,208,11)" fg:x="20252" fg:w="16"/><text x="52.4015%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.04%)</title><rect x="52.1515%" y="421" width="0.0412%" height="15" fill="rgb(210,39,28)" fg:x="20252" fg:w="16"/><text x="52.4015%" y="431.50"></text></g><g><title>[libc.so.6] (15 samples, 0.04%)</title><rect x="52.2648%" y="485" width="0.0386%" height="15" fill="rgb(211,56,53)" fg:x="20296" fg:w="15"/><text x="52.5148%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt; (15 samples, 0.04%)</title><rect x="52.3112%" y="485" width="0.0386%" height="15" fill="rgb(226,201,30)" fg:x="20314" fg:w="15"/><text x="52.5612%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="52.3112%" y="469" width="0.0386%" height="15" fill="rgb(239,101,34)" fg:x="20314" fg:w="15"/><text x="52.5612%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.04%)</title><rect x="52.3138%" y="453" width="0.0361%" height="15" fill="rgb(226,209,5)" fg:x="20315" fg:w="14"/><text x="52.5638%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.04%)</title><rect x="52.3138%" y="437" width="0.0361%" height="15" fill="rgb(250,105,47)" fg:x="20315" fg:w="14"/><text x="52.5638%" y="447.50"></text></g><g><title>core::time::Duration::as_millis (8 samples, 0.02%)</title><rect x="52.3498%" y="485" width="0.0206%" height="15" fill="rgb(230,72,3)" fg:x="20329" fg:w="8"/><text x="52.5998%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.01%)</title><rect x="52.4580%" y="421" width="0.0103%" height="15" fill="rgb(232,218,39)" fg:x="20371" fg:w="4"/><text x="52.7080%" y="431.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::read (7 samples, 0.02%)</title><rect x="52.4683%" y="421" width="0.0180%" height="15" fill="rgb(248,166,6)" fg:x="20375" fg:w="7"/><text x="52.7183%" y="431.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (6 samples, 0.02%)</title><rect x="52.4708%" y="405" width="0.0155%" height="15" fill="rgb(247,89,20)" fg:x="20376" fg:w="6"/><text x="52.7208%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="52.5893%" y="405" width="0.0155%" height="15" fill="rgb(248,130,54)" fg:x="20422" fg:w="6"/><text x="52.8393%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="52.5893%" y="389" width="0.0155%" height="15" fill="rgb(234,196,4)" fg:x="20422" fg:w="6"/><text x="52.8393%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.02%)</title><rect x="52.5893%" y="373" width="0.0155%" height="15" fill="rgb(250,143,31)" fg:x="20422" fg:w="6"/><text x="52.8393%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.02%)</title><rect x="52.5893%" y="357" width="0.0155%" height="15" fill="rgb(211,110,34)" fg:x="20422" fg:w="6"/><text x="52.8393%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (90 samples, 0.23%)</title><rect x="52.6047%" y="405" width="0.2318%" height="15" fill="rgb(215,124,48)" fg:x="20428" fg:w="90"/><text x="52.8547%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (90 samples, 0.23%)</title><rect x="52.6047%" y="389" width="0.2318%" height="15" fill="rgb(216,46,13)" fg:x="20428" fg:w="90"/><text x="52.8547%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (63 samples, 0.16%)</title><rect x="52.8365%" y="405" width="0.1622%" height="15" fill="rgb(205,184,25)" fg:x="20518" fg:w="63"/><text x="53.0865%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (63 samples, 0.16%)</title><rect x="52.8365%" y="389" width="0.1622%" height="15" fill="rgb(228,1,10)" fg:x="20518" fg:w="63"/><text x="53.0865%" y="399.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (200 samples, 0.52%)</title><rect x="52.4863%" y="421" width="0.5150%" height="15" fill="rgb(213,116,27)" fg:x="20382" fg:w="200"/><text x="52.7363%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="53.0142%" y="325" width="0.0129%" height="15" fill="rgb(241,95,50)" fg:x="20587" fg:w="5"/><text x="53.2642%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="53.0142%" y="309" width="0.0129%" height="15" fill="rgb(238,48,32)" fg:x="20587" fg:w="5"/><text x="53.2642%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (4 samples, 0.01%)</title><rect x="53.0322%" y="293" width="0.0103%" height="15" fill="rgb(235,113,49)" fg:x="20594" fg:w="4"/><text x="53.2822%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.01%)</title><rect x="53.0322%" y="277" width="0.0103%" height="15" fill="rgb(205,127,43)" fg:x="20594" fg:w="4"/><text x="53.2822%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (7 samples, 0.02%)</title><rect x="53.0425%" y="277" width="0.0180%" height="15" fill="rgb(250,162,2)" fg:x="20598" fg:w="7"/><text x="53.2925%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wait::_{{closure}} (7 samples, 0.02%)</title><rect x="53.0425%" y="261" width="0.0180%" height="15" fill="rgb(220,13,41)" fg:x="20598" fg:w="7"/><text x="53.2925%" y="271.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.02%)</title><rect x="53.0425%" y="245" width="0.0180%" height="15" fill="rgb(249,221,25)" fg:x="20598" fg:w="7"/><text x="53.2925%" y="255.50"></text></g><g><title>clock_gettime (7 samples, 0.02%)</title><rect x="53.0425%" y="229" width="0.0180%" height="15" fill="rgb(215,208,19)" fg:x="20598" fg:w="7"/><text x="53.2925%" y="239.50"></text></g><g><title>[[vdso]] (7 samples, 0.02%)</title><rect x="53.0425%" y="213" width="0.0180%" height="15" fill="rgb(236,175,2)" fg:x="20598" fg:w="7"/><text x="53.2925%" y="223.50"></text></g><g><title>[[vdso]] (4 samples, 0.01%)</title><rect x="53.0502%" y="197" width="0.0103%" height="15" fill="rgb(241,52,2)" fg:x="20601" fg:w="4"/><text x="53.3002%" y="207.50"></text></g><g><title>futex_unqueue (7 samples, 0.02%)</title><rect x="53.1095%" y="181" width="0.0180%" height="15" fill="rgb(248,140,14)" fg:x="20624" fg:w="7"/><text x="53.3595%" y="191.50"></text></g><g><title>enqueue_hrtimer (5 samples, 0.01%)</title><rect x="53.1352%" y="117" width="0.0129%" height="15" fill="rgb(253,22,42)" fg:x="20634" fg:w="5"/><text x="53.3852%" y="127.50"></text></g><g><title>hrtimer_sleeper_start_expires (6 samples, 0.02%)</title><rect x="53.1352%" y="165" width="0.0155%" height="15" fill="rgb(234,61,47)" fg:x="20634" fg:w="6"/><text x="53.3852%" y="175.50"></text></g><g><title>hrtimer_start_range_ns (6 samples, 0.02%)</title><rect x="53.1352%" y="149" width="0.0155%" height="15" fill="rgb(208,226,15)" fg:x="20634" fg:w="6"/><text x="53.3852%" y="159.50"></text></g><g><title>__hrtimer_start_range_ns (6 samples, 0.02%)</title><rect x="53.1352%" y="133" width="0.0155%" height="15" fill="rgb(217,221,4)" fg:x="20634" fg:w="6"/><text x="53.3852%" y="143.50"></text></g><g><title>update_curr (5 samples, 0.01%)</title><rect x="53.1944%" y="85" width="0.0129%" height="15" fill="rgb(212,174,34)" fg:x="20657" fg:w="5"/><text x="53.4444%" y="95.50"></text></g><g><title>dequeue_task (14 samples, 0.04%)</title><rect x="53.1841%" y="133" width="0.0361%" height="15" fill="rgb(253,83,4)" fg:x="20653" fg:w="14"/><text x="53.4341%" y="143.50"></text></g><g><title>dequeue_task_fair (14 samples, 0.04%)</title><rect x="53.1841%" y="117" width="0.0361%" height="15" fill="rgb(250,195,49)" fg:x="20653" fg:w="14"/><text x="53.4341%" y="127.50"></text></g><g><title>dequeue_entity (14 samples, 0.04%)</title><rect x="53.1841%" y="101" width="0.0361%" height="15" fill="rgb(241,192,25)" fg:x="20653" fg:w="14"/><text x="53.4341%" y="111.50"></text></g><g><title>update_load_avg (5 samples, 0.01%)</title><rect x="53.2073%" y="85" width="0.0129%" height="15" fill="rgb(208,124,10)" fg:x="20662" fg:w="5"/><text x="53.4573%" y="95.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.03%)</title><rect x="53.2202%" y="117" width="0.0283%" height="15" fill="rgb(222,33,0)" fg:x="20667" fg:w="11"/><text x="53.4702%" y="127.50"></text></g><g><title>perf_ctx_enable (11 samples, 0.03%)</title><rect x="53.2202%" y="101" width="0.0283%" height="15" fill="rgb(234,209,28)" fg:x="20667" fg:w="11"/><text x="53.4702%" y="111.50"></text></g><g><title>finish_task_switch.isra.0 (16 samples, 0.04%)</title><rect x="53.2202%" y="133" width="0.0412%" height="15" fill="rgb(224,11,23)" fg:x="20667" fg:w="16"/><text x="53.4702%" y="143.50"></text></g><g><title>raw_spin_rq_unlock (4 samples, 0.01%)</title><rect x="53.2511%" y="117" width="0.0103%" height="15" fill="rgb(232,99,1)" fg:x="20679" fg:w="4"/><text x="53.5011%" y="127.50"></text></g><g><title>pick_next_task (4 samples, 0.01%)</title><rect x="53.2614%" y="133" width="0.0103%" height="15" fill="rgb(237,95,45)" fg:x="20683" fg:w="4"/><text x="53.5114%" y="143.50"></text></g><g><title>prepare_task_switch (4 samples, 0.01%)</title><rect x="53.2717%" y="133" width="0.0103%" height="15" fill="rgb(208,109,11)" fg:x="20687" fg:w="4"/><text x="53.5217%" y="143.50"></text></g><g><title>psi_group_change (8 samples, 0.02%)</title><rect x="53.2923%" y="117" width="0.0206%" height="15" fill="rgb(216,190,48)" fg:x="20695" fg:w="8"/><text x="53.5423%" y="127.50"></text></g><g><title>psi_task_switch (13 samples, 0.03%)</title><rect x="53.2846%" y="133" width="0.0335%" height="15" fill="rgb(251,171,36)" fg:x="20692" fg:w="13"/><text x="53.5346%" y="143.50"></text></g><g><title>futex_wait_queue (78 samples, 0.20%)</title><rect x="53.1275%" y="181" width="0.2009%" height="15" fill="rgb(230,62,22)" fg:x="20631" fg:w="78"/><text x="53.3775%" y="191.50"></text></g><g><title>schedule (68 samples, 0.18%)</title><rect x="53.1532%" y="165" width="0.1751%" height="15" fill="rgb(225,114,35)" fg:x="20641" fg:w="68"/><text x="53.4032%" y="175.50"></text></g><g><title>__schedule (66 samples, 0.17%)</title><rect x="53.1584%" y="149" width="0.1700%" height="15" fill="rgb(215,118,42)" fg:x="20643" fg:w="66"/><text x="53.4084%" y="159.50"></text></g><g><title>__get_user_nocheck_4 (4 samples, 0.01%)</title><rect x="53.3309%" y="165" width="0.0103%" height="15" fill="rgb(243,119,21)" fg:x="20710" fg:w="4"/><text x="53.5809%" y="175.50"></text></g><g><title>futex_q_lock (10 samples, 0.03%)</title><rect x="53.3464%" y="165" width="0.0258%" height="15" fill="rgb(252,177,53)" fg:x="20716" fg:w="10"/><text x="53.5964%" y="175.50"></text></g><g><title>futex_wait_setup (18 samples, 0.05%)</title><rect x="53.3284%" y="181" width="0.0464%" height="15" fill="rgb(237,209,29)" fg:x="20709" fg:w="18"/><text x="53.5784%" y="191.50"></text></g><g><title>hrtimer_cancel (7 samples, 0.02%)</title><rect x="53.3747%" y="181" width="0.0180%" height="15" fill="rgb(212,65,23)" fg:x="20727" fg:w="7"/><text x="53.6247%" y="191.50"></text></g><g><title>hrtimer_try_to_cancel (6 samples, 0.02%)</title><rect x="53.3773%" y="165" width="0.0155%" height="15" fill="rgb(230,222,46)" fg:x="20728" fg:w="6"/><text x="53.6273%" y="175.50"></text></g><g><title>futex_wait (117 samples, 0.30%)</title><rect x="53.0940%" y="197" width="0.3013%" height="15" fill="rgb(215,135,32)" fg:x="20618" fg:w="117"/><text x="53.3440%" y="207.50"></text></g><g><title>do_futex (120 samples, 0.31%)</title><rect x="53.0889%" y="213" width="0.3090%" height="15" fill="rgb(246,101,22)" fg:x="20616" fg:w="120"/><text x="53.3389%" y="223.50"></text></g><g><title>__x64_sys_futex (130 samples, 0.33%)</title><rect x="53.0734%" y="229" width="0.3348%" height="15" fill="rgb(206,107,13)" fg:x="20610" fg:w="130"/><text x="53.3234%" y="239.50"></text></g><g><title>get_timespec64 (4 samples, 0.01%)</title><rect x="53.3979%" y="213" width="0.0103%" height="15" fill="rgb(250,100,44)" fg:x="20736" fg:w="4"/><text x="53.6479%" y="223.50"></text></g><g><title>_copy_from_user (4 samples, 0.01%)</title><rect x="53.3979%" y="197" width="0.0103%" height="15" fill="rgb(231,147,38)" fg:x="20736" fg:w="4"/><text x="53.6479%" y="207.50"></text></g><g><title>exit_to_user_mode_prepare (8 samples, 0.02%)</title><rect x="53.4108%" y="213" width="0.0206%" height="15" fill="rgb(229,8,40)" fg:x="20741" fg:w="8"/><text x="53.6608%" y="223.50"></text></g><g><title>exit_to_user_mode_loop (8 samples, 0.02%)</title><rect x="53.4108%" y="197" width="0.0206%" height="15" fill="rgb(221,135,30)" fg:x="20741" fg:w="8"/><text x="53.6608%" y="207.50"></text></g><g><title>__rseq_handle_notify_resume (5 samples, 0.01%)</title><rect x="53.4185%" y="181" width="0.0129%" height="15" fill="rgb(249,193,18)" fg:x="20744" fg:w="5"/><text x="53.6685%" y="191.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park_timeout (157 samples, 0.40%)</title><rect x="53.0296%" y="309" width="0.4043%" height="15" fill="rgb(209,133,39)" fg:x="20593" fg:w="157"/><text x="53.2796%" y="319.50"></text></g><g><title>std::sys::unix::futex::futex_wait (152 samples, 0.39%)</title><rect x="53.0425%" y="293" width="0.3914%" height="15" fill="rgb(232,100,14)" fg:x="20598" fg:w="152"/><text x="53.2925%" y="303.50"></text></g><g><title>syscall (145 samples, 0.37%)</title><rect x="53.0605%" y="277" width="0.3734%" height="15" fill="rgb(224,185,1)" fg:x="20605" fg:w="145"/><text x="53.3105%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (140 samples, 0.36%)</title><rect x="53.0734%" y="261" width="0.3605%" height="15" fill="rgb(223,139,8)" fg:x="20610" fg:w="140"/><text x="53.3234%" y="271.50"></text></g><g><title>do_syscall_64 (140 samples, 0.36%)</title><rect x="53.0734%" y="245" width="0.3605%" height="15" fill="rgb(232,213,38)" fg:x="20610" fg:w="140"/><text x="53.3234%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (9 samples, 0.02%)</title><rect x="53.4108%" y="229" width="0.0232%" height="15" fill="rgb(207,94,22)" fg:x="20741" fg:w="9"/><text x="53.6608%" y="239.50"></text></g><g><title>std::thread::park_timeout (159 samples, 0.41%)</title><rect x="53.0296%" y="325" width="0.4094%" height="15" fill="rgb(219,183,54)" fg:x="20593" fg:w="159"/><text x="53.2796%" y="335.50"></text></g><g><title>std::sync::mpmc::context::Context::wait_until (168 samples, 0.43%)</title><rect x="53.0090%" y="341" width="0.4326%" height="15" fill="rgb(216,185,54)" fg:x="20585" fg:w="168"/><text x="53.2590%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (6 samples, 0.02%)</title><rect x="53.4468%" y="325" width="0.0155%" height="15" fill="rgb(254,217,39)" fg:x="20755" fg:w="6"/><text x="53.6968%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_store (6 samples, 0.02%)</title><rect x="53.4468%" y="309" width="0.0155%" height="15" fill="rgb(240,178,23)" fg:x="20755" fg:w="6"/><text x="53.6968%" y="319.50"></text></g><g><title>std::sync::mpmc::context::Context::with (187 samples, 0.48%)</title><rect x="53.0013%" y="421" width="0.4815%" height="15" fill="rgb(218,11,47)" fg:x="20582" fg:w="187"/><text x="53.2513%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (187 samples, 0.48%)</title><rect x="53.0013%" y="405" width="0.4815%" height="15" fill="rgb(218,51,51)" fg:x="20582" fg:w="187"/><text x="53.2513%" y="415.50"></text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (187 samples, 0.48%)</title><rect x="53.0013%" y="389" width="0.4815%" height="15" fill="rgb(238,126,27)" fg:x="20582" fg:w="187"/><text x="53.2513%" y="399.50"></text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (187 samples, 0.48%)</title><rect x="53.0013%" y="373" width="0.4815%" height="15" fill="rgb(249,202,22)" fg:x="20582" fg:w="187"/><text x="53.2513%" y="383.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv::_{{closure}} (185 samples, 0.48%)</title><rect x="53.0065%" y="357" width="0.4764%" height="15" fill="rgb(254,195,49)" fg:x="20584" fg:w="185"/><text x="53.2565%" y="367.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::register (15 samples, 0.04%)</title><rect x="53.4442%" y="341" width="0.0386%" height="15" fill="rgb(208,123,14)" fg:x="20754" fg:w="15"/><text x="53.6942%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.02%)</title><rect x="53.4674%" y="325" width="0.0155%" height="15" fill="rgb(224,200,8)" fg:x="20763" fg:w="6"/><text x="53.7174%" y="335.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (6 samples, 0.02%)</title><rect x="53.4674%" y="309" width="0.0155%" height="15" fill="rgb(217,61,36)" fg:x="20763" fg:w="6"/><text x="53.7174%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.02%)</title><rect x="53.4674%" y="293" width="0.0155%" height="15" fill="rgb(206,35,45)" fg:x="20763" fg:w="6"/><text x="53.7174%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="53.4674%" y="277" width="0.0155%" height="15" fill="rgb(217,65,33)" fg:x="20763" fg:w="6"/><text x="53.7174%" y="287.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.01%)</title><rect x="53.4829%" y="421" width="0.0103%" height="15" fill="rgb(222,158,48)" fg:x="20769" fg:w="4"/><text x="53.7329%" y="431.50"></text></g><g><title>clock_gettime (4 samples, 0.01%)</title><rect x="53.4829%" y="405" width="0.0103%" height="15" fill="rgb(254,2,54)" fg:x="20769" fg:w="4"/><text x="53.7329%" y="415.50"></text></g><g><title>[[vdso]] (4 samples, 0.01%)</title><rect x="53.4829%" y="389" width="0.0103%" height="15" fill="rgb(250,143,38)" fg:x="20769" fg:w="4"/><text x="53.7329%" y="399.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv_deadline (418 samples, 1.08%)</title><rect x="52.4193%" y="453" width="1.0764%" height="15" fill="rgb(248,25,0)" fg:x="20356" fg:w="418"/><text x="52.6693%" y="463.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (416 samples, 1.07%)</title><rect x="52.4245%" y="437" width="1.0713%" height="15" fill="rgb(206,152,27)" fg:x="20358" fg:w="416"/><text x="52.6745%" y="447.50"></text></g><g><title>[[vdso]] (164 samples, 0.42%)</title><rect x="53.5138%" y="421" width="0.4223%" height="15" fill="rgb(240,77,30)" fg:x="20781" fg:w="164"/><text x="53.7638%" y="431.50"></text></g><g><title>[[vdso]] (114 samples, 0.29%)</title><rect x="53.6425%" y="405" width="0.2936%" height="15" fill="rgb(231,5,3)" fg:x="20831" fg:w="114"/><text x="53.8925%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (175 samples, 0.45%)</title><rect x="53.5009%" y="453" width="0.4506%" height="15" fill="rgb(207,226,32)" fg:x="20776" fg:w="175"/><text x="53.7509%" y="463.50"></text></g><g><title>clock_gettime (173 samples, 0.45%)</title><rect x="53.5060%" y="437" width="0.4455%" height="15" fill="rgb(222,207,47)" fg:x="20778" fg:w="173"/><text x="53.7560%" y="447.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.02%)</title><rect x="53.9361%" y="421" width="0.0155%" height="15" fill="rgb(229,115,45)" fg:x="20945" fg:w="6"/><text x="54.1861%" y="431.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv_timeout (634 samples, 1.63%)</title><rect x="52.3704%" y="485" width="1.6326%" height="15" fill="rgb(224,191,6)" fg:x="20337" fg:w="634"/><text x="52.6204%" y="495.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv_timeout (628 samples, 1.62%)</title><rect x="52.3859%" y="469" width="1.6172%" height="15" fill="rgb(230,227,24)" fg:x="20343" fg:w="628"/><text x="52.6359%" y="479.50"></text></g><g><title>std::time::SystemTime::checked_add (17 samples, 0.04%)</title><rect x="53.9593%" y="453" width="0.0438%" height="15" fill="rgb(228,80,19)" fg:x="20954" fg:w="17"/><text x="54.2093%" y="463.50"></text></g><g><title>std::sys::unix::time::SystemTime::checked_add_duration (16 samples, 0.04%)</title><rect x="53.9618%" y="437" width="0.0412%" height="15" fill="rgb(247,229,0)" fg:x="20955" fg:w="16"/><text x="54.2118%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::checked_add_duration (16 samples, 0.04%)</title><rect x="53.9618%" y="421" width="0.0412%" height="15" fill="rgb(237,194,15)" fg:x="20955" fg:w="16"/><text x="54.2118%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8 samples, 0.02%)</title><rect x="53.9824%" y="405" width="0.0206%" height="15" fill="rgb(219,203,20)" fg:x="20963" fg:w="8"/><text x="54.2324%" y="415.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="54.0957%" y="341" width="0.0129%" height="15" fill="rgb(234,128,8)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="351.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="54.0957%" y="325" width="0.0129%" height="15" fill="rgb(248,202,8)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="335.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="54.0957%" y="309" width="0.0129%" height="15" fill="rgb(206,104,37)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="54.0957%" y="293" width="0.0129%" height="15" fill="rgb(223,8,27)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="54.0957%" y="277" width="0.0129%" height="15" fill="rgb(216,217,28)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="287.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="54.0957%" y="261" width="0.0129%" height="15" fill="rgb(249,199,1)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="271.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="54.0957%" y="245" width="0.0129%" height="15" fill="rgb(240,85,17)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="255.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="54.0957%" y="229" width="0.0129%" height="15" fill="rgb(206,108,45)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="54.0957%" y="213" width="0.0129%" height="15" fill="rgb(245,210,41)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="54.0957%" y="197" width="0.0129%" height="15" fill="rgb(206,13,37)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="207.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="54.0957%" y="181" width="0.0129%" height="15" fill="rgb(250,61,18)" fg:x="21007" fg:w="5"/><text x="54.3457%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (21 samples, 0.05%)</title><rect x="54.0571%" y="389" width="0.0541%" height="15" fill="rgb(235,172,48)" fg:x="20992" fg:w="21"/><text x="54.3071%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::ge (21 samples, 0.05%)</title><rect x="54.0571%" y="373" width="0.0541%" height="15" fill="rgb(249,201,17)" fg:x="20992" fg:w="21"/><text x="54.3071%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (15 samples, 0.04%)</title><rect x="54.0726%" y="357" width="0.0386%" height="15" fill="rgb(219,208,6)" fg:x="20998" fg:w="15"/><text x="54.3226%" y="367.50"></text></g><g><title>std::time::Instant::duration_since (45 samples, 0.12%)</title><rect x="54.0082%" y="453" width="0.1159%" height="15" fill="rgb(248,31,23)" fg:x="20973" fg:w="45"/><text x="54.2582%" y="463.50"></text></g><g><title>std::time::Instant::checked_duration_since (45 samples, 0.12%)</title><rect x="54.0082%" y="437" width="0.1159%" height="15" fill="rgb(245,15,42)" fg:x="20973" fg:w="45"/><text x="54.2582%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (45 samples, 0.12%)</title><rect x="54.0082%" y="421" width="0.1159%" height="15" fill="rgb(222,217,39)" fg:x="20973" fg:w="45"/><text x="54.2582%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (45 samples, 0.12%)</title><rect x="54.0082%" y="405" width="0.1159%" height="15" fill="rgb(210,219,27)" fg:x="20973" fg:w="45"/><text x="54.2582%" y="415.50"></text></g><g><title>core::time::Duration::new (5 samples, 0.01%)</title><rect x="54.1112%" y="389" width="0.0129%" height="15" fill="rgb(252,166,36)" fg:x="21013" fg:w="5"/><text x="54.3612%" y="399.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (48 samples, 0.12%)</title><rect x="54.0082%" y="469" width="0.1236%" height="15" fill="rgb(245,132,34)" fg:x="20973" fg:w="48"/><text x="54.2582%" y="479.50"></text></g><g><title>[[vdso]] (111 samples, 0.29%)</title><rect x="54.2297%" y="389" width="0.2858%" height="15" fill="rgb(236,54,3)" fg:x="21059" fg:w="111"/><text x="54.4797%" y="399.50"></text></g><g><title>[[vdso]] (145 samples, 0.37%)</title><rect x="54.1550%" y="405" width="0.3734%" height="15" fill="rgb(241,173,43)" fg:x="21030" fg:w="145"/><text x="54.4050%" y="415.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="54.5155%" y="389" width="0.0129%" height="15" fill="rgb(215,190,9)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="399.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="54.5155%" y="373" width="0.0129%" height="15" fill="rgb(242,101,16)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="383.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="54.5155%" y="357" width="0.0129%" height="15" fill="rgb(223,190,21)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="367.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="54.5155%" y="341" width="0.0129%" height="15" fill="rgb(215,228,25)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="351.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="54.5155%" y="325" width="0.0129%" height="15" fill="rgb(225,36,22)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="335.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="54.5155%" y="309" width="0.0129%" height="15" fill="rgb(251,106,46)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="319.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="54.5155%" y="293" width="0.0129%" height="15" fill="rgb(208,90,1)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="303.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="54.5155%" y="277" width="0.0129%" height="15" fill="rgb(243,10,4)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="287.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="54.5155%" y="261" width="0.0129%" height="15" fill="rgb(212,137,27)" fg:x="21170" fg:w="5"/><text x="54.7655%" y="271.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="54.5181%" y="245" width="0.0103%" height="15" fill="rgb(231,220,49)" fg:x="21171" fg:w="4"/><text x="54.7681%" y="255.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.01%)</title><rect x="54.5181%" y="229" width="0.0103%" height="15" fill="rgb(237,96,20)" fg:x="21171" fg:w="4"/><text x="54.7681%" y="239.50"></text></g><g><title>std::time::Instant::elapsed (208 samples, 0.54%)</title><rect x="54.0030%" y="485" width="0.5356%" height="15" fill="rgb(239,229,30)" fg:x="20971" fg:w="208"/><text x="54.2530%" y="495.50"></text></g><g><title>std::time::Instant::now (158 samples, 0.41%)</title><rect x="54.1318%" y="469" width="0.4069%" height="15" fill="rgb(219,65,33)" fg:x="21021" fg:w="158"/><text x="54.3818%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (158 samples, 0.41%)</title><rect x="54.1318%" y="453" width="0.4069%" height="15" fill="rgb(243,134,7)" fg:x="21021" fg:w="158"/><text x="54.3818%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (155 samples, 0.40%)</title><rect x="54.1395%" y="437" width="0.3991%" height="15" fill="rgb(216,177,54)" fg:x="21024" fg:w="155"/><text x="54.3895%" y="447.50"></text></g><g><title>clock_gettime (151 samples, 0.39%)</title><rect x="54.1498%" y="421" width="0.3888%" height="15" fill="rgb(211,160,20)" fg:x="21028" fg:w="151"/><text x="54.3998%" y="431.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.01%)</title><rect x="54.5284%" y="405" width="0.0103%" height="15" fill="rgb(239,85,39)" fg:x="21175" fg:w="4"/><text x="54.7784%" y="415.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (317 samples, 0.82%)</title><rect x="54.7138%" y="469" width="0.8163%" height="15" fill="rgb(232,125,22)" fg:x="21247" fg:w="317"/><text x="54.9638%" y="479.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (317 samples, 0.82%)</title><rect x="54.7138%" y="453" width="0.8163%" height="15" fill="rgb(244,57,34)" fg:x="21247" fg:w="317"/><text x="54.9638%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (317 samples, 0.82%)</title><rect x="54.7138%" y="437" width="0.8163%" height="15" fill="rgb(214,203,32)" fg:x="21247" fg:w="317"/><text x="54.9638%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="55.5301%" y="469" width="0.0155%" height="15" fill="rgb(207,58,43)" fg:x="21564" fg:w="6"/><text x="55.7801%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (76 samples, 0.20%)</title><rect x="55.5533%" y="453" width="0.1957%" height="15" fill="rgb(215,193,15)" fg:x="21573" fg:w="76"/><text x="55.8033%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.20%)</title><rect x="55.5533%" y="437" width="0.1957%" height="15" fill="rgb(232,15,44)" fg:x="21573" fg:w="76"/><text x="55.8033%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (75 samples, 0.19%)</title><rect x="55.5558%" y="421" width="0.1931%" height="15" fill="rgb(212,3,48)" fg:x="21574" fg:w="75"/><text x="55.8058%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (71 samples, 0.18%)</title><rect x="55.5661%" y="405" width="0.1828%" height="15" fill="rgb(218,128,7)" fg:x="21578" fg:w="71"/><text x="55.8161%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (71 samples, 0.18%)</title><rect x="55.5661%" y="389" width="0.1828%" height="15" fill="rgb(226,216,39)" fg:x="21578" fg:w="71"/><text x="55.8161%" y="399.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="55.7490%" y="437" width="0.0155%" height="15" fill="rgb(243,47,51)" fg:x="21649" fg:w="6"/><text x="55.9990%" y="447.50"></text></g><g><title>std::sync::poison::Flag::guard (6 samples, 0.02%)</title><rect x="55.7490%" y="421" width="0.0155%" height="15" fill="rgb(241,183,40)" fg:x="21649" fg:w="6"/><text x="55.9990%" y="431.50"></text></g><g><title>std::thread::panicking (6 samples, 0.02%)</title><rect x="55.7490%" y="405" width="0.0155%" height="15" fill="rgb(231,217,32)" fg:x="21649" fg:w="6"/><text x="55.9990%" y="415.50"></text></g><g><title>std::panicking::panicking (6 samples, 0.02%)</title><rect x="55.7490%" y="389" width="0.0155%" height="15" fill="rgb(229,61,38)" fg:x="21649" fg:w="6"/><text x="55.9990%" y="399.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (6 samples, 0.02%)</title><rect x="55.7490%" y="373" width="0.0155%" height="15" fill="rgb(225,210,5)" fg:x="21649" fg:w="6"/><text x="55.9990%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (73 samples, 0.19%)</title><rect x="55.7490%" y="453" width="0.1880%" height="15" fill="rgb(231,79,45)" fg:x="21649" fg:w="73"/><text x="55.9990%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (67 samples, 0.17%)</title><rect x="55.7644%" y="437" width="0.1725%" height="15" fill="rgb(224,100,7)" fg:x="21655" fg:w="67"/><text x="56.0144%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (66 samples, 0.17%)</title><rect x="55.7670%" y="421" width="0.1700%" height="15" fill="rgb(241,198,18)" fg:x="21656" fg:w="66"/><text x="56.0170%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (66 samples, 0.17%)</title><rect x="55.7670%" y="405" width="0.1700%" height="15" fill="rgb(252,97,53)" fg:x="21656" fg:w="66"/><text x="56.0170%" y="415.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLDec as zssp::crypto::aes::Aes256Dec&gt;::decrypt_in_place (355 samples, 0.91%)</title><rect x="55.5533%" y="469" width="0.9142%" height="15" fill="rgb(220,88,7)" fg:x="21573" fg:w="355"/><text x="55.8033%" y="479.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (206 samples, 0.53%)</title><rect x="55.9370%" y="453" width="0.5305%" height="15" fill="rgb(213,176,14)" fg:x="21722" fg:w="206"/><text x="56.1870%" y="463.50"></text></g><g><title>EVP_DecryptUpdate (202 samples, 0.52%)</title><rect x="55.9473%" y="437" width="0.5202%" height="15" fill="rgb(246,73,7)" fg:x="21726" fg:w="202"/><text x="56.1973%" y="447.50"></text></g><g><title>[libcrypto.so.3] (165 samples, 0.42%)</title><rect x="56.0425%" y="421" width="0.4249%" height="15" fill="rgb(245,64,36)" fg:x="21763" fg:w="165"/><text x="56.2925%" y="431.50"></text></g><g><title>[libcrypto.so.3] (125 samples, 0.32%)</title><rect x="56.1455%" y="405" width="0.3219%" height="15" fill="rgb(245,80,10)" fg:x="21803" fg:w="125"/><text x="56.3955%" y="415.50"></text></g><g><title>[libcrypto.so.3] (116 samples, 0.30%)</title><rect x="56.1687%" y="389" width="0.2987%" height="15" fill="rgb(232,107,50)" fg:x="21812" fg:w="116"/><text x="56.4187%" y="399.50"></text></g><g><title>__rust_probestack (6 samples, 0.02%)</title><rect x="56.4674%" y="469" width="0.0155%" height="15" fill="rgb(253,3,0)" fg:x="21928" fg:w="6"/><text x="56.7174%" y="479.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.01%)</title><rect x="56.4829%" y="469" width="0.0129%" height="15" fill="rgb(212,99,53)" fg:x="21934" fg:w="5"/><text x="56.7329%" y="479.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (5 samples, 0.01%)</title><rect x="56.4829%" y="453" width="0.0129%" height="15" fill="rgb(249,111,54)" fg:x="21934" fg:w="5"/><text x="56.7329%" y="463.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade::_{{closure}} (6 samples, 0.02%)</title><rect x="56.5189%" y="405" width="0.0155%" height="15" fill="rgb(249,55,30)" fg:x="21948" fg:w="6"/><text x="56.7689%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (73 samples, 0.19%)</title><rect x="56.5344%" y="405" width="0.1880%" height="15" fill="rgb(237,47,42)" fg:x="21954" fg:w="73"/><text x="56.7844%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (73 samples, 0.19%)</title><rect x="56.5344%" y="389" width="0.1880%" height="15" fill="rgb(211,20,18)" fg:x="21954" fg:w="73"/><text x="56.7844%" y="399.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (92 samples, 0.24%)</title><rect x="56.5009%" y="437" width="0.2369%" height="15" fill="rgb(231,203,46)" fg:x="21941" fg:w="92"/><text x="56.7509%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (88 samples, 0.23%)</title><rect x="56.5112%" y="421" width="0.2266%" height="15" fill="rgb(237,142,3)" fg:x="21945" fg:w="88"/><text x="56.7612%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.02%)</title><rect x="56.7224%" y="405" width="0.0155%" height="15" fill="rgb(241,107,1)" fg:x="22027" fg:w="6"/><text x="56.9724%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="56.7224%" y="389" width="0.0155%" height="15" fill="rgb(229,83,13)" fg:x="22027" fg:w="6"/><text x="56.9724%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (99 samples, 0.25%)</title><rect x="56.5009%" y="469" width="0.2549%" height="15" fill="rgb(241,91,40)" fg:x="21941" fg:w="99"/><text x="56.7509%" y="479.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive::_{{closure}} (99 samples, 0.25%)</title><rect x="56.5009%" y="453" width="0.2549%" height="15" fill="rgb(225,3,45)" fg:x="21941" fg:w="99"/><text x="56.7509%" y="463.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (7 samples, 0.02%)</title><rect x="56.7378%" y="437" width="0.0180%" height="15" fill="rgb(244,223,14)" fg:x="22033" fg:w="7"/><text x="56.9878%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt; (45 samples, 0.12%)</title><rect x="56.7559%" y="469" width="0.1159%" height="15" fill="rgb(224,124,37)" fg:x="22040" fg:w="45"/><text x="57.0059%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.12%)</title><rect x="56.7559%" y="453" width="0.1159%" height="15" fill="rgb(251,171,30)" fg:x="22040" fg:w="45"/><text x="57.0059%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (43 samples, 0.11%)</title><rect x="56.7610%" y="437" width="0.1107%" height="15" fill="rgb(236,46,54)" fg:x="22042" fg:w="43"/><text x="57.0110%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (43 samples, 0.11%)</title><rect x="56.7610%" y="421" width="0.1107%" height="15" fill="rgb(245,213,5)" fg:x="22042" fg:w="43"/><text x="57.0110%" y="431.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.01%)</title><rect x="56.8949%" y="293" width="0.0103%" height="15" fill="rgb(230,144,27)" fg:x="22094" fg:w="4"/><text x="57.1449%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.01%)</title><rect x="56.8949%" y="277" width="0.0103%" height="15" fill="rgb(220,86,6)" fg:x="22094" fg:w="4"/><text x="57.1449%" y="287.50"></text></g><g><title>__rust_dealloc (9 samples, 0.02%)</title><rect x="56.9052%" y="293" width="0.0232%" height="15" fill="rgb(240,20,13)" fg:x="22098" fg:w="9"/><text x="57.1552%" y="303.50"></text></g><g><title>[libc.so.6] (76 samples, 0.20%)</title><rect x="58.2494%" y="261" width="0.1957%" height="15" fill="rgb(217,89,34)" fg:x="22620" fg:w="76"/><text x="58.4994%" y="271.50"></text></g><g><title>__entry_text_start (13 samples, 0.03%)</title><rect x="58.5687%" y="245" width="0.0335%" height="15" fill="rgb(229,13,5)" fg:x="22744" fg:w="13"/><text x="58.8187%" y="255.50"></text></g><g><title>futex_unqueue (17 samples, 0.04%)</title><rect x="58.6640%" y="165" width="0.0438%" height="15" fill="rgb(244,67,35)" fg:x="22781" fg:w="17"/><text x="58.9140%" y="175.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="58.7876%" y="117" width="0.0103%" height="15" fill="rgb(221,40,2)" fg:x="22829" fg:w="4"/><text x="59.0376%" y="127.50"></text></g><g><title>cpuacct_charge (10 samples, 0.03%)</title><rect x="58.8520%" y="53" width="0.0258%" height="15" fill="rgb(237,157,21)" fg:x="22854" fg:w="10"/><text x="59.1020%" y="63.50"></text></g><g><title>update_curr (18 samples, 0.05%)</title><rect x="58.8340%" y="69" width="0.0464%" height="15" fill="rgb(222,94,11)" fg:x="22847" fg:w="18"/><text x="59.0840%" y="79.50"></text></g><g><title>dequeue_entity (32 samples, 0.08%)</title><rect x="58.8108%" y="85" width="0.0824%" height="15" fill="rgb(249,113,6)" fg:x="22838" fg:w="32"/><text x="59.0608%" y="95.50"></text></g><g><title>update_load_avg (5 samples, 0.01%)</title><rect x="58.8803%" y="69" width="0.0129%" height="15" fill="rgb(238,137,36)" fg:x="22865" fg:w="5"/><text x="59.1303%" y="79.50"></text></g><g><title>dequeue_task (42 samples, 0.11%)</title><rect x="58.7979%" y="117" width="0.1082%" height="15" fill="rgb(210,102,26)" fg:x="22833" fg:w="42"/><text x="59.0479%" y="127.50"></text></g><g><title>dequeue_task_fair (42 samples, 0.11%)</title><rect x="58.7979%" y="101" width="0.1082%" height="15" fill="rgb(218,30,30)" fg:x="22833" fg:w="42"/><text x="59.0479%" y="111.50"></text></g><g><title>__perf_event_task_sched_in (9 samples, 0.02%)</title><rect x="58.9267%" y="101" width="0.0232%" height="15" fill="rgb(214,67,26)" fg:x="22883" fg:w="9"/><text x="59.1767%" y="111.50"></text></g><g><title>perf_ctx_enable (9 samples, 0.02%)</title><rect x="58.9267%" y="85" width="0.0232%" height="15" fill="rgb(251,9,53)" fg:x="22883" fg:w="9"/><text x="59.1767%" y="95.50"></text></g><g><title>x86_pmu_enable (9 samples, 0.02%)</title><rect x="58.9267%" y="69" width="0.0232%" height="15" fill="rgb(228,204,25)" fg:x="22883" fg:w="9"/><text x="59.1767%" y="79.50"></text></g><g><title>intel_pmu_enable_all (9 samples, 0.02%)</title><rect x="58.9267%" y="53" width="0.0232%" height="15" fill="rgb(207,153,8)" fg:x="22883" fg:w="9"/><text x="59.1767%" y="63.50"></text></g><g><title>native_write_msr (9 samples, 0.02%)</title><rect x="58.9267%" y="37" width="0.0232%" height="15" fill="rgb(242,9,16)" fg:x="22883" fg:w="9"/><text x="59.1767%" y="47.50"></text></g><g><title>finish_task_switch.isra.0 (29 samples, 0.07%)</title><rect x="58.9112%" y="117" width="0.0747%" height="15" fill="rgb(217,211,10)" fg:x="22877" fg:w="29"/><text x="59.1612%" y="127.50"></text></g><g><title>raw_spin_rq_unlock (12 samples, 0.03%)</title><rect x="58.9550%" y="101" width="0.0309%" height="15" fill="rgb(219,228,52)" fg:x="22894" fg:w="12"/><text x="59.2050%" y="111.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.01%)</title><rect x="58.9859%" y="101" width="0.0103%" height="15" fill="rgb(231,92,29)" fg:x="22906" fg:w="4"/><text x="59.2359%" y="111.50"></text></g><g><title>pick_next_task (10 samples, 0.03%)</title><rect x="58.9859%" y="117" width="0.0258%" height="15" fill="rgb(232,8,23)" fg:x="22906" fg:w="10"/><text x="59.2359%" y="127.50"></text></g><g><title>put_prev_task_fair (6 samples, 0.02%)</title><rect x="58.9962%" y="101" width="0.0155%" height="15" fill="rgb(216,211,34)" fg:x="22910" fg:w="6"/><text x="59.2462%" y="111.50"></text></g><g><title>prepare_task_switch (15 samples, 0.04%)</title><rect x="59.0117%" y="117" width="0.0386%" height="15" fill="rgb(236,151,0)" fg:x="22916" fg:w="15"/><text x="59.2617%" y="127.50"></text></g><g><title>__perf_event_task_sched_out (6 samples, 0.02%)</title><rect x="59.0348%" y="101" width="0.0155%" height="15" fill="rgb(209,168,3)" fg:x="22925" fg:w="6"/><text x="59.2848%" y="111.50"></text></g><g><title>psi_group_change (38 samples, 0.10%)</title><rect x="59.0760%" y="101" width="0.0979%" height="15" fill="rgb(208,129,28)" fg:x="22941" fg:w="38"/><text x="59.3260%" y="111.50"></text></g><g><title>psi_task_switch (52 samples, 0.13%)</title><rect x="59.0554%" y="117" width="0.1339%" height="15" fill="rgb(229,78,22)" fg:x="22933" fg:w="52"/><text x="59.3054%" y="127.50"></text></g><g><title>__schedule (179 samples, 0.46%)</title><rect x="58.7516%" y="133" width="0.4609%" height="15" fill="rgb(228,187,13)" fg:x="22815" fg:w="179"/><text x="59.0016%" y="143.50"></text></g><g><title>update_rq_clock (5 samples, 0.01%)</title><rect x="59.1996%" y="117" width="0.0129%" height="15" fill="rgb(240,119,24)" fg:x="22989" fg:w="5"/><text x="59.4496%" y="127.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.01%)</title><rect x="59.1996%" y="101" width="0.0129%" height="15" fill="rgb(209,194,42)" fg:x="22989" fg:w="5"/><text x="59.4496%" y="111.50"></text></g><g><title>sched_clock (4 samples, 0.01%)</title><rect x="59.2022%" y="85" width="0.0103%" height="15" fill="rgb(247,200,46)" fg:x="22990" fg:w="4"/><text x="59.4522%" y="95.50"></text></g><g><title>native_sched_clock (4 samples, 0.01%)</title><rect x="59.2022%" y="69" width="0.0103%" height="15" fill="rgb(218,76,16)" fg:x="22990" fg:w="4"/><text x="59.4522%" y="79.50"></text></g><g><title>futex_wait_queue (199 samples, 0.51%)</title><rect x="58.7078%" y="165" width="0.5125%" height="15" fill="rgb(225,21,48)" fg:x="22798" fg:w="199"/><text x="58.9578%" y="175.50"></text></g><g><title>schedule (187 samples, 0.48%)</title><rect x="58.7387%" y="149" width="0.4815%" height="15" fill="rgb(239,223,50)" fg:x="22810" fg:w="187"/><text x="58.9887%" y="159.50"></text></g><g><title>__get_user_nocheck_4 (26 samples, 0.07%)</title><rect x="59.2280%" y="149" width="0.0670%" height="15" fill="rgb(244,45,21)" fg:x="23000" fg:w="26"/><text x="59.4780%" y="159.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="59.2949%" y="149" width="0.0103%" height="15" fill="rgb(232,33,43)" fg:x="23026" fg:w="4"/><text x="59.5449%" y="159.50"></text></g><g><title>futex_hash (5 samples, 0.01%)</title><rect x="59.3078%" y="149" width="0.0129%" height="15" fill="rgb(209,8,3)" fg:x="23031" fg:w="5"/><text x="59.5578%" y="159.50"></text></g><g><title>futex_q_lock (5 samples, 0.01%)</title><rect x="59.3207%" y="149" width="0.0129%" height="15" fill="rgb(214,25,53)" fg:x="23036" fg:w="5"/><text x="59.5707%" y="159.50"></text></g><g><title>futex_q_unlock (5 samples, 0.01%)</title><rect x="59.3336%" y="149" width="0.0129%" height="15" fill="rgb(254,186,54)" fg:x="23041" fg:w="5"/><text x="59.5836%" y="159.50"></text></g><g><title>futex_wait (278 samples, 0.72%)</title><rect x="58.6383%" y="181" width="0.7159%" height="15" fill="rgb(208,174,49)" fg:x="22771" fg:w="278"/><text x="58.8883%" y="191.50"></text></g><g><title>futex_wait_setup (52 samples, 0.13%)</title><rect x="59.2203%" y="165" width="0.1339%" height="15" fill="rgb(233,191,51)" fg:x="22997" fg:w="52"/><text x="59.4703%" y="175.50"></text></g><g><title>do_futex (282 samples, 0.73%)</title><rect x="58.6305%" y="197" width="0.7262%" height="15" fill="rgb(222,134,10)" fg:x="22768" fg:w="282"/><text x="58.8805%" y="207.50"></text></g><g><title>__x64_sys_futex (292 samples, 0.75%)</title><rect x="58.6099%" y="213" width="0.7519%" height="15" fill="rgb(230,226,20)" fg:x="22760" fg:w="292"/><text x="58.8599%" y="223.50"></text></g><g><title>__get_user_8 (5 samples, 0.01%)</title><rect x="59.4263%" y="133" width="0.0129%" height="15" fill="rgb(251,111,25)" fg:x="23077" fg:w="5"/><text x="59.6763%" y="143.50"></text></g><g><title>rseq_ip_fixup (11 samples, 0.03%)</title><rect x="59.4134%" y="149" width="0.0283%" height="15" fill="rgb(224,40,46)" fg:x="23072" fg:w="11"/><text x="59.6634%" y="159.50"></text></g><g><title>exit_to_user_mode_loop (24 samples, 0.06%)</title><rect x="59.3851%" y="181" width="0.0618%" height="15" fill="rgb(236,108,47)" fg:x="23061" fg:w="24"/><text x="59.6351%" y="191.50"></text></g><g><title>__rseq_handle_notify_resume (15 samples, 0.04%)</title><rect x="59.4082%" y="165" width="0.0386%" height="15" fill="rgb(234,93,0)" fg:x="23070" fg:w="15"/><text x="59.6582%" y="175.50"></text></g><g><title>exit_to_user_mode_prepare (31 samples, 0.08%)</title><rect x="59.3748%" y="197" width="0.0798%" height="15" fill="rgb(224,213,32)" fg:x="23057" fg:w="31"/><text x="59.6248%" y="207.50"></text></g><g><title>do_syscall_64 (331 samples, 0.85%)</title><rect x="58.6074%" y="229" width="0.8524%" height="15" fill="rgb(251,11,48)" fg:x="22759" fg:w="331"/><text x="58.8574%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (36 samples, 0.09%)</title><rect x="59.3670%" y="213" width="0.0927%" height="15" fill="rgb(236,173,5)" fg:x="23054" fg:w="36"/><text x="59.6170%" y="223.50"></text></g><g><title>__lll_lock_wait_private (397 samples, 1.02%)</title><rect x="58.4451%" y="261" width="1.0223%" height="15" fill="rgb(230,95,12)" fg:x="22696" fg:w="397"/><text x="58.6951%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (335 samples, 0.86%)</title><rect x="58.6048%" y="245" width="0.8627%" height="15" fill="rgb(232,209,1)" fg:x="22758" fg:w="335"/><text x="58.8548%" y="255.50"></text></g><g><title>[libc.so.6] (911 samples, 2.35%)</title><rect x="57.1241%" y="277" width="2.3459%" height="15" fill="rgb(232,6,1)" fg:x="22183" fg:w="911"/><text x="57.3741%" y="287.50">[..</text></g><g><title>__entry_text_start (15 samples, 0.04%)</title><rect x="59.4881%" y="261" width="0.0386%" height="15" fill="rgb(210,224,50)" fg:x="23101" fg:w="15"/><text x="59.7381%" y="271.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="59.5267%" y="261" width="0.0103%" height="15" fill="rgb(228,127,35)" fg:x="23116" fg:w="4"/><text x="59.7767%" y="271.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="59.5679%" y="197" width="0.0129%" height="15" fill="rgb(245,102,45)" fg:x="23132" fg:w="5"/><text x="59.8179%" y="207.50"></text></g><g><title>futex_hash (8 samples, 0.02%)</title><rect x="59.5833%" y="197" width="0.0206%" height="15" fill="rgb(214,1,49)" fg:x="23138" fg:w="8"/><text x="59.8333%" y="207.50"></text></g><g><title>_raw_spin_lock (25 samples, 0.06%)</title><rect x="59.7147%" y="181" width="0.0644%" height="15" fill="rgb(226,163,40)" fg:x="23189" fg:w="25"/><text x="59.9647%" y="191.50"></text></g><g><title>native_queued_spin_lock_slowpath (25 samples, 0.06%)</title><rect x="59.7147%" y="165" width="0.0644%" height="15" fill="rgb(239,212,28)" fg:x="23189" fg:w="25"/><text x="59.9647%" y="175.50"></text></g><g><title>_raw_spin_unlock (4 samples, 0.01%)</title><rect x="59.7791%" y="181" width="0.0103%" height="15" fill="rgb(220,20,13)" fg:x="23214" fg:w="4"/><text x="60.0291%" y="191.50"></text></g><g><title>preempt_schedule_thunk (4 samples, 0.01%)</title><rect x="59.7791%" y="165" width="0.0103%" height="15" fill="rgb(210,164,35)" fg:x="23214" fg:w="4"/><text x="60.0291%" y="175.50"></text></g><g><title>preempt_schedule (4 samples, 0.01%)</title><rect x="59.7791%" y="149" width="0.0103%" height="15" fill="rgb(248,109,41)" fg:x="23214" fg:w="4"/><text x="60.0291%" y="159.50"></text></g><g><title>__schedule (4 samples, 0.01%)</title><rect x="59.7791%" y="133" width="0.0103%" height="15" fill="rgb(238,23,50)" fg:x="23214" fg:w="4"/><text x="60.0291%" y="143.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.01%)</title><rect x="59.7791%" y="117" width="0.0103%" height="15" fill="rgb(211,48,49)" fg:x="23214" fg:w="4"/><text x="60.0291%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="59.7791%" y="101" width="0.0103%" height="15" fill="rgb(223,36,21)" fg:x="23214" fg:w="4"/><text x="60.0291%" y="111.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.01%)</title><rect x="59.7791%" y="85" width="0.0103%" height="15" fill="rgb(207,123,46)" fg:x="23214" fg:w="4"/><text x="60.0291%" y="95.50"></text></g><g><title>futex_wake (77 samples, 0.20%)</title><rect x="59.6039%" y="197" width="0.1983%" height="15" fill="rgb(240,218,32)" fg:x="23146" fg:w="77"/><text x="59.8539%" y="207.50"></text></g><g><title>do_futex (97 samples, 0.25%)</title><rect x="59.5627%" y="213" width="0.2498%" height="15" fill="rgb(252,5,43)" fg:x="23130" fg:w="97"/><text x="59.8127%" y="223.50"></text></g><g><title>__x64_sys_futex (101 samples, 0.26%)</title><rect x="59.5550%" y="229" width="0.2601%" height="15" fill="rgb(252,84,19)" fg:x="23127" fg:w="101"/><text x="59.8050%" y="239.50"></text></g><g><title>do_syscall_64 (113 samples, 0.29%)</title><rect x="59.5499%" y="245" width="0.2910%" height="15" fill="rgb(243,152,39)" fg:x="23125" fg:w="113"/><text x="59.7999%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.02%)</title><rect x="59.8254%" y="229" width="0.0155%" height="15" fill="rgb(234,160,15)" fg:x="23232" fg:w="6"/><text x="60.0754%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="59.8280%" y="213" width="0.0129%" height="15" fill="rgb(237,34,20)" fg:x="23233" fg:w="5"/><text x="60.0780%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (1,146 samples, 2.95%)</title><rect x="56.8949%" y="309" width="2.9511%" height="15" fill="rgb(229,97,13)" fg:x="22094" fg:w="1146"/><text x="57.1449%" y="319.50">all..</text></g><g><title>cfree (1,133 samples, 2.92%)</title><rect x="56.9284%" y="293" width="2.9176%" height="15" fill="rgb(234,71,50)" fg:x="22107" fg:w="1133"/><text x="57.1784%" y="303.50">cf..</text></g><g><title>__lll_lock_wake_private (146 samples, 0.38%)</title><rect x="59.4700%" y="277" width="0.3760%" height="15" fill="rgb(253,155,4)" fg:x="23094" fg:w="146"/><text x="59.7200%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (120 samples, 0.31%)</title><rect x="59.5370%" y="261" width="0.3090%" height="15" fill="rgb(222,185,37)" fg:x="23120" fg:w="120"/><text x="59.7870%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,151 samples, 2.96%)</title><rect x="56.8949%" y="325" width="2.9640%" height="15" fill="rgb(251,177,13)" fg:x="22094" fg:w="1151"/><text x="57.1449%" y="335.50">&lt;al..</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (5 samples, 0.01%)</title><rect x="59.8460%" y="309" width="0.0129%" height="15" fill="rgb(250,179,40)" fg:x="23240" fg:w="5"/><text x="60.0960%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt; (1,169 samples, 3.01%)</title><rect x="56.8717%" y="469" width="3.0103%" height="15" fill="rgb(242,44,2)" fg:x="22085" fg:w="1169"/><text x="57.1217%" y="479.50">cor..</text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (1,169 samples, 3.01%)</title><rect x="56.8717%" y="453" width="3.0103%" height="15" fill="rgb(216,177,13)" fg:x="22085" fg:w="1169"/><text x="57.1217%" y="463.50">&lt;ar..</text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (1,169 samples, 3.01%)</title><rect x="56.8717%" y="437" width="3.0103%" height="15" fill="rgb(216,106,43)" fg:x="22085" fg:w="1169"/><text x="57.1217%" y="447.50">arr..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (1,169 samples, 3.01%)</title><rect x="56.8717%" y="421" width="3.0103%" height="15" fill="rgb(216,183,2)" fg:x="22085" fg:w="1169"/><text x="57.1217%" y="431.50">arr..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (1,169 samples, 3.01%)</title><rect x="56.8717%" y="405" width="3.0103%" height="15" fill="rgb(249,75,3)" fg:x="22085" fg:w="1169"/><text x="57.1217%" y="415.50">arr..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (1,162 samples, 2.99%)</title><rect x="56.8898%" y="389" width="2.9923%" height="15" fill="rgb(219,67,39)" fg:x="22092" fg:w="1162"/><text x="57.1398%" y="399.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,161 samples, 2.99%)</title><rect x="56.8923%" y="373" width="2.9897%" height="15" fill="rgb(253,228,2)" fg:x="22093" fg:w="1161"/><text x="57.1423%" y="383.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,161 samples, 2.99%)</title><rect x="56.8923%" y="357" width="2.9897%" height="15" fill="rgb(235,138,27)" fg:x="22093" fg:w="1161"/><text x="57.1423%" y="367.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,161 samples, 2.99%)</title><rect x="56.8923%" y="341" width="2.9897%" height="15" fill="rgb(236,97,51)" fg:x="22093" fg:w="1161"/><text x="57.1423%" y="351.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.02%)</title><rect x="59.8589%" y="325" width="0.0232%" height="15" fill="rgb(240,80,30)" fg:x="23245" fg:w="9"/><text x="60.1089%" y="335.50"></text></g><g><title>std::sync::poison::Flag::done (4 samples, 0.01%)</title><rect x="59.8821%" y="437" width="0.0103%" height="15" fill="rgb(230,178,19)" fg:x="23254" fg:w="4"/><text x="60.1321%" y="447.50"></text></g><g><title>std::thread::panicking (4 samples, 0.01%)</title><rect x="59.8821%" y="421" width="0.0103%" height="15" fill="rgb(210,190,27)" fg:x="23254" fg:w="4"/><text x="60.1321%" y="431.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.01%)</title><rect x="59.8821%" y="405" width="0.0103%" height="15" fill="rgb(222,107,31)" fg:x="23254" fg:w="4"/><text x="60.1321%" y="415.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.01%)</title><rect x="59.8821%" y="389" width="0.0103%" height="15" fill="rgb(216,127,34)" fg:x="23254" fg:w="4"/><text x="60.1321%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.21%)</title><rect x="59.8821%" y="453" width="0.2137%" height="15" fill="rgb(234,116,52)" fg:x="23254" fg:w="83"/><text x="60.1321%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (79 samples, 0.20%)</title><rect x="59.8924%" y="437" width="0.2034%" height="15" fill="rgb(222,124,15)" fg:x="23258" fg:w="79"/><text x="60.1424%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (76 samples, 0.20%)</title><rect x="59.9001%" y="421" width="0.1957%" height="15" fill="rgb(231,179,28)" fg:x="23261" fg:w="76"/><text x="60.1501%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (76 samples, 0.20%)</title><rect x="59.9001%" y="405" width="0.1957%" height="15" fill="rgb(226,93,45)" fg:x="23261" fg:w="76"/><text x="60.1501%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::fragged::Fragged&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt;&gt; (87 samples, 0.22%)</title><rect x="59.8821%" y="469" width="0.2240%" height="15" fill="rgb(215,8,51)" fg:x="23254" fg:w="87"/><text x="60.1321%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::fragged::Fragged&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="60.0958%" y="453" width="0.0103%" height="15" fill="rgb(223,106,5)" fg:x="23337" fg:w="4"/><text x="60.3458%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;core::num::nonzero::NonZeroU32,alloc::sync::Weak&lt;zssp::zeta::Session&lt;benchmark::TestApplication&gt;&gt;&gt;&gt;&gt; (88 samples, 0.23%)</title><rect x="60.1061%" y="469" width="0.2266%" height="15" fill="rgb(250,191,5)" fg:x="23341" fg:w="88"/><text x="60.3561%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.23%)</title><rect x="60.1061%" y="453" width="0.2266%" height="15" fill="rgb(242,132,44)" fg:x="23341" fg:w="88"/><text x="60.3561%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (88 samples, 0.23%)</title><rect x="60.1061%" y="437" width="0.2266%" height="15" fill="rgb(251,152,29)" fg:x="23341" fg:w="88"/><text x="60.3561%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (80 samples, 0.21%)</title><rect x="60.1267%" y="421" width="0.2060%" height="15" fill="rgb(218,179,5)" fg:x="23349" fg:w="80"/><text x="60.3767%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (80 samples, 0.21%)</title><rect x="60.1267%" y="405" width="0.2060%" height="15" fill="rgb(227,67,19)" fg:x="23349" fg:w="80"/><text x="60.3767%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;zssp::zeta::MutableState&lt;benchmark::TestApplication&gt;&gt;&gt; (59 samples, 0.15%)</title><rect x="60.3327%" y="469" width="0.1519%" height="15" fill="rgb(233,119,31)" fg:x="23429" fg:w="59"/><text x="60.5827%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.15%)</title><rect x="60.3327%" y="453" width="0.1519%" height="15" fill="rgb(241,120,22)" fg:x="23429" fg:w="59"/><text x="60.5827%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (59 samples, 0.15%)</title><rect x="60.3327%" y="437" width="0.1519%" height="15" fill="rgb(224,102,30)" fg:x="23429" fg:w="59"/><text x="60.5827%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (54 samples, 0.14%)</title><rect x="60.3456%" y="421" width="0.1391%" height="15" fill="rgb(210,164,37)" fg:x="23434" fg:w="54"/><text x="60.5956%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (54 samples, 0.14%)</title><rect x="60.3456%" y="405" width="0.1391%" height="15" fill="rgb(226,191,16)" fg:x="23434" fg:w="54"/><text x="60.5956%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.02%)</title><rect x="60.4872%" y="469" width="0.0155%" height="15" fill="rgb(214,40,45)" fg:x="23489" fg:w="6"/><text x="60.7372%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.02%)</title><rect x="60.4872%" y="453" width="0.0155%" height="15" fill="rgb(244,29,26)" fg:x="23489" fg:w="6"/><text x="60.7372%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.02%)</title><rect x="60.4872%" y="437" width="0.0155%" height="15" fill="rgb(216,16,5)" fg:x="23489" fg:w="6"/><text x="60.7372%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.02%)</title><rect x="60.4872%" y="421" width="0.0155%" height="15" fill="rgb(249,76,35)" fg:x="23489" fg:w="6"/><text x="60.7372%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.02%)</title><rect x="60.4872%" y="405" width="0.0155%" height="15" fill="rgb(207,11,44)" fg:x="23489" fg:w="6"/><text x="60.7372%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="60.5593%" y="325" width="0.0232%" height="15" fill="rgb(228,190,49)" fg:x="23517" fg:w="9"/><text x="60.8093%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (22 samples, 0.06%)</title><rect x="60.5413%" y="341" width="0.0567%" height="15" fill="rgb(214,173,12)" fg:x="23510" fg:w="22"/><text x="60.7913%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.02%)</title><rect x="60.5825%" y="325" width="0.0155%" height="15" fill="rgb(218,26,35)" fg:x="23526" fg:w="6"/><text x="60.8325%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.04%)</title><rect x="60.6211%" y="325" width="0.0386%" height="15" fill="rgb(220,200,19)" fg:x="23541" fg:w="15"/><text x="60.8711%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (78 samples, 0.20%)</title><rect x="60.5104%" y="389" width="0.2009%" height="15" fill="rgb(239,95,49)" fg:x="23498" fg:w="78"/><text x="60.7604%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (78 samples, 0.20%)</title><rect x="60.5104%" y="373" width="0.2009%" height="15" fill="rgb(235,85,53)" fg:x="23498" fg:w="78"/><text x="60.7604%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (78 samples, 0.20%)</title><rect x="60.5104%" y="357" width="0.2009%" height="15" fill="rgb(233,133,31)" fg:x="23498" fg:w="78"/><text x="60.7604%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (44 samples, 0.11%)</title><rect x="60.5979%" y="341" width="0.1133%" height="15" fill="rgb(218,25,20)" fg:x="23532" fg:w="44"/><text x="60.8479%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20 samples, 0.05%)</title><rect x="60.6597%" y="325" width="0.0515%" height="15" fill="rgb(252,210,38)" fg:x="23556" fg:w="20"/><text x="60.9097%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (98 samples, 0.25%)</title><rect x="60.5027%" y="421" width="0.2524%" height="15" fill="rgb(242,134,21)" fg:x="23495" fg:w="98"/><text x="60.7527%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (98 samples, 0.25%)</title><rect x="60.5027%" y="405" width="0.2524%" height="15" fill="rgb(213,28,48)" fg:x="23495" fg:w="98"/><text x="60.7527%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.04%)</title><rect x="60.7164%" y="389" width="0.0386%" height="15" fill="rgb(250,196,2)" fg:x="23578" fg:w="15"/><text x="60.9664%" y="399.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::hash::Hash&gt;::hash (15 samples, 0.04%)</title><rect x="60.7164%" y="373" width="0.0386%" height="15" fill="rgb(227,5,17)" fg:x="23578" fg:w="15"/><text x="60.9664%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (15 samples, 0.04%)</title><rect x="60.7164%" y="357" width="0.0386%" height="15" fill="rgb(221,226,24)" fg:x="23578" fg:w="15"/><text x="60.9664%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u32 (15 samples, 0.04%)</title><rect x="60.7164%" y="341" width="0.0386%" height="15" fill="rgb(211,5,48)" fg:x="23578" fg:w="15"/><text x="60.9664%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.04%)</title><rect x="60.7164%" y="325" width="0.0386%" height="15" fill="rgb(219,150,6)" fg:x="23578" fg:w="15"/><text x="60.9664%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.04%)</title><rect x="60.7164%" y="309" width="0.0386%" height="15" fill="rgb(251,46,16)" fg:x="23578" fg:w="15"/><text x="60.9664%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.04%)</title><rect x="60.7164%" y="293" width="0.0386%" height="15" fill="rgb(220,204,40)" fg:x="23578" fg:w="15"/><text x="60.9664%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.03%)</title><rect x="60.7293%" y="277" width="0.0258%" height="15" fill="rgb(211,85,2)" fg:x="23583" fg:w="10"/><text x="60.9793%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="60.7808%" y="373" width="0.0155%" height="15" fill="rgb(229,17,7)" fg:x="23603" fg:w="6"/><text x="61.0308%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (10 samples, 0.03%)</title><rect x="60.7962%" y="357" width="0.0258%" height="15" fill="rgb(239,72,28)" fg:x="23609" fg:w="10"/><text x="61.0462%" y="367.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::cmp::PartialEq&gt;::eq (10 samples, 0.03%)</title><rect x="60.7962%" y="341" width="0.0258%" height="15" fill="rgb(230,47,54)" fg:x="23609" fg:w="10"/><text x="61.0462%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (17 samples, 0.04%)</title><rect x="60.7962%" y="373" width="0.0438%" height="15" fill="rgb(214,50,8)" fg:x="23609" fg:w="17"/><text x="61.0462%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (7 samples, 0.02%)</title><rect x="60.8220%" y="357" width="0.0180%" height="15" fill="rgb(216,198,43)" fg:x="23619" fg:w="7"/><text x="61.0720%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (7 samples, 0.02%)</title><rect x="60.8220%" y="341" width="0.0180%" height="15" fill="rgb(234,20,35)" fg:x="23619" fg:w="7"/><text x="61.0720%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.02%)</title><rect x="60.8220%" y="325" width="0.0180%" height="15" fill="rgb(254,45,19)" fg:x="23619" fg:w="7"/><text x="61.0720%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.02%)</title><rect x="60.8220%" y="309" width="0.0180%" height="15" fill="rgb(219,14,44)" fg:x="23619" fg:w="7"/><text x="61.0720%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (14 samples, 0.04%)</title><rect x="60.8400%" y="373" width="0.0361%" height="15" fill="rgb(217,220,26)" fg:x="23626" fg:w="14"/><text x="61.0900%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (149 samples, 0.38%)</title><rect x="60.5027%" y="437" width="0.3837%" height="15" fill="rgb(213,158,28)" fg:x="23495" fg:w="149"/><text x="60.7527%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (51 samples, 0.13%)</title><rect x="60.7550%" y="421" width="0.1313%" height="15" fill="rgb(252,51,52)" fg:x="23593" fg:w="51"/><text x="61.0050%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (51 samples, 0.13%)</title><rect x="60.7550%" y="405" width="0.1313%" height="15" fill="rgb(246,89,16)" fg:x="23593" fg:w="51"/><text x="61.0050%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (51 samples, 0.13%)</title><rect x="60.7550%" y="389" width="0.1313%" height="15" fill="rgb(216,158,49)" fg:x="23593" fg:w="51"/><text x="61.0050%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="60.8761%" y="373" width="0.0103%" height="15" fill="rgb(236,107,19)" fg:x="23640" fg:w="4"/><text x="61.1261%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="60.8761%" y="357" width="0.0103%" height="15" fill="rgb(228,185,30)" fg:x="23640" fg:w="4"/><text x="61.1261%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (153 samples, 0.39%)</title><rect x="60.5027%" y="469" width="0.3940%" height="15" fill="rgb(246,134,8)" fg:x="23495" fg:w="153"/><text x="60.7527%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (153 samples, 0.39%)</title><rect x="60.5027%" y="453" width="0.3940%" height="15" fill="rgb(214,143,50)" fg:x="23495" fg:w="153"/><text x="60.7527%" y="463.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (4 samples, 0.01%)</title><rect x="60.8864%" y="437" width="0.0103%" height="15" fill="rgb(228,75,8)" fg:x="23644" fg:w="4"/><text x="61.1364%" y="447.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="60.8992%" y="453" width="0.0129%" height="15" fill="rgb(207,175,4)" fg:x="23649" fg:w="5"/><text x="61.1492%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.13%)</title><rect x="60.8967%" y="469" width="0.1288%" height="15" fill="rgb(205,108,24)" fg:x="23648" fg:w="50"/><text x="61.1467%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (44 samples, 0.11%)</title><rect x="60.9121%" y="453" width="0.1133%" height="15" fill="rgb(244,120,49)" fg:x="23654" fg:w="44"/><text x="61.1621%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (42 samples, 0.11%)</title><rect x="60.9173%" y="437" width="0.1082%" height="15" fill="rgb(223,47,38)" fg:x="23656" fg:w="42"/><text x="61.1673%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.11%)</title><rect x="60.9173%" y="421" width="0.1082%" height="15" fill="rgb(229,179,11)" fg:x="23656" fg:w="42"/><text x="61.1673%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (135 samples, 0.35%)</title><rect x="61.0640%" y="437" width="0.3476%" height="15" fill="rgb(231,122,1)" fg:x="23713" fg:w="135"/><text x="61.3140%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (135 samples, 0.35%)</title><rect x="61.0640%" y="421" width="0.3476%" height="15" fill="rgb(245,119,9)" fg:x="23713" fg:w="135"/><text x="61.3140%" y="431.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (158 samples, 0.41%)</title><rect x="61.0254%" y="469" width="0.4069%" height="15" fill="rgb(241,163,25)" fg:x="23698" fg:w="158"/><text x="61.2754%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (158 samples, 0.41%)</title><rect x="61.0254%" y="453" width="0.4069%" height="15" fill="rgb(217,214,3)" fg:x="23698" fg:w="158"/><text x="61.2754%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (8 samples, 0.02%)</title><rect x="61.4117%" y="437" width="0.0206%" height="15" fill="rgb(240,86,28)" fg:x="23848" fg:w="8"/><text x="61.6617%" y="447.50"></text></g><g><title>zssp::antireplay::Window&lt;_,_&gt;::check (10 samples, 0.03%)</title><rect x="61.4323%" y="469" width="0.0258%" height="15" fill="rgb(215,47,9)" fg:x="23856" fg:w="10"/><text x="61.6823%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (6 samples, 0.02%)</title><rect x="61.4426%" y="453" width="0.0155%" height="15" fill="rgb(252,25,45)" fg:x="23860" fg:w="6"/><text x="61.6926%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="61.4426%" y="437" width="0.0155%" height="15" fill="rgb(251,164,9)" fg:x="23860" fg:w="6"/><text x="61.6926%" y="447.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (19 samples, 0.05%)</title><rect x="61.5121%" y="453" width="0.0489%" height="15" fill="rgb(233,194,0)" fg:x="23887" fg:w="19"/><text x="61.7621%" y="463.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (19 samples, 0.05%)</title><rect x="61.5121%" y="437" width="0.0489%" height="15" fill="rgb(249,111,24)" fg:x="23887" fg:w="19"/><text x="61.7621%" y="447.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (19 samples, 0.05%)</title><rect x="61.5121%" y="421" width="0.0489%" height="15" fill="rgb(250,223,3)" fg:x="23887" fg:w="19"/><text x="61.7621%" y="431.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (11 samples, 0.03%)</title><rect x="61.5327%" y="405" width="0.0283%" height="15" fill="rgb(236,178,37)" fg:x="23895" fg:w="11"/><text x="61.7827%" y="415.50"></text></g><g><title>core::ptr::write (11 samples, 0.03%)</title><rect x="61.5327%" y="389" width="0.0283%" height="15" fill="rgb(241,158,50)" fg:x="23895" fg:w="11"/><text x="61.7827%" y="399.50"></text></g><g><title>zssp::fragged::Fragged&lt;Fragment,_&gt;::assemble (59 samples, 0.15%)</title><rect x="61.4580%" y="469" width="0.1519%" height="15" fill="rgb(213,121,41)" fg:x="23866" fg:w="59"/><text x="61.7080%" y="479.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (39 samples, 0.10%)</title><rect x="61.6151%" y="453" width="0.1004%" height="15" fill="rgb(240,92,3)" fg:x="23927" fg:w="39"/><text x="61.8651%" y="463.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (39 samples, 0.10%)</title><rect x="61.6151%" y="437" width="0.1004%" height="15" fill="rgb(205,123,3)" fg:x="23927" fg:w="39"/><text x="61.8651%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (39 samples, 0.10%)</title><rect x="61.6151%" y="421" width="0.1004%" height="15" fill="rgb(205,97,47)" fg:x="23927" fg:w="39"/><text x="61.8651%" y="431.50"></text></g><g><title>zssp::zeta::from_nonce (44 samples, 0.11%)</title><rect x="61.6100%" y="469" width="0.1133%" height="15" fill="rgb(247,152,14)" fg:x="23925" fg:w="44"/><text x="61.8600%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="61.7774%" y="453" width="0.0103%" height="15" fill="rgb(248,195,53)" fg:x="23990" fg:w="4"/><text x="62.0274%" y="463.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.15%)</title><rect x="61.7877%" y="453" width="0.1545%" height="15" fill="rgb(226,201,16)" fg:x="23994" fg:w="60"/><text x="62.0377%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (60 samples, 0.15%)</title><rect x="61.7877%" y="437" width="0.1545%" height="15" fill="rgb(205,98,0)" fg:x="23994" fg:w="60"/><text x="62.0377%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (60 samples, 0.15%)</title><rect x="61.7877%" y="421" width="0.1545%" height="15" fill="rgb(214,191,48)" fg:x="23994" fg:w="60"/><text x="62.0377%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (60 samples, 0.15%)</title><rect x="61.7877%" y="405" width="0.1545%" height="15" fill="rgb(237,112,39)" fg:x="23994" fg:w="60"/><text x="62.0377%" y="415.50"></text></g><g><title>EVP_CIPHER_CTX_get_block_size (5 samples, 0.01%)</title><rect x="62.1713%" y="405" width="0.0129%" height="15" fill="rgb(247,203,27)" fg:x="24143" fg:w="5"/><text x="62.4213%" y="415.50"></text></g><g><title>CRYPTO_gcm128_decrypt (268 samples, 0.69%)</title><rect x="62.3722%" y="357" width="0.6901%" height="15" fill="rgb(235,124,28)" fg:x="24221" fg:w="268"/><text x="62.6222%" y="367.50"></text></g><g><title>[libcrypto.so.3] (104 samples, 0.27%)</title><rect x="62.7945%" y="341" width="0.2678%" height="15" fill="rgb(208,207,46)" fg:x="24385" fg:w="104"/><text x="63.0445%" y="351.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (512 samples, 1.32%)</title><rect x="63.0623%" y="357" width="1.3185%" height="15" fill="rgb(234,176,4)" fg:x="24489" fg:w="512"/><text x="63.3123%" y="367.50"></text></g><g><title>[libcrypto.so.3] (396 samples, 1.02%)</title><rect x="63.3611%" y="341" width="1.0198%" height="15" fill="rgb(230,133,28)" fg:x="24605" fg:w="396"/><text x="63.6111%" y="351.50"></text></g><g><title>[libcrypto.so.3] (25 samples, 0.06%)</title><rect x="64.3164%" y="325" width="0.0644%" height="15" fill="rgb(211,137,40)" fg:x="24976" fg:w="25"/><text x="64.5664%" y="335.50"></text></g><g><title>CRYPTO_gcm128_setiv (25 samples, 0.06%)</title><rect x="64.3808%" y="357" width="0.0644%" height="15" fill="rgb(254,35,13)" fg:x="25001" fg:w="25"/><text x="64.6308%" y="367.50"></text></g><g><title>[libcrypto.so.3] (22 samples, 0.06%)</title><rect x="64.3885%" y="341" width="0.0567%" height="15" fill="rgb(225,49,51)" fg:x="25004" fg:w="22"/><text x="64.6385%" y="351.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::decrypt_in_place (4,728 samples, 12.18%)</title><rect x="61.9422%" y="453" width="12.1752%" height="15" fill="rgb(251,10,15)" fg:x="24054" fg:w="4728"/><text x="62.1922%" y="463.50">&lt;zssp::crypto_impl..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (4,725 samples, 12.17%)</title><rect x="61.9499%" y="437" width="12.1675%" height="15" fill="rgb(228,207,15)" fg:x="24057" fg:w="4725"/><text x="62.1999%" y="447.50">zssp::crypto_impl:..</text></g><g><title>EVP_DecryptUpdate (4,725 samples, 12.17%)</title><rect x="61.9499%" y="421" width="12.1675%" height="15" fill="rgb(241,99,19)" fg:x="24057" fg:w="4725"/><text x="62.1999%" y="431.50">EVP_DecryptUpdate</text></g><g><title>[libcrypto.so.3] (4,634 samples, 11.93%)</title><rect x="62.1842%" y="405" width="11.9331%" height="15" fill="rgb(207,104,49)" fg:x="24148" fg:w="4634"/><text x="62.4342%" y="415.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (4,632 samples, 11.93%)</title><rect x="62.1894%" y="389" width="11.9280%" height="15" fill="rgb(234,99,18)" fg:x="24150" fg:w="4632"/><text x="62.4394%" y="399.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (4,611 samples, 11.87%)</title><rect x="62.2435%" y="373" width="11.8739%" height="15" fill="rgb(213,191,49)" fg:x="24171" fg:w="4611"/><text x="62.4935%" y="383.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (3,756 samples, 9.67%)</title><rect x="64.4452%" y="357" width="9.6722%" height="15" fill="rgb(210,226,19)" fg:x="25026" fg:w="3756"/><text x="64.6952%" y="367.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3] (3,594 samples, 9.26%)</title><rect x="64.8624%" y="341" width="9.2550%" height="15" fill="rgb(229,97,18)" fg:x="25188" fg:w="3594"/><text x="65.1124%" y="351.50">[libcrypto.so..</text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec&gt; (7 samples, 0.02%)</title><rect x="74.1174%" y="437" width="0.0180%" height="15" fill="rgb(211,167,15)" fg:x="28782" fg:w="7"/><text x="74.3674%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (7 samples, 0.02%)</title><rect x="74.1174%" y="421" width="0.0180%" height="15" fill="rgb(210,169,34)" fg:x="28782" fg:w="7"/><text x="74.3674%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="74.1174%" y="405" width="0.0180%" height="15" fill="rgb(241,121,31)" fg:x="28782" fg:w="7"/><text x="74.3674%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (6 samples, 0.02%)</title><rect x="74.1199%" y="389" width="0.0155%" height="15" fill="rgb(232,40,11)" fg:x="28783" fg:w="6"/><text x="74.3699%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (6 samples, 0.02%)</title><rect x="74.1199%" y="373" width="0.0155%" height="15" fill="rgb(205,86,26)" fg:x="28783" fg:w="6"/><text x="74.3699%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.02%)</title><rect x="74.1199%" y="357" width="0.0155%" height="15" fill="rgb(231,126,28)" fg:x="28783" fg:w="6"/><text x="74.3699%" y="367.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="74.2075%" y="341" width="0.0103%" height="15" fill="rgb(219,221,18)" fg:x="28817" fg:w="4"/><text x="74.4575%" y="351.50"></text></g><g><title>CRYPTO_gcm128_finish (47 samples, 0.12%)</title><rect x="74.1689%" y="357" width="0.1210%" height="15" fill="rgb(211,40,0)" fg:x="28802" fg:w="47"/><text x="74.4189%" y="367.50"></text></g><g><title>[libcrypto.so.3] (28 samples, 0.07%)</title><rect x="74.2178%" y="341" width="0.0721%" height="15" fill="rgb(239,85,43)" fg:x="28821" fg:w="28"/><text x="74.4678%" y="351.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (63 samples, 0.16%)</title><rect x="74.1354%" y="437" width="0.1622%" height="15" fill="rgb(231,55,21)" fg:x="28789" fg:w="63"/><text x="74.3854%" y="447.50"></text></g><g><title>EVP_DecryptFinal_ex (63 samples, 0.16%)</title><rect x="74.1354%" y="421" width="0.1622%" height="15" fill="rgb(225,184,43)" fg:x="28789" fg:w="63"/><text x="74.3854%" y="431.50"></text></g><g><title>[libcrypto.so.3] (58 samples, 0.15%)</title><rect x="74.1483%" y="405" width="0.1494%" height="15" fill="rgb(251,158,41)" fg:x="28794" fg:w="58"/><text x="74.3983%" y="415.50"></text></g><g><title>[libcrypto.so.3] (56 samples, 0.14%)</title><rect x="74.1534%" y="389" width="0.1442%" height="15" fill="rgb(234,159,37)" fg:x="28796" fg:w="56"/><text x="74.4034%" y="399.50"></text></g><g><title>[libcrypto.so.3] (51 samples, 0.13%)</title><rect x="74.1663%" y="373" width="0.1313%" height="15" fill="rgb(216,204,22)" fg:x="28801" fg:w="51"/><text x="74.4163%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (27 samples, 0.07%)</title><rect x="74.4341%" y="389" width="0.0695%" height="15" fill="rgb(214,17,3)" fg:x="28905" fg:w="27"/><text x="74.6841%" y="399.50"></text></g><g><title>[libc.so.6] (12 samples, 0.03%)</title><rect x="74.4727%" y="373" width="0.0309%" height="15" fill="rgb(212,111,17)" fg:x="28920" fg:w="12"/><text x="74.7227%" y="383.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLDec as zssp::crypto::aes::AesGcmDecContext&gt;::finish (152 samples, 0.39%)</title><rect x="74.1174%" y="453" width="0.3914%" height="15" fill="rgb(221,157,24)" fg:x="28782" fg:w="152"/><text x="74.3674%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::set_tag (82 samples, 0.21%)</title><rect x="74.2976%" y="437" width="0.2112%" height="15" fill="rgb(252,16,13)" fg:x="28852" fg:w="82"/><text x="74.5476%" y="447.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (82 samples, 0.21%)</title><rect x="74.2976%" y="421" width="0.2112%" height="15" fill="rgb(221,62,2)" fg:x="28852" fg:w="82"/><text x="74.5476%" y="431.50"></text></g><g><title>[libcrypto.so.3] (41 samples, 0.11%)</title><rect x="74.4032%" y="405" width="0.1056%" height="15" fill="rgb(247,87,22)" fg:x="28893" fg:w="41"/><text x="74.6532%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.04%)</title><rect x="74.5088%" y="437" width="0.0412%" height="15" fill="rgb(215,73,9)" fg:x="28934" fg:w="16"/><text x="74.7588%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (16 samples, 0.04%)</title><rect x="74.5088%" y="421" width="0.0412%" height="15" fill="rgb(207,175,33)" fg:x="28934" fg:w="16"/><text x="74.7588%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (15 samples, 0.04%)</title><rect x="74.5114%" y="405" width="0.0386%" height="15" fill="rgb(243,129,54)" fg:x="28935" fg:w="15"/><text x="74.7614%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.04%)</title><rect x="74.5114%" y="389" width="0.0386%" height="15" fill="rgb(227,119,45)" fg:x="28935" fg:w="15"/><text x="74.7614%" y="399.50"></text></g><g><title>[libc.so.6] (22 samples, 0.06%)</title><rect x="74.7483%" y="341" width="0.0567%" height="15" fill="rgb(205,109,36)" fg:x="29027" fg:w="22"/><text x="74.9983%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (47 samples, 0.12%)</title><rect x="74.6865%" y="357" width="0.1210%" height="15" fill="rgb(205,6,39)" fg:x="29003" fg:w="47"/><text x="74.9365%" y="367.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (68 samples, 0.18%)</title><rect x="74.6350%" y="389" width="0.1751%" height="15" fill="rgb(221,32,16)" fg:x="28983" fg:w="68"/><text x="74.8850%" y="399.50"></text></g><g><title>[libcrypto.so.3] (52 samples, 0.13%)</title><rect x="74.6762%" y="373" width="0.1339%" height="15" fill="rgb(228,144,50)" fg:x="28999" fg:w="52"/><text x="74.9262%" y="383.50"></text></g><g><title>[libc.so.6] (27 samples, 0.07%)</title><rect x="74.9285%" y="341" width="0.0695%" height="15" fill="rgb(229,201,53)" fg:x="29097" fg:w="27"/><text x="75.1785%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (49 samples, 0.13%)</title><rect x="74.8899%" y="357" width="0.1262%" height="15" fill="rgb(249,153,27)" fg:x="29082" fg:w="49"/><text x="75.1399%" y="367.50"></text></g><g><title>strcmp@plt (7 samples, 0.02%)</title><rect x="74.9981%" y="341" width="0.0180%" height="15" fill="rgb(227,106,25)" fg:x="29124" fg:w="7"/><text x="75.2481%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (86 samples, 0.22%)</title><rect x="74.8101%" y="389" width="0.2215%" height="15" fill="rgb(230,65,29)" fg:x="29051" fg:w="86"/><text x="75.0601%" y="399.50"></text></g><g><title>[libcrypto.so.3] (66 samples, 0.17%)</title><rect x="74.8616%" y="373" width="0.1700%" height="15" fill="rgb(221,57,46)" fg:x="29071" fg:w="66"/><text x="75.1116%" y="383.50"></text></g><g><title>OSSL_PARAM_locate_const (6 samples, 0.02%)</title><rect x="75.0161%" y="357" width="0.0155%" height="15" fill="rgb(229,161,17)" fg:x="29131" fg:w="6"/><text x="75.2661%" y="367.50"></text></g><g><title>EVP_CIPHER_free (15 samples, 0.04%)</title><rect x="75.0315%" y="389" width="0.0386%" height="15" fill="rgb(222,213,11)" fg:x="29137" fg:w="15"/><text x="75.2815%" y="399.50"></text></g><g><title>EVP_CipherInit_ex (252 samples, 0.65%)</title><rect x="74.5526%" y="421" width="0.6489%" height="15" fill="rgb(235,35,13)" fg:x="28951" fg:w="252"/><text x="74.8026%" y="431.50"></text></g><g><title>[libcrypto.so.3] (252 samples, 0.65%)</title><rect x="74.5526%" y="405" width="0.6489%" height="15" fill="rgb(233,158,34)" fg:x="28951" fg:w="252"/><text x="74.8026%" y="415.50"></text></g><g><title>EVP_CIPHER_up_ref (51 samples, 0.13%)</title><rect x="75.0702%" y="389" width="0.1313%" height="15" fill="rgb(215,151,48)" fg:x="29152" fg:w="51"/><text x="75.3202%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_dec (270 samples, 0.70%)</title><rect x="74.5088%" y="453" width="0.6953%" height="15" fill="rgb(229,84,14)" fg:x="28934" fg:w="270"/><text x="74.7588%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::cipher_init (254 samples, 0.65%)</title><rect x="74.5500%" y="437" width="0.6541%" height="15" fill="rgb(229,68,14)" fg:x="28950" fg:w="254"/><text x="74.8000%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.02%)</title><rect x="75.2118%" y="453" width="0.0180%" height="15" fill="rgb(243,106,26)" fg:x="29207" fg:w="7"/><text x="75.4618%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.02%)</title><rect x="75.2118%" y="437" width="0.0180%" height="15" fill="rgb(206,45,38)" fg:x="29207" fg:w="7"/><text x="75.4618%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.01%)</title><rect x="75.2195%" y="421" width="0.0103%" height="15" fill="rgb(226,6,15)" fg:x="29210" fg:w="4"/><text x="75.4695%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.01%)</title><rect x="75.2195%" y="405" width="0.0103%" height="15" fill="rgb(232,22,54)" fg:x="29210" fg:w="4"/><text x="75.4695%" y="415.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::remaining_capacity (5 samples, 0.01%)</title><rect x="75.2298%" y="421" width="0.0129%" height="15" fill="rgb(229,222,32)" fg:x="29214" fg:w="5"/><text x="75.4798%" y="431.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::try_extend_from_slice (240 samples, 0.62%)</title><rect x="75.2427%" y="421" width="0.6180%" height="15" fill="rgb(228,62,29)" fg:x="29219" fg:w="240"/><text x="75.4927%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (238 samples, 0.61%)</title><rect x="75.2479%" y="405" width="0.6129%" height="15" fill="rgb(251,103,34)" fg:x="29221" fg:w="238"/><text x="75.4979%" y="415.50"></text></g><g><title>[libc.so.6] (238 samples, 0.61%)</title><rect x="75.2479%" y="389" width="0.6129%" height="15" fill="rgb(233,12,30)" fg:x="29221" fg:w="238"/><text x="75.4979%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (247 samples, 0.64%)</title><rect x="75.2298%" y="453" width="0.6361%" height="15" fill="rgb(238,52,0)" fg:x="29214" fg:w="247"/><text x="75.4798%" y="463.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;u8,_&gt; as std::io::Write&gt;::write (247 samples, 0.64%)</title><rect x="75.2298%" y="437" width="0.6361%" height="15" fill="rgb(223,98,5)" fg:x="29214" fg:w="247"/><text x="75.4798%" y="447.50"></text></g><g><title>zssp::zeta::receive_payload_in_place (5,500 samples, 14.16%)</title><rect x="61.7233%" y="469" width="14.1632%" height="15" fill="rgb(228,75,37)" fg:x="23969" fg:w="5500"/><text x="61.9733%" y="479.50">zssp::zeta::receive_pa..</text></g><g><title>zssp::antireplay::Window&lt;_,_&gt;::update (8 samples, 0.02%)</title><rect x="75.8659%" y="453" width="0.0206%" height="15" fill="rgb(205,115,49)" fg:x="29461" fg:w="8"/><text x="76.1159%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_max (8 samples, 0.02%)</title><rect x="75.8659%" y="437" width="0.0206%" height="15" fill="rgb(250,154,43)" fg:x="29461" fg:w="8"/><text x="76.1159%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_umax (8 samples, 0.02%)</title><rect x="75.8659%" y="421" width="0.0206%" height="15" fill="rgb(226,43,29)" fg:x="29461" fg:w="8"/><text x="76.1159%" y="431.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (8,391 samples, 21.61%)</title><rect x="54.5387%" y="485" width="21.6079%" height="15" fill="rgb(249,228,39)" fg:x="21179" fg:w="8391"/><text x="54.7887%" y="495.50">zssp::zssp::Context&lt;Crypto&gt;::recei..</text></g><g><title>zssp::zssp::parse_fragment_header (101 samples, 0.26%)</title><rect x="75.8865%" y="469" width="0.2601%" height="15" fill="rgb(216,79,43)" fg:x="29469" fg:w="101"/><text x="76.1365%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (73 samples, 0.19%)</title><rect x="76.2213%" y="437" width="0.1880%" height="15" fill="rgb(228,95,12)" fg:x="29599" fg:w="73"/><text x="76.4713%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.19%)</title><rect x="76.2213%" y="421" width="0.1880%" height="15" fill="rgb(249,221,15)" fg:x="29599" fg:w="73"/><text x="76.4713%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (70 samples, 0.18%)</title><rect x="76.2290%" y="405" width="0.1803%" height="15" fill="rgb(233,34,13)" fg:x="29602" fg:w="70"/><text x="76.4790%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (66 samples, 0.17%)</title><rect x="76.2393%" y="389" width="0.1700%" height="15" fill="rgb(214,103,39)" fg:x="29606" fg:w="66"/><text x="76.4893%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (66 samples, 0.17%)</title><rect x="76.2393%" y="373" width="0.1700%" height="15" fill="rgb(251,126,39)" fg:x="29606" fg:w="66"/><text x="76.4893%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (77 samples, 0.20%)</title><rect x="76.4092%" y="437" width="0.1983%" height="15" fill="rgb(214,216,36)" fg:x="29672" fg:w="77"/><text x="76.6592%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (76 samples, 0.20%)</title><rect x="76.4118%" y="421" width="0.1957%" height="15" fill="rgb(220,221,8)" fg:x="29673" fg:w="76"/><text x="76.6618%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (73 samples, 0.19%)</title><rect x="76.4195%" y="405" width="0.1880%" height="15" fill="rgb(240,216,3)" fg:x="29676" fg:w="73"/><text x="76.6695%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (73 samples, 0.19%)</title><rect x="76.4195%" y="389" width="0.1880%" height="15" fill="rgb(232,218,17)" fg:x="29676" fg:w="73"/><text x="76.6695%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::Aes256OpenSSLEnc as zssp::crypto::aes::Aes256Enc&gt;::encrypt_in_place (321 samples, 0.83%)</title><rect x="76.1981%" y="453" width="0.8266%" height="15" fill="rgb(229,163,45)" fg:x="29590" fg:w="321"/><text x="76.4481%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (162 samples, 0.42%)</title><rect x="76.6075%" y="437" width="0.4172%" height="15" fill="rgb(231,110,42)" fg:x="29749" fg:w="162"/><text x="76.8575%" y="447.50"></text></g><g><title>EVP_EncryptUpdate (158 samples, 0.41%)</title><rect x="76.6178%" y="421" width="0.4069%" height="15" fill="rgb(208,170,48)" fg:x="29753" fg:w="158"/><text x="76.8678%" y="431.50"></text></g><g><title>[libcrypto.so.3] (139 samples, 0.36%)</title><rect x="76.6668%" y="405" width="0.3579%" height="15" fill="rgb(239,116,25)" fg:x="29772" fg:w="139"/><text x="76.9168%" y="415.50"></text></g><g><title>[libcrypto.so.3] (108 samples, 0.28%)</title><rect x="76.7466%" y="389" width="0.2781%" height="15" fill="rgb(219,200,50)" fg:x="29803" fg:w="108"/><text x="76.9966%" y="399.50"></text></g><g><title>[libcrypto.so.3] (99 samples, 0.25%)</title><rect x="76.7698%" y="373" width="0.2549%" height="15" fill="rgb(245,200,0)" fg:x="29812" fg:w="99"/><text x="77.0198%" y="383.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="77.0118%" y="357" width="0.0129%" height="15" fill="rgb(245,119,33)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="367.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="77.0118%" y="341" width="0.0129%" height="15" fill="rgb(231,125,12)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="351.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="77.0118%" y="325" width="0.0129%" height="15" fill="rgb(216,96,41)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="335.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="77.0118%" y="309" width="0.0129%" height="15" fill="rgb(248,43,45)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="319.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="77.0118%" y="293" width="0.0129%" height="15" fill="rgb(217,222,7)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="303.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="77.0118%" y="277" width="0.0129%" height="15" fill="rgb(233,28,6)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="287.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="77.0118%" y="261" width="0.0129%" height="15" fill="rgb(231,218,15)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="271.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="77.0118%" y="245" width="0.0129%" height="15" fill="rgb(226,171,48)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="255.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="77.0118%" y="229" width="0.0129%" height="15" fill="rgb(235,201,9)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="239.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="77.0118%" y="213" width="0.0129%" height="15" fill="rgb(217,80,15)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="223.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="77.0118%" y="197" width="0.0129%" height="15" fill="rgb(219,152,8)" fg:x="29906" fg:w="5"/><text x="77.2618%" y="207.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.03%)</title><rect x="77.0247%" y="437" width="0.0258%" height="15" fill="rgb(243,107,38)" fg:x="29911" fg:w="10"/><text x="77.2747%" y="447.50"></text></g><g><title>[libcrypto.so.3] (174 samples, 0.45%)</title><rect x="77.6118%" y="341" width="0.4481%" height="15" fill="rgb(231,17,5)" fg:x="30139" fg:w="174"/><text x="77.8618%" y="351.50"></text></g><g><title>CRYPTO_gcm128_encrypt (280 samples, 0.72%)</title><rect x="77.3517%" y="357" width="0.7210%" height="15" fill="rgb(209,25,54)" fg:x="30038" fg:w="280"/><text x="77.6017%" y="367.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="78.0599%" y="341" width="0.0129%" height="15" fill="rgb(219,0,2)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="351.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="78.0599%" y="325" width="0.0129%" height="15" fill="rgb(246,9,5)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="335.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="78.0599%" y="309" width="0.0129%" height="15" fill="rgb(226,159,4)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="78.0599%" y="293" width="0.0129%" height="15" fill="rgb(219,175,34)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="78.0599%" y="277" width="0.0129%" height="15" fill="rgb(236,10,46)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="287.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="78.0599%" y="261" width="0.0129%" height="15" fill="rgb(240,211,16)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="271.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="78.0599%" y="245" width="0.0129%" height="15" fill="rgb(205,3,43)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="255.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="78.0599%" y="229" width="0.0129%" height="15" fill="rgb(245,7,22)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="78.0599%" y="213" width="0.0129%" height="15" fill="rgb(239,132,32)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="78.0599%" y="197" width="0.0129%" height="15" fill="rgb(228,202,34)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="207.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="78.0599%" y="181" width="0.0129%" height="15" fill="rgb(254,200,22)" fg:x="30313" fg:w="5"/><text x="78.3099%" y="191.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (476 samples, 1.23%)</title><rect x="78.0728%" y="357" width="1.2258%" height="15" fill="rgb(219,10,39)" fg:x="30318" fg:w="476"/><text x="78.3228%" y="367.50"></text></g><g><title>[libcrypto.so.3] (345 samples, 0.89%)</title><rect x="78.4101%" y="341" width="0.8884%" height="15" fill="rgb(226,210,39)" fg:x="30449" fg:w="345"/><text x="78.6601%" y="351.50"></text></g><g><title>[libcrypto.so.3] (31 samples, 0.08%)</title><rect x="79.2187%" y="325" width="0.0798%" height="15" fill="rgb(208,219,16)" fg:x="30763" fg:w="31"/><text x="79.4687%" y="335.50"></text></g><g><title>CRYPTO_gcm128_setiv (18 samples, 0.05%)</title><rect x="79.2985%" y="357" width="0.0464%" height="15" fill="rgb(216,158,51)" fg:x="30794" fg:w="18"/><text x="79.5485%" y="367.50"></text></g><g><title>[libcrypto.so.3] (15 samples, 0.04%)</title><rect x="79.3063%" y="341" width="0.0386%" height="15" fill="rgb(233,14,44)" fg:x="30797" fg:w="15"/><text x="79.5563%" y="351.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="87.0625%" y="165" width="0.0129%" height="15" fill="rgb(237,97,39)" fg:x="33809" fg:w="5"/><text x="87.3125%" y="175.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::encrypt (3,908 samples, 10.06%)</title><rect x="77.0247%" y="453" width="10.0636%" height="15" fill="rgb(218,198,43)" fg:x="29911" fg:w="3908"/><text x="77.2747%" y="463.50">&lt;zssp::crypto_i..</text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::update (3,898 samples, 10.04%)</title><rect x="77.0504%" y="437" width="10.0379%" height="15" fill="rgb(231,104,20)" fg:x="29921" fg:w="3898"/><text x="77.3004%" y="447.50">zssp::crypto_im..</text></g><g><title>EVP_EncryptUpdate (3,895 samples, 10.03%)</title><rect x="77.0582%" y="421" width="10.0301%" height="15" fill="rgb(254,36,13)" fg:x="29924" fg:w="3895"/><text x="77.3082%" y="431.50">EVP_EncryptUpda..</text></g><g><title>[libcrypto.so.3] (3,844 samples, 9.90%)</title><rect x="77.1895%" y="405" width="9.8988%" height="15" fill="rgb(248,14,50)" fg:x="29975" fg:w="3844"/><text x="77.4395%" y="415.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3] (3,838 samples, 9.88%)</title><rect x="77.2050%" y="389" width="9.8833%" height="15" fill="rgb(217,107,29)" fg:x="29981" fg:w="3838"/><text x="77.4550%" y="399.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3] (3,819 samples, 9.83%)</title><rect x="77.2539%" y="373" width="9.8344%" height="15" fill="rgb(251,169,33)" fg:x="30000" fg:w="3819"/><text x="77.5039%" y="383.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3] (3,007 samples, 7.74%)</title><rect x="79.3449%" y="357" width="7.7434%" height="15" fill="rgb(217,108,32)" fg:x="30812" fg:w="3007"/><text x="79.5949%" y="367.50">[libcrypto...</text></g><g><title>[libcrypto.so.3] (2,753 samples, 7.09%)</title><rect x="79.9990%" y="341" width="7.0893%" height="15" fill="rgb(219,66,42)" fg:x="31066" fg:w="2753"/><text x="80.2490%" y="351.50">[libcrypto..</text></g><g><title>asm_sysvec_reschedule_ipi (10 samples, 0.03%)</title><rect x="87.0625%" y="325" width="0.0258%" height="15" fill="rgb(206,180,7)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="335.50"></text></g><g><title>sysvec_reschedule_ipi (10 samples, 0.03%)</title><rect x="87.0625%" y="309" width="0.0258%" height="15" fill="rgb(208,226,31)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="319.50"></text></g><g><title>irqentry_exit (10 samples, 0.03%)</title><rect x="87.0625%" y="293" width="0.0258%" height="15" fill="rgb(218,26,49)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (10 samples, 0.03%)</title><rect x="87.0625%" y="277" width="0.0258%" height="15" fill="rgb(233,197,48)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (10 samples, 0.03%)</title><rect x="87.0625%" y="261" width="0.0258%" height="15" fill="rgb(252,181,51)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (10 samples, 0.03%)</title><rect x="87.0625%" y="245" width="0.0258%" height="15" fill="rgb(253,90,19)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="255.50"></text></g><g><title>schedule (10 samples, 0.03%)</title><rect x="87.0625%" y="229" width="0.0258%" height="15" fill="rgb(215,171,30)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="239.50"></text></g><g><title>__schedule (10 samples, 0.03%)</title><rect x="87.0625%" y="213" width="0.0258%" height="15" fill="rgb(214,222,9)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (10 samples, 0.03%)</title><rect x="87.0625%" y="197" width="0.0258%" height="15" fill="rgb(223,3,22)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.03%)</title><rect x="87.0625%" y="181" width="0.0258%" height="15" fill="rgb(225,196,46)" fg:x="33809" fg:w="10"/><text x="87.3125%" y="191.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="87.0754%" y="165" width="0.0129%" height="15" fill="rgb(209,110,37)" fg:x="33814" fg:w="5"/><text x="87.3254%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc&gt; (11 samples, 0.03%)</title><rect x="87.0935%" y="437" width="0.0283%" height="15" fill="rgb(249,89,12)" fg:x="33821" fg:w="11"/><text x="87.3435%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::crypto_impl::openssl::CipherCtx&gt;&gt; (11 samples, 0.03%)</title><rect x="87.0935%" y="421" width="0.0283%" height="15" fill="rgb(226,27,33)" fg:x="33821" fg:w="11"/><text x="87.3435%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="87.0935%" y="405" width="0.0283%" height="15" fill="rgb(213,82,22)" fg:x="33821" fg:w="11"/><text x="87.3435%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (11 samples, 0.03%)</title><rect x="87.0935%" y="389" width="0.0283%" height="15" fill="rgb(248,140,0)" fg:x="33821" fg:w="11"/><text x="87.3435%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (11 samples, 0.03%)</title><rect x="87.0935%" y="373" width="0.0283%" height="15" fill="rgb(228,106,3)" fg:x="33821" fg:w="11"/><text x="87.3435%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.03%)</title><rect x="87.0935%" y="357" width="0.0283%" height="15" fill="rgb(209,23,37)" fg:x="33821" fg:w="11"/><text x="87.3435%" y="367.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::finalize (60 samples, 0.15%)</title><rect x="87.1218%" y="437" width="0.1545%" height="15" fill="rgb(241,93,50)" fg:x="33832" fg:w="60"/><text x="87.3718%" y="447.50"></text></g><g><title>EVP_EncryptFinal_ex (60 samples, 0.15%)</title><rect x="87.1218%" y="421" width="0.1545%" height="15" fill="rgb(253,46,43)" fg:x="33832" fg:w="60"/><text x="87.3718%" y="431.50"></text></g><g><title>[libcrypto.so.3] (53 samples, 0.14%)</title><rect x="87.1398%" y="405" width="0.1365%" height="15" fill="rgb(226,206,43)" fg:x="33839" fg:w="53"/><text x="87.3898%" y="415.50"></text></g><g><title>[libcrypto.so.3] (53 samples, 0.14%)</title><rect x="87.1398%" y="389" width="0.1365%" height="15" fill="rgb(217,54,7)" fg:x="33839" fg:w="53"/><text x="87.3898%" y="399.50"></text></g><g><title>[libcrypto.so.3] (48 samples, 0.12%)</title><rect x="87.1527%" y="373" width="0.1236%" height="15" fill="rgb(223,5,52)" fg:x="33844" fg:w="48"/><text x="87.4027%" y="383.50"></text></g><g><title>CRYPTO_gcm128_tag (48 samples, 0.12%)</title><rect x="87.1527%" y="357" width="0.1236%" height="15" fill="rgb(206,52,46)" fg:x="33844" fg:w="48"/><text x="87.4027%" y="367.50"></text></g><g><title>CRYPTO_gcm128_finish (40 samples, 0.10%)</title><rect x="87.1733%" y="341" width="0.1030%" height="15" fill="rgb(253,136,11)" fg:x="33852" fg:w="40"/><text x="87.4233%" y="351.50"></text></g><g><title>[libcrypto.so.3] (26 samples, 0.07%)</title><rect x="87.2093%" y="325" width="0.0670%" height="15" fill="rgb(208,106,33)" fg:x="33866" fg:w="26"/><text x="87.4593%" y="335.50"></text></g><g><title>[libc.so.6] (21 samples, 0.05%)</title><rect x="87.4076%" y="373" width="0.0541%" height="15" fill="rgb(206,54,4)" fg:x="33943" fg:w="21"/><text x="87.6576%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (45 samples, 0.12%)</title><rect x="87.3535%" y="389" width="0.1159%" height="15" fill="rgb(213,3,15)" fg:x="33922" fg:w="45"/><text x="87.6035%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLEnc as zssp::crypto::aes::AesGcmEncContext&gt;::finish (153 samples, 0.39%)</title><rect x="87.0883%" y="453" width="0.3940%" height="15" fill="rgb(252,211,39)" fg:x="33819" fg:w="153"/><text x="87.3383%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::get_tag (80 samples, 0.21%)</title><rect x="87.2763%" y="437" width="0.2060%" height="15" fill="rgb(223,6,36)" fg:x="33892" fg:w="80"/><text x="87.5263%" y="447.50"></text></g><g><title>EVP_CIPHER_CTX_ctrl (79 samples, 0.20%)</title><rect x="87.2789%" y="421" width="0.2034%" height="15" fill="rgb(252,169,45)" fg:x="33893" fg:w="79"/><text x="87.5289%" y="431.50"></text></g><g><title>[libcrypto.so.3] (55 samples, 0.14%)</title><rect x="87.3407%" y="405" width="0.1416%" height="15" fill="rgb(212,48,26)" fg:x="33917" fg:w="55"/><text x="87.5907%" y="415.50"></text></g><g><title>OSSL_PARAM_set_octet_string (5 samples, 0.01%)</title><rect x="87.4694%" y="389" width="0.0129%" height="15" fill="rgb(251,102,48)" fg:x="33967" fg:w="5"/><text x="87.7194%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="87.4823%" y="437" width="0.0335%" height="15" fill="rgb(243,208,16)" fg:x="33972" fg:w="13"/><text x="87.7323%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (13 samples, 0.03%)</title><rect x="87.4823%" y="421" width="0.0335%" height="15" fill="rgb(219,96,24)" fg:x="33972" fg:w="13"/><text x="87.7323%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (13 samples, 0.03%)</title><rect x="87.4823%" y="405" width="0.0335%" height="15" fill="rgb(219,33,29)" fg:x="33972" fg:w="13"/><text x="87.7323%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.03%)</title><rect x="87.4823%" y="389" width="0.0335%" height="15" fill="rgb(223,176,5)" fg:x="33972" fg:w="13"/><text x="87.7323%" y="399.50"></text></g><g><title>[libcrypto.so.3] (40 samples, 0.10%)</title><rect x="87.6008%" y="373" width="0.1030%" height="15" fill="rgb(228,140,14)" fg:x="34018" fg:w="40"/><text x="87.8508%" y="383.50"></text></g><g><title>OSSL_PARAM_locate (36 samples, 0.09%)</title><rect x="87.6111%" y="357" width="0.0927%" height="15" fill="rgb(217,179,31)" fg:x="34022" fg:w="36"/><text x="87.8611%" y="367.50"></text></g><g><title>[libc.so.6] (20 samples, 0.05%)</title><rect x="87.6523%" y="341" width="0.0515%" height="15" fill="rgb(230,9,30)" fg:x="34038" fg:w="20"/><text x="87.9023%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_get_iv_length (67 samples, 0.17%)</title><rect x="87.5441%" y="389" width="0.1725%" height="15" fill="rgb(230,136,20)" fg:x="33996" fg:w="67"/><text x="87.7941%" y="399.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="87.7038%" y="373" width="0.0129%" height="15" fill="rgb(215,210,22)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="383.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="87.7038%" y="357" width="0.0129%" height="15" fill="rgb(218,43,5)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="367.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="87.7038%" y="341" width="0.0129%" height="15" fill="rgb(216,11,5)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="351.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="87.7038%" y="325" width="0.0129%" height="15" fill="rgb(209,82,29)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="335.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="87.7038%" y="309" width="0.0129%" height="15" fill="rgb(244,115,12)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="319.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="87.7038%" y="293" width="0.0129%" height="15" fill="rgb(222,82,18)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="303.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="87.7038%" y="277" width="0.0129%" height="15" fill="rgb(249,227,8)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="287.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="87.7038%" y="261" width="0.0129%" height="15" fill="rgb(253,141,45)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="271.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="87.7038%" y="245" width="0.0129%" height="15" fill="rgb(234,184,4)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="255.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="87.7038%" y="229" width="0.0129%" height="15" fill="rgb(218,194,23)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="239.50"></text></g><g><title>perf_pmu_nop_void (5 samples, 0.01%)</title><rect x="87.7038%" y="213" width="0.0129%" height="15" fill="rgb(235,66,41)" fg:x="34058" fg:w="5"/><text x="87.9538%" y="223.50"></text></g><g><title>[libc.so.6] (17 samples, 0.04%)</title><rect x="87.8171%" y="341" width="0.0438%" height="15" fill="rgb(245,217,1)" fg:x="34102" fg:w="17"/><text x="88.0671%" y="351.50"></text></g><g><title>OSSL_PARAM_locate (31 samples, 0.08%)</title><rect x="87.7939%" y="357" width="0.0798%" height="15" fill="rgb(229,91,1)" fg:x="34093" fg:w="31"/><text x="88.0439%" y="367.50"></text></g><g><title>strcmp@plt (5 samples, 0.01%)</title><rect x="87.8608%" y="341" width="0.0129%" height="15" fill="rgb(207,101,30)" fg:x="34119" fg:w="5"/><text x="88.1108%" y="351.50"></text></g><g><title>EVP_CIPHER_CTX_set_padding (67 samples, 0.17%)</title><rect x="87.7166%" y="389" width="0.1725%" height="15" fill="rgb(223,82,49)" fg:x="34063" fg:w="67"/><text x="87.9666%" y="399.50"></text></g><g><title>[libcrypto.so.3] (49 samples, 0.13%)</title><rect x="87.7630%" y="373" width="0.1262%" height="15" fill="rgb(218,167,17)" fg:x="34081" fg:w="49"/><text x="88.0130%" y="383.50"></text></g><g><title>OSSL_PARAM_locate_const (6 samples, 0.02%)</title><rect x="87.8737%" y="357" width="0.0155%" height="15" fill="rgb(208,103,14)" fg:x="34124" fg:w="6"/><text x="88.1237%" y="367.50"></text></g><g><title>EVP_CIPHER_free (21 samples, 0.05%)</title><rect x="87.8892%" y="389" width="0.0541%" height="15" fill="rgb(238,20,8)" fg:x="34130" fg:w="21"/><text x="88.1392%" y="399.50"></text></g><g><title>&lt;zssp::crypto_impl::openssl::AesGcmOpenSSLPool as zssp::crypto::aes::HighThroughputAesGcmPool&gt;::start_enc (206 samples, 0.53%)</title><rect x="87.4823%" y="453" width="0.5305%" height="15" fill="rgb(218,80,54)" fg:x="33972" fg:w="206"/><text x="87.7323%" y="463.50"></text></g><g><title>zssp::crypto_impl::openssl::CipherCtx::cipher_init (193 samples, 0.50%)</title><rect x="87.5158%" y="437" width="0.4970%" height="15" fill="rgb(240,144,17)" fg:x="33985" fg:w="193"/><text x="87.7658%" y="447.50"></text></g><g><title>EVP_CipherInit_ex (193 samples, 0.50%)</title><rect x="87.5158%" y="421" width="0.4970%" height="15" fill="rgb(245,27,50)" fg:x="33985" fg:w="193"/><text x="87.7658%" y="431.50"></text></g><g><title>[libcrypto.so.3] (193 samples, 0.50%)</title><rect x="87.5158%" y="405" width="0.4970%" height="15" fill="rgb(251,51,7)" fg:x="33985" fg:w="193"/><text x="87.7658%" y="415.50"></text></g><g><title>EVP_CIPHER_up_ref (27 samples, 0.07%)</title><rect x="87.9432%" y="389" width="0.0695%" height="15" fill="rgb(245,217,29)" fg:x="34151" fg:w="27"/><text x="88.1932%" y="399.50"></text></g><g><title>__rdl_alloc (6 samples, 0.02%)</title><rect x="88.0179%" y="277" width="0.0155%" height="15" fill="rgb(221,176,29)" fg:x="34180" fg:w="6"/><text x="88.2679%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.02%)</title><rect x="88.0179%" y="261" width="0.0155%" height="15" fill="rgb(212,180,24)" fg:x="34180" fg:w="6"/><text x="88.2679%" y="271.50"></text></g><g><title>[libc.so.6] (60 samples, 0.15%)</title><rect x="92.2360%" y="245" width="0.1545%" height="15" fill="rgb(254,24,2)" fg:x="35818" fg:w="60"/><text x="92.4860%" y="255.50"></text></g><g><title>[libc.so.6] (978 samples, 2.52%)</title><rect x="89.8875%" y="261" width="2.5185%" height="15" fill="rgb(230,100,2)" fg:x="34906" fg:w="978"/><text x="90.1375%" y="271.50">[l..</text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="92.3931%" y="245" width="0.0129%" height="15" fill="rgb(219,142,25)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="255.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="92.3931%" y="229" width="0.0129%" height="15" fill="rgb(240,73,43)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="239.50"></text></g><g><title>irqentry_exit (5 samples, 0.01%)</title><rect x="92.3931%" y="213" width="0.0129%" height="15" fill="rgb(214,114,15)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="223.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.01%)</title><rect x="92.3931%" y="197" width="0.0129%" height="15" fill="rgb(207,130,4)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="207.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="92.3931%" y="181" width="0.0129%" height="15" fill="rgb(221,25,40)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="191.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.01%)</title><rect x="92.3931%" y="165" width="0.0129%" height="15" fill="rgb(241,184,7)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="175.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="92.3931%" y="149" width="0.0129%" height="15" fill="rgb(235,159,4)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="159.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="92.3931%" y="133" width="0.0129%" height="15" fill="rgb(214,87,48)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="143.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="92.3931%" y="117" width="0.0129%" height="15" fill="rgb(246,198,24)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="92.3931%" y="101" width="0.0129%" height="15" fill="rgb(209,66,40)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="111.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.01%)</title><rect x="92.3931%" y="85" width="0.0129%" height="15" fill="rgb(233,147,39)" fg:x="35879" fg:w="5"/><text x="92.6431%" y="95.50"></text></g><g><title>__entry_text_start (4 samples, 0.01%)</title><rect x="92.4497%" y="245" width="0.0103%" height="15" fill="rgb(231,145,52)" fg:x="35901" fg:w="4"/><text x="92.6997%" y="255.50"></text></g><g><title>__get_user_nocheck_4 (14 samples, 0.04%)</title><rect x="92.4703%" y="149" width="0.0361%" height="15" fill="rgb(206,20,26)" fg:x="35909" fg:w="14"/><text x="92.7203%" y="159.50"></text></g><g><title>futex_q_lock (5 samples, 0.01%)</title><rect x="92.5167%" y="149" width="0.0129%" height="15" fill="rgb(238,220,4)" fg:x="35927" fg:w="5"/><text x="92.7667%" y="159.50"></text></g><g><title>futex_q_unlock (17 samples, 0.04%)</title><rect x="92.5295%" y="149" width="0.0438%" height="15" fill="rgb(252,195,42)" fg:x="35932" fg:w="17"/><text x="92.7795%" y="159.50"></text></g><g><title>futex_wait (45 samples, 0.12%)</title><rect x="92.4600%" y="181" width="0.1159%" height="15" fill="rgb(209,10,6)" fg:x="35905" fg:w="45"/><text x="92.7100%" y="191.50"></text></g><g><title>futex_wait_setup (42 samples, 0.11%)</title><rect x="92.4677%" y="165" width="0.1082%" height="15" fill="rgb(229,3,52)" fg:x="35908" fg:w="42"/><text x="92.7177%" y="175.50"></text></g><g><title>do_futex (46 samples, 0.12%)</title><rect x="92.4600%" y="197" width="0.1185%" height="15" fill="rgb(253,49,37)" fg:x="35905" fg:w="46"/><text x="92.7100%" y="207.50"></text></g><g><title>__x64_sys_futex (47 samples, 0.12%)</title><rect x="92.4600%" y="213" width="0.1210%" height="15" fill="rgb(240,103,49)" fg:x="35905" fg:w="47"/><text x="92.7100%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (52 samples, 0.13%)</title><rect x="92.4600%" y="245" width="0.1339%" height="15" fill="rgb(250,182,30)" fg:x="35905" fg:w="52"/><text x="92.7100%" y="255.50"></text></g><g><title>do_syscall_64 (52 samples, 0.13%)</title><rect x="92.4600%" y="229" width="0.1339%" height="15" fill="rgb(248,8,30)" fg:x="35905" fg:w="52"/><text x="92.7100%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.01%)</title><rect x="92.5811%" y="213" width="0.0129%" height="15" fill="rgb(237,120,30)" fg:x="35952" fg:w="5"/><text x="92.8311%" y="223.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="92.5811%" y="197" width="0.0129%" height="15" fill="rgb(221,146,34)" fg:x="35952" fg:w="5"/><text x="92.8311%" y="207.50"></text></g><g><title>__lll_lock_wait_private (74 samples, 0.19%)</title><rect x="92.4059%" y="261" width="0.1906%" height="15" fill="rgb(242,55,13)" fg:x="35884" fg:w="74"/><text x="92.6559%" y="271.50"></text></g><g><title>__entry_text_start (10 samples, 0.03%)</title><rect x="92.6068%" y="245" width="0.0258%" height="15" fill="rgb(242,112,31)" fg:x="35962" fg:w="10"/><text x="92.8568%" y="255.50"></text></g><g><title>futex_hash (7 samples, 0.02%)</title><rect x="92.6506%" y="181" width="0.0180%" height="15" fill="rgb(249,192,27)" fg:x="35979" fg:w="7"/><text x="92.9006%" y="191.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.02%)</title><rect x="92.7587%" y="165" width="0.0206%" height="15" fill="rgb(208,204,44)" fg:x="36021" fg:w="8"/><text x="93.0087%" y="175.50"></text></g><g><title>native_queued_spin_lock_slowpath (8 samples, 0.02%)</title><rect x="92.7587%" y="149" width="0.0206%" height="15" fill="rgb(208,93,54)" fg:x="36021" fg:w="8"/><text x="93.0087%" y="159.50"></text></g><g><title>futex_wake_mark (10 samples, 0.03%)</title><rect x="92.7819%" y="165" width="0.0258%" height="15" fill="rgb(242,1,31)" fg:x="36030" fg:w="10"/><text x="93.0319%" y="175.50"></text></g><g><title>wake_q_add_safe (4 samples, 0.01%)</title><rect x="92.8128%" y="165" width="0.0103%" height="15" fill="rgb(241,83,25)" fg:x="36042" fg:w="4"/><text x="93.0628%" y="175.50"></text></g><g><title>__smp_call_single_queue (12 samples, 0.03%)</title><rect x="92.9750%" y="117" width="0.0309%" height="15" fill="rgb(205,169,50)" fg:x="36105" fg:w="12"/><text x="93.2250%" y="127.50"></text></g><g><title>native_send_call_func_single_ipi (8 samples, 0.02%)</title><rect x="92.9853%" y="101" width="0.0206%" height="15" fill="rgb(239,186,37)" fg:x="36109" fg:w="8"/><text x="93.2353%" y="111.50"></text></g><g><title>x2apic_send_IPI (7 samples, 0.02%)</title><rect x="92.9879%" y="85" width="0.0180%" height="15" fill="rgb(205,221,10)" fg:x="36110" fg:w="7"/><text x="93.2379%" y="95.50"></text></g><g><title>native_write_msr (5 samples, 0.01%)</title><rect x="92.9931%" y="69" width="0.0129%" height="15" fill="rgb(218,196,15)" fg:x="36112" fg:w="5"/><text x="93.2431%" y="79.50"></text></g><g><title>llist_add_batch (10 samples, 0.03%)</title><rect x="93.0059%" y="117" width="0.0258%" height="15" fill="rgb(218,196,35)" fg:x="36117" fg:w="10"/><text x="93.2559%" y="127.50"></text></g><g><title>try_to_wake_up (77 samples, 0.20%)</title><rect x="92.8411%" y="149" width="0.1983%" height="15" fill="rgb(233,63,24)" fg:x="36053" fg:w="77"/><text x="93.0911%" y="159.50"></text></g><g><title>ttwu_queue_wakelist (37 samples, 0.10%)</title><rect x="92.9441%" y="133" width="0.0953%" height="15" fill="rgb(225,8,4)" fg:x="36093" fg:w="37"/><text x="93.1941%" y="143.50"></text></g><g><title>futex_wake (145 samples, 0.37%)</title><rect x="92.6686%" y="181" width="0.3734%" height="15" fill="rgb(234,105,35)" fg:x="35986" fg:w="145"/><text x="92.9186%" y="191.50"></text></g><g><title>wake_up_q (85 samples, 0.22%)</title><rect x="92.8231%" y="165" width="0.2189%" height="15" fill="rgb(236,21,32)" fg:x="36046" fg:w="85"/><text x="93.0731%" y="175.50"></text></g><g><title>do_futex (158 samples, 0.41%)</title><rect x="92.6403%" y="197" width="0.4069%" height="15" fill="rgb(228,109,6)" fg:x="35975" fg:w="158"/><text x="92.8903%" y="207.50"></text></g><g><title>__x64_sys_futex (159 samples, 0.41%)</title><rect x="92.6403%" y="213" width="0.4094%" height="15" fill="rgb(229,215,31)" fg:x="35975" fg:w="159"/><text x="92.8903%" y="223.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.02%)</title><rect x="93.0626%" y="197" width="0.0155%" height="15" fill="rgb(221,52,54)" fg:x="36139" fg:w="6"/><text x="93.3126%" y="207.50"></text></g><g><title>do_syscall_64 (172 samples, 0.44%)</title><rect x="92.6377%" y="229" width="0.4429%" height="15" fill="rgb(252,129,43)" fg:x="35974" fg:w="172"/><text x="92.8877%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (8 samples, 0.02%)</title><rect x="93.0600%" y="213" width="0.0206%" height="15" fill="rgb(248,183,27)" fg:x="36138" fg:w="8"/><text x="93.3100%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (175 samples, 0.45%)</title><rect x="92.6326%" y="245" width="0.4506%" height="15" fill="rgb(250,0,22)" fg:x="35972" fg:w="175"/><text x="92.8826%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,972 samples, 5.08%)</title><rect x="88.0128%" y="373" width="5.0782%" height="15" fill="rgb(213,166,10)" fg:x="34178" fg:w="1972"/><text x="88.2628%" y="383.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,972 samples, 5.08%)</title><rect x="88.0128%" y="357" width="5.0782%" height="15" fill="rgb(207,163,36)" fg:x="34178" fg:w="1972"/><text x="88.2628%" y="367.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,972 samples, 5.08%)</title><rect x="88.0128%" y="341" width="5.0782%" height="15" fill="rgb(208,122,22)" fg:x="34178" fg:w="1972"/><text x="88.2628%" y="351.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,970 samples, 5.07%)</title><rect x="88.0179%" y="325" width="5.0730%" height="15" fill="rgb(207,104,49)" fg:x="34180" fg:w="1970"/><text x="88.2679%" y="335.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,970 samples, 5.07%)</title><rect x="88.0179%" y="309" width="5.0730%" height="15" fill="rgb(248,211,50)" fg:x="34180" fg:w="1970"/><text x="88.2679%" y="319.50">alloc:..</text></g><g><title>alloc::alloc::alloc (1,970 samples, 5.07%)</title><rect x="88.0179%" y="293" width="5.0730%" height="15" fill="rgb(217,13,45)" fg:x="34180" fg:w="1970"/><text x="88.2679%" y="303.50">alloc:..</text></g><g><title>malloc (1,962 samples, 5.05%)</title><rect x="88.0385%" y="277" width="5.0524%" height="15" fill="rgb(211,216,49)" fg:x="34188" fg:w="1962"/><text x="88.2885%" y="287.50">malloc</text></g><g><title>__lll_lock_wake_private (192 samples, 0.49%)</title><rect x="92.5965%" y="261" width="0.4944%" height="15" fill="rgb(221,58,53)" fg:x="35958" fg:w="192"/><text x="92.8465%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,175 samples, 5.60%)</title><rect x="88.0128%" y="437" width="5.6009%" height="15" fill="rgb(220,112,41)" fg:x="34178" fg:w="2175"/><text x="88.2628%" y="447.50">alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,175 samples, 5.60%)</title><rect x="88.0128%" y="421" width="5.6009%" height="15" fill="rgb(236,38,28)" fg:x="34178" fg:w="2175"/><text x="88.2628%" y="431.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (2,175 samples, 5.60%)</title><rect x="88.0128%" y="405" width="5.6009%" height="15" fill="rgb(227,195,22)" fg:x="34178" fg:w="2175"/><text x="88.2628%" y="415.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,175 samples, 5.60%)</title><rect x="88.0128%" y="389" width="5.6009%" height="15" fill="rgb(214,55,33)" fg:x="34178" fg:w="2175"/><text x="88.2628%" y="399.50">&lt;T as a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (203 samples, 0.52%)</title><rect x="93.0909%" y="373" width="0.5228%" height="15" fill="rgb(248,80,13)" fg:x="36150" fg:w="203"/><text x="93.3409%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (203 samples, 0.52%)</title><rect x="93.0909%" y="357" width="0.5228%" height="15" fill="rgb(238,52,6)" fg:x="36150" fg:w="203"/><text x="93.3409%" y="367.50"></text></g><g><title>[libc.so.6] (201 samples, 0.52%)</title><rect x="93.0961%" y="341" width="0.5176%" height="15" fill="rgb(224,198,47)" fg:x="36152" fg:w="201"/><text x="93.3461%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (118 samples, 0.30%)</title><rect x="97.7339%" y="373" width="0.3039%" height="15" fill="rgb(233,171,20)" fg:x="37953" fg:w="118"/><text x="97.9839%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (118 samples, 0.30%)</title><rect x="97.7339%" y="357" width="0.3039%" height="15" fill="rgb(241,30,25)" fg:x="37953" fg:w="118"/><text x="97.9839%" y="367.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_send (183 samples, 0.47%)</title><rect x="97.6618%" y="389" width="0.4712%" height="15" fill="rgb(207,171,38)" fg:x="37925" fg:w="183"/><text x="97.9118%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (37 samples, 0.10%)</title><rect x="98.0378%" y="373" width="0.0953%" height="15" fill="rgb(234,70,1)" fg:x="38071" fg:w="37"/><text x="98.2878%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (37 samples, 0.10%)</title><rect x="98.0378%" y="357" width="0.0953%" height="15" fill="rgb(232,178,18)" fg:x="38071" fg:w="37"/><text x="98.2878%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.02%)</title><rect x="98.1459%" y="373" width="0.0180%" height="15" fill="rgb(241,78,40)" fg:x="38113" fg:w="7"/><text x="98.3959%" y="383.50"></text></g><g><title>core::ptr::write (7 samples, 0.02%)</title><rect x="98.1459%" y="357" width="0.0180%" height="15" fill="rgb(222,35,25)" fg:x="38113" fg:w="7"/><text x="98.3959%" y="367.50"></text></g><g><title>benchmark::bob_main::_{{closure}} (3,947 samples, 10.16%)</title><rect x="88.0128%" y="453" width="10.1640%" height="15" fill="rgb(207,92,16)" fg:x="34178" fg:w="3947"/><text x="88.2628%" y="463.50">benchmark::bob_..</text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::send (1,771 samples, 4.56%)</title><rect x="93.6163%" y="437" width="4.5606%" height="15" fill="rgb(216,59,51)" fg:x="36354" fg:w="1771"/><text x="93.8663%" y="447.50">std::..</text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (1,764 samples, 4.54%)</title><rect x="93.6343%" y="421" width="4.5425%" height="15" fill="rgb(213,80,28)" fg:x="36361" fg:w="1764"/><text x="93.8843%" y="431.50">std::..</text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (219 samples, 0.56%)</title><rect x="97.6129%" y="405" width="0.5640%" height="15" fill="rgb(220,93,7)" fg:x="37906" fg:w="219"/><text x="97.8629%" y="415.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::write (17 samples, 0.04%)</title><rect x="98.1330%" y="389" width="0.0438%" height="15" fill="rgb(225,24,44)" fg:x="38108" fg:w="17"/><text x="98.3830%" y="399.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (5 samples, 0.01%)</title><rect x="98.1639%" y="373" width="0.0129%" height="15" fill="rgb(243,74,40)" fg:x="38120" fg:w="5"/><text x="98.4139%" y="383.50"></text></g><g><title>core::mem::drop (38 samples, 0.10%)</title><rect x="98.1845%" y="453" width="0.0979%" height="15" fill="rgb(228,39,7)" fg:x="38128" fg:w="38"/><text x="98.4345%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;zssp::zeta::MutableState&lt;benchmark::TestApplication&gt;&gt;&gt; (38 samples, 0.10%)</title><rect x="98.1845%" y="437" width="0.0979%" height="15" fill="rgb(227,79,8)" fg:x="38128" fg:w="38"/><text x="98.4345%" y="447.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.10%)</title><rect x="98.1845%" y="421" width="0.0979%" height="15" fill="rgb(236,58,11)" fg:x="38128" fg:w="38"/><text x="98.4345%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (38 samples, 0.10%)</title><rect x="98.1845%" y="405" width="0.0979%" height="15" fill="rgb(249,63,35)" fg:x="38128" fg:w="38"/><text x="98.4345%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (36 samples, 0.09%)</title><rect x="98.1897%" y="389" width="0.0927%" height="15" fill="rgb(252,114,16)" fg:x="38130" fg:w="36"/><text x="98.4397%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (36 samples, 0.09%)</title><rect x="98.1897%" y="373" width="0.0927%" height="15" fill="rgb(254,151,24)" fg:x="38130" fg:w="36"/><text x="98.4397%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (10 samples, 0.03%)</title><rect x="98.2824%" y="453" width="0.0258%" height="15" fill="rgb(253,54,39)" fg:x="38166" fg:w="10"/><text x="98.5324%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.03%)</title><rect x="98.2824%" y="437" width="0.0258%" height="15" fill="rgb(243,25,45)" fg:x="38166" fg:w="10"/><text x="98.5324%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.02%)</title><rect x="98.3081%" y="437" width="0.0155%" height="15" fill="rgb(234,134,9)" fg:x="38176" fg:w="6"/><text x="98.5581%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.03%)</title><rect x="98.3081%" y="453" width="0.0283%" height="15" fill="rgb(227,166,31)" fg:x="38176" fg:w="11"/><text x="98.5581%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="98.3236%" y="437" width="0.0129%" height="15" fill="rgb(245,143,41)" fg:x="38182" fg:w="5"/><text x="98.5736%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.01%)</title><rect x="98.3365%" y="453" width="0.0129%" height="15" fill="rgb(238,181,32)" fg:x="38187" fg:w="5"/><text x="98.5865%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.01%)</title><rect x="98.3365%" y="437" width="0.0129%" height="15" fill="rgb(224,113,18)" fg:x="38187" fg:w="5"/><text x="98.5865%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (34 samples, 0.09%)</title><rect x="98.3571%" y="421" width="0.0876%" height="15" fill="rgb(240,229,28)" fg:x="38195" fg:w="34"/><text x="98.6071%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.09%)</title><rect x="98.3571%" y="405" width="0.0876%" height="15" fill="rgb(250,185,3)" fg:x="38195" fg:w="34"/><text x="98.6071%" y="415.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (38 samples, 0.10%)</title><rect x="98.3493%" y="453" width="0.0979%" height="15" fill="rgb(212,59,25)" fg:x="38192" fg:w="38"/><text x="98.5993%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (38 samples, 0.10%)</title><rect x="98.3493%" y="437" width="0.0979%" height="15" fill="rgb(221,87,20)" fg:x="38192" fg:w="38"/><text x="98.5993%" y="447.50"></text></g><g><title>benchmark::bob_main (17,970 samples, 46.28%)</title><rect x="52.1927%" y="501" width="46.2751%" height="15" fill="rgb(213,74,28)" fg:x="20268" fg:w="17970"/><text x="52.4427%" y="511.50">benchmark::bob_main</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::send (8,668 samples, 22.32%)</title><rect x="76.1466%" y="485" width="22.3212%" height="15" fill="rgb(224,132,34)" fg:x="29570" fg:w="8668"/><text x="76.3966%" y="495.50">zssp::zssp::Context&lt;Crypto&gt;::send</text></g><g><title>zssp::zeta::send_payload (8,667 samples, 22.32%)</title><rect x="76.1492%" y="469" width="22.3186%" height="15" fill="rgb(222,101,24)" fg:x="29571" fg:w="8667"/><text x="76.3992%" y="479.50">zssp::zeta::send_payload</text></g><g><title>zssp::zeta::get_counter (8 samples, 0.02%)</title><rect x="98.4472%" y="453" width="0.0206%" height="15" fill="rgb(254,142,4)" fg:x="38230" fg:w="8"/><text x="98.6972%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (7 samples, 0.02%)</title><rect x="98.4498%" y="437" width="0.0180%" height="15" fill="rgb(230,229,49)" fg:x="38231" fg:w="7"/><text x="98.6998%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.02%)</title><rect x="98.4498%" y="421" width="0.0180%" height="15" fill="rgb(238,70,47)" fg:x="38231" fg:w="7"/><text x="98.6998%" y="431.50"></text></g><g><title>cfree (25 samples, 0.06%)</title><rect x="98.4678%" y="501" width="0.0644%" height="15" fill="rgb(231,160,17)" fg:x="38238" fg:w="25"/><text x="98.7178%" y="511.50"></text></g><g><title>clock_gettime (17 samples, 0.04%)</title><rect x="98.5322%" y="501" width="0.0438%" height="15" fill="rgb(218,68,53)" fg:x="38263" fg:w="17"/><text x="98.7822%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.06%)</title><rect x="98.5760%" y="501" width="0.0644%" height="15" fill="rgb(236,111,10)" fg:x="38280" fg:w="25"/><text x="98.8260%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 0.05%)</title><rect x="98.5940%" y="485" width="0.0464%" height="15" fill="rgb(224,34,41)" fg:x="38287" fg:w="18"/><text x="98.8440%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zssp::fragged::Fragged&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="98.6403%" y="501" width="0.0103%" height="15" fill="rgb(241,118,19)" fg:x="38305" fg:w="4"/><text x="98.8903%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (10 samples, 0.03%)</title><rect x="98.6506%" y="501" width="0.0258%" height="15" fill="rgb(238,129,25)" fg:x="38309" fg:w="10"/><text x="98.9006%" y="511.50"></text></g><g><title>malloc (11 samples, 0.03%)</title><rect x="98.6764%" y="501" width="0.0283%" height="15" fill="rgb(238,22,31)" fg:x="38319" fg:w="11"/><text x="98.9264%" y="511.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv_timeout (25 samples, 0.06%)</title><rect x="98.7047%" y="501" width="0.0644%" height="15" fill="rgb(222,174,48)" fg:x="38330" fg:w="25"/><text x="98.9547%" y="511.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv_deadline (10 samples, 0.03%)</title><rect x="98.7433%" y="485" width="0.0258%" height="15" fill="rgb(206,152,40)" fg:x="38345" fg:w="10"/><text x="98.9933%" y="495.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (13 samples, 0.03%)</title><rect x="98.7691%" y="501" width="0.0335%" height="15" fill="rgb(218,99,54)" fg:x="38355" fg:w="13"/><text x="99.0191%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (28 samples, 0.07%)</title><rect x="98.8026%" y="501" width="0.0721%" height="15" fill="rgb(220,174,26)" fg:x="38368" fg:w="28"/><text x="99.0526%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (14 samples, 0.04%)</title><rect x="98.8747%" y="501" width="0.0361%" height="15" fill="rgb(245,116,9)" fg:x="38396" fg:w="14"/><text x="99.1247%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (21 samples, 0.05%)</title><rect x="98.9107%" y="501" width="0.0541%" height="15" fill="rgb(209,72,35)" fg:x="38410" fg:w="21"/><text x="99.1607%" y="511.50"></text></g><g><title>std::sync::mpmc::utils::Backoff::new (22 samples, 0.06%)</title><rect x="98.9648%" y="501" width="0.0567%" height="15" fill="rgb(226,126,21)" fg:x="38431" fg:w="22"/><text x="99.2148%" y="511.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (22 samples, 0.06%)</title><rect x="99.0215%" y="501" width="0.0567%" height="15" fill="rgb(227,192,1)" fg:x="38453" fg:w="22"/><text x="99.2715%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (5 samples, 0.01%)</title><rect x="99.0652%" y="485" width="0.0129%" height="15" fill="rgb(237,180,29)" fg:x="38470" fg:w="5"/><text x="99.3152%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="99.0652%" y="469" width="0.0129%" height="15" fill="rgb(230,197,35)" fg:x="38470" fg:w="5"/><text x="99.3152%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.02%)</title><rect x="99.0807%" y="501" width="0.0232%" height="15" fill="rgb(246,193,31)" fg:x="38476" fg:w="9"/><text x="99.3307%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (9 samples, 0.02%)</title><rect x="99.1039%" y="501" width="0.0232%" height="15" fill="rgb(241,36,4)" fg:x="38485" fg:w="9"/><text x="99.3539%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (9 samples, 0.02%)</title><rect x="99.1270%" y="501" width="0.0232%" height="15" fill="rgb(241,130,17)" fg:x="38494" fg:w="9"/><text x="99.3770%" y="511.50"></text></g><g><title>std::time::SystemTime::checked_add (7 samples, 0.02%)</title><rect x="99.1502%" y="501" width="0.0180%" height="15" fill="rgb(206,137,32)" fg:x="38503" fg:w="7"/><text x="99.4002%" y="511.50"></text></g><g><title>zssp::fragged::Fragged&lt;Fragment,_&gt;::assemble (19 samples, 0.05%)</title><rect x="99.1708%" y="501" width="0.0489%" height="15" fill="rgb(237,228,51)" fg:x="38511" fg:w="19"/><text x="99.4208%" y="511.50"></text></g><g><title>zssp::zeta::from_nonce (8 samples, 0.02%)</title><rect x="99.2197%" y="501" width="0.0206%" height="15" fill="rgb(243,6,42)" fg:x="38530" fg:w="8"/><text x="99.4697%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="99.3511%" y="405" width="0.0515%" height="15" fill="rgb(251,74,28)" fg:x="38581" fg:w="20"/><text x="99.6011%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="99.3511%" y="389" width="0.0515%" height="15" fill="rgb(218,20,49)" fg:x="38581" fg:w="20"/><text x="99.6011%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.05%)</title><rect x="99.3511%" y="373" width="0.0515%" height="15" fill="rgb(238,28,14)" fg:x="38581" fg:w="20"/><text x="99.6011%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.05%)</title><rect x="99.3511%" y="357" width="0.0515%" height="15" fill="rgb(229,40,46)" fg:x="38581" fg:w="20"/><text x="99.6011%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.05%)</title><rect x="99.3511%" y="341" width="0.0515%" height="15" fill="rgb(244,195,20)" fg:x="38581" fg:w="20"/><text x="99.6011%" y="351.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.05%)</title><rect x="99.3511%" y="325" width="0.0515%" height="15" fill="rgb(253,56,35)" fg:x="38581" fg:w="20"/><text x="99.6011%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (29 samples, 0.07%)</title><rect x="99.3511%" y="469" width="0.0747%" height="15" fill="rgb(210,149,44)" fg:x="38581" fg:w="29"/><text x="99.6011%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.07%)</title><rect x="99.3511%" y="453" width="0.0747%" height="15" fill="rgb(240,135,12)" fg:x="38581" fg:w="29"/><text x="99.6011%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.07%)</title><rect x="99.3511%" y="437" width="0.0747%" height="15" fill="rgb(251,24,50)" fg:x="38581" fg:w="29"/><text x="99.6011%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 0.07%)</title><rect x="99.3511%" y="421" width="0.0747%" height="15" fill="rgb(243,200,47)" fg:x="38581" fg:w="29"/><text x="99.6011%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.02%)</title><rect x="99.4026%" y="405" width="0.0232%" height="15" fill="rgb(224,166,26)" fg:x="38601" fg:w="9"/><text x="99.6526%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="99.4026%" y="389" width="0.0232%" height="15" fill="rgb(233,0,47)" fg:x="38601" fg:w="9"/><text x="99.6526%" y="399.50"></text></g><g><title>zssp::zeta::send_payload (76 samples, 0.20%)</title><rect x="99.2429%" y="501" width="0.1957%" height="15" fill="rgb(253,80,5)" fg:x="38539" fg:w="76"/><text x="99.4929%" y="511.50"></text></g><g><title>benchmark::bob_main::_{{closure}} (34 samples, 0.09%)</title><rect x="99.3511%" y="485" width="0.0876%" height="15" fill="rgb(214,133,25)" fg:x="38581" fg:w="34"/><text x="99.6011%" y="495.50"></text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::send (5 samples, 0.01%)</title><rect x="99.4257%" y="469" width="0.0129%" height="15" fill="rgb(209,27,14)" fg:x="38610" fg:w="5"/><text x="99.6757%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt; (6 samples, 0.02%)</title><rect x="99.5880%" y="485" width="0.0155%" height="15" fill="rgb(219,102,51)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="495.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="99.5880%" y="469" width="0.0155%" height="15" fill="rgb(237,18,16)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="479.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (6 samples, 0.02%)</title><rect x="99.5880%" y="453" width="0.0155%" height="15" fill="rgb(241,85,17)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="463.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (6 samples, 0.02%)</title><rect x="99.5880%" y="437" width="0.0155%" height="15" fill="rgb(236,90,42)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="447.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (6 samples, 0.02%)</title><rect x="99.5880%" y="421" width="0.0155%" height="15" fill="rgb(249,57,21)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (6 samples, 0.02%)</title><rect x="99.5880%" y="405" width="0.0155%" height="15" fill="rgb(243,12,36)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="99.5880%" y="389" width="0.0155%" height="15" fill="rgb(253,128,47)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="99.5880%" y="373" width="0.0155%" height="15" fill="rgb(207,33,20)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="99.5880%" y="357" width="0.0155%" height="15" fill="rgb(233,215,35)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="99.5880%" y="341" width="0.0155%" height="15" fill="rgb(249,188,52)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="99.5880%" y="325" width="0.0155%" height="15" fill="rgb(225,12,32)" fg:x="38673" fg:w="6"/><text x="99.8380%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.01%)</title><rect x="99.6086%" y="485" width="0.0129%" height="15" fill="rgb(247,98,14)" fg:x="38681" fg:w="5"/><text x="99.8586%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.01%)</title><rect x="99.6086%" y="469" width="0.0129%" height="15" fill="rgb(247,219,48)" fg:x="38681" fg:w="5"/><text x="99.8586%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.01%)</title><rect x="99.6086%" y="453" width="0.0129%" height="15" fill="rgb(253,60,48)" fg:x="38681" fg:w="5"/><text x="99.8586%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.01%)</title><rect x="99.6086%" y="437" width="0.0129%" height="15" fill="rgb(245,15,52)" fg:x="38681" fg:w="5"/><text x="99.8586%" y="447.50"></text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (78 samples, 0.20%)</title><rect x="99.4412%" y="501" width="0.2009%" height="15" fill="rgb(220,133,28)" fg:x="38616" fg:w="78"/><text x="99.6912%" y="511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (8 samples, 0.02%)</title><rect x="99.6215%" y="485" width="0.0206%" height="15" fill="rgb(217,180,4)" fg:x="38686" fg:w="8"/><text x="99.8715%" y="495.50"></text></g><g><title>[unknown] (37,624 samples, 96.89%)</title><rect x="2.7734%" y="517" width="96.8867%" height="15" fill="rgb(251,24,1)" fg:x="1077" fg:w="37624"/><text x="3.0234%" y="527.50">[unknown]</text></g><g><title>zssp::zssp::parse_fragment_header (7 samples, 0.02%)</title><rect x="99.6421%" y="501" width="0.0180%" height="15" fill="rgb(212,185,49)" fg:x="38694" fg:w="7"/><text x="99.8921%" y="511.50"></text></g><g><title>EVP_DecryptUpdate (24 samples, 0.06%)</title><rect x="99.6601%" y="501" width="0.0618%" height="15" fill="rgb(215,175,22)" fg:x="38701" fg:w="24"/><text x="99.9101%" y="511.50"></text></g><g><title>__bss_start (26 samples, 0.07%)</title><rect x="99.6601%" y="517" width="0.0670%" height="15" fill="rgb(250,205,14)" fg:x="38701" fg:w="26"/><text x="99.9101%" y="527.50"></text></g><g><title>__rust_probestack (6 samples, 0.02%)</title><rect x="99.7270%" y="517" width="0.0155%" height="15" fill="rgb(225,211,22)" fg:x="38727" fg:w="6"/><text x="99.9770%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="99.7528%" y="517" width="0.0180%" height="15" fill="rgb(251,179,42)" fg:x="38737" fg:w="7"/><text x="100.0028%" y="527.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (14 samples, 0.04%)</title><rect x="99.7708%" y="517" width="0.0361%" height="15" fill="rgb(208,216,51)" fg:x="38744" fg:w="14"/><text x="100.0208%" y="527.50"></text></g><g><title>ret_from_fork (10 samples, 0.03%)</title><rect x="99.8069%" y="517" width="0.0258%" height="15" fill="rgb(235,36,11)" fg:x="38758" fg:w="10"/><text x="100.0569%" y="527.50"></text></g><g><title>schedule_tail (10 samples, 0.03%)</title><rect x="99.8069%" y="501" width="0.0258%" height="15" fill="rgb(213,189,28)" fg:x="38758" fg:w="10"/><text x="100.0569%" y="511.50"></text></g><g><title>finish_task_switch.isra.0 (10 samples, 0.03%)</title><rect x="99.8069%" y="485" width="0.0258%" height="15" fill="rgb(227,203,42)" fg:x="38758" fg:w="10"/><text x="100.0569%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.03%)</title><rect x="99.8069%" y="469" width="0.0258%" height="15" fill="rgb(244,72,36)" fg:x="38758" fg:w="10"/><text x="100.0569%" y="479.50"></text></g><g><title>perf_ctx_enable (10 samples, 0.03%)</title><rect x="99.8069%" y="453" width="0.0258%" height="15" fill="rgb(213,53,17)" fg:x="38758" fg:w="10"/><text x="100.0569%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrayvec::arrayvec::ArrayVec&lt;alloc::vec::Vec&lt;u8&gt;,48_usize&gt;&gt; (5 samples, 0.01%)</title><rect x="99.9588%" y="501" width="0.0129%" height="15" fill="rgb(207,167,3)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="511.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="99.9588%" y="485" width="0.0129%" height="15" fill="rgb(216,98,30)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="495.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::clear (5 samples, 0.01%)</title><rect x="99.9588%" y="469" width="0.0129%" height="15" fill="rgb(236,123,15)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="479.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::clear (5 samples, 0.01%)</title><rect x="99.9588%" y="453" width="0.0129%" height="15" fill="rgb(248,81,50)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="463.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::truncate (5 samples, 0.01%)</title><rect x="99.9588%" y="437" width="0.0129%" height="15" fill="rgb(214,120,4)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (5 samples, 0.01%)</title><rect x="99.9588%" y="421" width="0.0129%" height="15" fill="rgb(208,179,34)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="99.9588%" y="405" width="0.0129%" height="15" fill="rgb(227,140,7)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="99.9588%" y="389" width="0.0129%" height="15" fill="rgb(214,22,6)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="99.9588%" y="373" width="0.0129%" height="15" fill="rgb(207,137,27)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="99.9588%" y="357" width="0.0129%" height="15" fill="rgb(210,8,46)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="99.9588%" y="341" width="0.0129%" height="15" fill="rgb(240,16,54)" fg:x="38817" fg:w="5"/><text x="100.2088%" y="351.50"></text></g><g><title>benchmark (38,828 samples, 99.99%)</title><rect x="0.0000%" y="533" width="99.9871%" height="15" fill="rgb(211,209,29)" fg:x="0" fg:w="38828"/><text x="0.2500%" y="543.50">benchmark</text></g><g><title>zssp::zssp::Context&lt;Crypto&gt;::receive (58 samples, 0.15%)</title><rect x="99.8378%" y="517" width="0.1494%" height="15" fill="rgb(226,228,24)" fg:x="38770" fg:w="58"/><text x="100.0878%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="99.9717%" y="501" width="0.0155%" height="15" fill="rgb(222,84,9)" fg:x="38822" fg:w="6"/><text x="100.2217%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.02%)</title><rect x="99.9717%" y="485" width="0.0155%" height="15" fill="rgb(234,203,30)" fg:x="38822" fg:w="6"/><text x="100.2217%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.02%)</title><rect x="99.9717%" y="469" width="0.0155%" height="15" fill="rgb(238,109,14)" fg:x="38822" fg:w="6"/><text x="100.2217%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="99.9717%" y="453" width="0.0155%" height="15" fill="rgb(233,206,34)" fg:x="38822" fg:w="6"/><text x="100.2217%" y="463.50"></text></g><g><title>all (38,833 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(220,167,47)" fg:x="0" fg:w="38833"/><text x="0.2500%" y="559.50"></text></g><g><title>perf-exec (5 samples, 0.01%)</title><rect x="99.9871%" y="533" width="0.0129%" height="15" fill="rgb(238,105,10)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="99.9871%" y="517" width="0.0129%" height="15" fill="rgb(213,227,17)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="527.50"></text></g><g><title>do_syscall_64 (5 samples, 0.01%)</title><rect x="99.9871%" y="501" width="0.0129%" height="15" fill="rgb(217,132,38)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="511.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.01%)</title><rect x="99.9871%" y="485" width="0.0129%" height="15" fill="rgb(242,146,4)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="495.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.01%)</title><rect x="99.9871%" y="469" width="0.0129%" height="15" fill="rgb(212,61,9)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="479.50"></text></g><g><title>bprm_execve (5 samples, 0.01%)</title><rect x="99.9871%" y="453" width="0.0129%" height="15" fill="rgb(247,126,22)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="463.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.01%)</title><rect x="99.9871%" y="437" width="0.0129%" height="15" fill="rgb(220,196,2)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="447.50"></text></g><g><title>exec_binprm (5 samples, 0.01%)</title><rect x="99.9871%" y="421" width="0.0129%" height="15" fill="rgb(208,46,4)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="431.50"></text></g><g><title>search_binary_handler (5 samples, 0.01%)</title><rect x="99.9871%" y="405" width="0.0129%" height="15" fill="rgb(252,104,46)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="415.50"></text></g><g><title>load_elf_binary (5 samples, 0.01%)</title><rect x="99.9871%" y="389" width="0.0129%" height="15" fill="rgb(237,152,48)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="399.50"></text></g><g><title>begin_new_exec (5 samples, 0.01%)</title><rect x="99.9871%" y="373" width="0.0129%" height="15" fill="rgb(221,59,37)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="383.50"></text></g><g><title>perf_event_exec (5 samples, 0.01%)</title><rect x="99.9871%" y="357" width="0.0129%" height="15" fill="rgb(209,202,51)" fg:x="38828" fg:w="5"/><text x="100.2371%" y="367.50"></text></g><g><title>perf_event_enable_on_exec (4 samples, 0.01%)</title><rect x="99.9897%" y="341" width="0.0103%" height="15" fill="rgb(228,81,30)" fg:x="38829" fg:w="4"/><text x="100.2397%" y="351.50"></text></g><g><title>ctx_resched (4 samples, 0.01%)</title><rect x="99.9897%" y="325" width="0.0103%" height="15" fill="rgb(227,42,39)" fg:x="38829" fg:w="4"/><text x="100.2397%" y="335.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.01%)</title><rect x="99.9897%" y="309" width="0.0103%" height="15" fill="rgb(221,26,2)" fg:x="38829" fg:w="4"/><text x="100.2397%" y="319.50"></text></g></svg></svg>